<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[基础操作]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[alt 搭配鼠标左、右、中键来对物体进行旋转、缩放、移动。中键在单窗口与四窗口间切换 shift+v 来对物体显示效果进行个性修改 backspace键来对前一步命令和当前命令的切换 w键 快速切换物体自身坐标轴与世界坐标轴 shift和alt键搭配左键的一些快捷操作shift指以十增长，alt指数字以0.1增长 调整过后需要恢复时按右键]]></content>
      <categories>
        <category>c4d</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel函数if-countif]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E5%87%BD%E6%95%B0if-countif%2F</url>
    <content type="text"><![CDATA[if用于判断，countif用于数数 12if(logical_test,value_is_true,value_is_false)if（怎么样，则怎么样，否则怎么样） if中if的嵌套 1if(logical_teat,value_is_ture,if(logical_is_true,value_is_true,value_is_false)) if与and/or/not的配合使用12345IF(AND(Something is True, Something else is True), Value if True, Value if False)IF(OR(Something is True, Something else is True), Value if True, Value if False)IF(NOT(Something is True), Value if True, Value if False) 12countif()函数用于有条件的数数countif(区间，条件) countif只能数小于15位的字符串如果字符串值大于15位，则1countif(区间,值&amp;&quot;*&quot;)]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel文本处理-数学函数]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86-%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[left（）从左向右取 right（）从右向左取 mid（）从中间某一值向后开始取 find（）找某一个值所在的位置 len（）计算文本长度 lenb（）计算字节长度 如何提取数字和文本组合中的文本1文本中字节长度减去文本长度等于文本长度 进位（四舍五入） round（） roundup（） rounddown（） mod（）计算余数 int（）计算整数]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel数据有效性以及条件格式]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E6%95%B0%E6%8D%AE%E6%9C%89%E6%95%88%E6%80%A7%E4%BB%A5%E5%8F%8A%E6%9D%A1%E4%BB%B6%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[由于这两点理解起来简单，所以简单写 数据有效性即数据验证，它的作用是对单元格所能填写的值进行限定。 条件格式作用是对数据进行分析，给满足条件的数据设定需要的格式。可以搭配切片器（筛选器）来对数据进行分类分析。]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel函数基础及相对-绝对引用]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E5%87%BD%E6%95%B0%E5%9F%BA%E7%A1%80%E5%8F%8A%E7%9B%B8%E5%AF%B9-%E7%BB%9D%E5%AF%B9%E5%BC%95%E7%94%A8%2F</url>
    <content type="text"><![CDATA[12341 公式都是以等号开头2 算术运算符 + - * / % &amp;(连字符) ^(乘方)3 判断 true=1 false=04 单元格中文本的引用需要用双引号 例如:判断貂蝉那个技能具有无敌效果怎么做呢？我们知道二技能是无敌的，所以我们就判断一下是不是二技能，如果是就是true 否则就是false然后双击或者向下拉就是复制了 1为什么可以这样下拉就是复制了呢？这就是相对引用，相对引用指的总是左边的和上边的相对位置 1绝对引用：指的就不是相对位置，而是固定位置，可以按快捷键F4来切换或者在引用前加$符号]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel函数vlookup以及格式转换]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E5%87%BD%E6%95%B0vlookup%E4%BB%A5%E5%8F%8A%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[vlookup语法 vlookup函数用来在一张表格中(或者跨表格)水平查找需要的数据vlookup(查找值，查找区域，查找列，精确匹配0/模糊匹配1) 1231.凡是涉及到公式需要拖动（复制）时，都需要考虑查找区域的相对引用与绝对引用。2.跨表格引用时在选区时先点击另一张表的名称，然后选区，选区结束后必须先打逗号来结束选区的操作。3.模糊匹配数值时只会匹配小于等于自己的值。 vlookup使用通配符和格式转换 文本转数值 *1 或者 +0 或者 –数值转文本 &amp;“” 如果是数字去查找文本格式的数字是找不到的，那么需要将数字变成文本，在数字后加 &amp;”” 就会把数字当成文本处理 使用isna函数处理数字格式引起的错误 如果查找的两边既有数字又有文本，那么我们需要用到两次查找，第一次按照数字格式查找一遍，然后用文本格式查找一遍。需要用到 if函数 和 isna函数12if(isna(数字查找),文本查找，数字查找)` hlookup函数用于竖着一列进行查找，和vlookup用法相同。 vlookup函数只能从左向右查找，所以match函数与index函数的搭配使用使得查找更加灵活 column函数用来查找列，row函数查找行]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel函数rank]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E5%87%BD%E6%95%B0rank%2F</url>
    <content type="text"><![CDATA[rank(number,ref,[order])1rank(需要排位的数字，排位的区间，升序/降序排列) 12需要特别注意的是排序的区间必须要用绝对引用，否则区间是会变化的参数之间用英文的逗号分隔 默认排序是0，也就是降序排列的]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel中的下划线]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E4%B8%AD%E7%9A%84%E4%B8%8B%E5%88%92%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[2018-09-29本来是想录制gif放进来的，但是好麻烦。 excel中的下划线有很多方法可以打出来 1 文字下面加下划线都知道怎么打出来，但是想不到的是空白的地方下划线也可以这么打：先打几个空格，然后选中他们点击下划线按钮就可以了 2 文字后面要是有下划线怎么打呢？这个就比较复杂了首先是说比较简单的方法那就是手动画直线：插入-形状-直线然后按住shift键就可以画出水平的线了，还可以改线的颜色 3 接下来这个方法知道的人应该很少吧：依然是打空格，然后选中空格，添加下划线，但是当鼠标点击别的单元格时下划线就消失了，那么就需要让它显示出来：插入-符号-特殊符号-零宽度空格-插入 神奇吗？ 4 最后说一个简单的但不是直线的做法：shift+减号 （效果是断断续续的，并不是直线）]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[excel中时间与日期的计算]]></title>
    <url>%2F2019%2F05%2F02%2Fexcel%E4%B8%AD%E6%97%B6%E9%97%B4%E4%B8%8E%E6%97%A5%E6%9C%9F%E7%9A%84%E8%AE%A1%E7%AE%97%2F</url>
    <content type="text"><![CDATA[excel中的时间与日期计算算是比较复杂的一件事了，所以必须要掌握计算的原理。 时间与日期的计算实际上是用数值来运算的 一个单元格表示的就是一天，所以默认单位是：天 那么开始日期是什么呢? 我们可以知道1990年一月一日就是日期计数的第一天 对于时间而言同样的0.5天就是中午12点 运算就是先统一单位，然后计算，最后转换为需要的单位 这两个看起来复杂，其实理解了就懂了 我们始终要记得单元格运算的单位是：天 比如10：00，实质就是0.41666667天第一个30分钟，我们需要把它转换为天，30分钟/24/60 就得到以天为单位了第二个A12-B12 得到的单位是天，乘60乘24得到的就是分钟了 date，year，month,day这几个函数的简单应用]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018-02-01]]></title>
    <url>%2F2019%2F05%2F02%2F2018-02-01%2F</url>
    <content type="text"><![CDATA[#excel学习知识点四 如果你在excel中发现在做许多重复无脑的动作，那么你就要考虑是不是你的方法太复杂了 ####排序与筛选1.简单的排序（对数字排序）开始-排序与筛选-升序/降序/不要先选中需要排序的整列，那样容易造成只有这一列才排序的错误。而应该在需要排序这一列的某单元格上点击，选中某一个单元格 2.进阶排序1.如果是中文字怎么排序？ 如果直接对其排序，那么会像下面这样正确做法是使用高级的排序做法：开始-排序和筛选-自定义排序手动填写排序规则得到正确排序2.怎么对多列数据综合排序（例如需要对语文，数学，英语综合排序。语文相同的就比较数学，语文和数学相同就比较英语）最终效果3.怎么按照颜色这种格式排序？达到需要的效果4.当数据无法按照自身的格式规则排序时，那么我们可以考虑添加一些数据,对这些添加的数据进行排序来辅助我们达到需要的排序效果例如：需要再每位同学的上面都添加“语文，数学，英语”这几个标题那么如何做到呢？ #筛选1.简单的筛选开始-排序和筛选-筛选例如：怎么在数学中筛选出“12”的列？首先选择数学列的某一单元格，然后“开始-排序和筛选-筛选”，下拉三角箭头-取消全选-选择12,搞定，就是这么简单。筛选出来了可是筛选出来的数据中隐藏了许多过滤掉的列，怎么去掉这些隐藏的列呢？这里要用到前一节讲到的“定位” ，“开始-查找和选择-定位条件”，这样就可以将隐藏的列去掉了，是不是很厉害！ PS：多个列需要筛选时，各个筛选条件之间是“且”（同时满足多个条件才符合要求）的关系。筛选也支持模糊筛选等高级筛选，由于不好截屏，这里就不再赘述了。 2.高级筛选数据-筛选-高级高级筛选可以做什么？—–还记得在前面讲到过简单筛选是“且” 的关系，如果需要“或”（满足这个条件或者满足另一条件）的关系，这时就需要高级筛选了。—–另外，高级筛选可以将选出的数据中重复的选项去掉，这样的好处在于可以选出有多少类。 例如：怎么选出语文大于100，或者数学大于100的同学？数据-筛选-高级 做出来啦 技能点加成：同时按住 ctrl+shift+方向键 可以快速选取全部数据]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018-01-31]]></title>
    <url>%2F2019%2F05%2F02%2F2018-01-31%2F</url>
    <content type="text"><![CDATA[#excel学习知识点二###主要讲任意单元格右键的“设置单元格格式” ######（当某些数据无法对其进行正常操作时，可能是格式数据格式上的问题） 1.在一个单元格中换行———–按住alt+enter 2.excel打印时没有单元格的线，需要在右键格式中设置 3.格式刷作用，将之前选中的格式赋予之后需要相同格式的地方 4.在设置单元格格式中可以设置时间，日期等等一系列需要的格式（例如有时候将日期复制再粘贴之后发现不是原来的日期了，这时就要考虑是不是格式不正确导致的） A:这里举例说明货币与会计专用的区别，会计专用的钱币符号始终在最左侧，无论单元格有多宽。而货币始终跟随数字 B:如何填写“001”这样格式的数字 C:如何对同行或同列的数值进行批量添加等格式化操作PS：这些数值仍然可以进行求和等公式运算，数值格式保留不变（仍然可以求和） D:如何对数据进行隐藏 E:设置需要的日期格式——-年为yyyy(year),月为m(month,天为d(day)——-3个m(mmm)代表英文缩写月份；4个m(mmmm)代表英文全写月份。d的写法一样——-3个a(aaa)代表星期的大写缩写，4个a(aaaa)代表星期的全写 F:excel每个单元格只保留15位数字，所以当需要填入超过15位数字的时候，需要将其转化为文本格式，具体做法是先转化为文本格式再填写数字（例如需要填18位的身份证号码） G:文本格式的数字无法进行函数运算，需要转化为数字格式才可以。方法是同时选中需要运算的单元格，单击左上角出现的黄色图标，选择转化为数字。 5.excel数据-分列工具的使用（很强大）—–可以用来进行文本与数字格式的转化，其中包含了许多格式上便利的操作—–也可以用来对从其他地方复制过来的文本进行列的划分例如文本格式的日期无法进行格式的转化时，需要进行数据-分列-直接点击完成既可，然后可进行格式之间的转化 好喝的鸡汤：即使是在冬日里，心里也要像夏天一样温暖]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018-01-31-1]]></title>
    <url>%2F2019%2F05%2F02%2F2018-01-31-1%2F</url>
    <content type="text"><![CDATA[#excel学习知识点三 excel中具有相同格式（例如颜色，字体，文本，日期，）的不按规律分布的数据的快速查找与替换。 开始-查找和选择-查找(ctrl+f)/替换(ctrl+h)/转到(ctrl+g)####查找与替换 一：最基本的替换：直接输入需要替换的数据 二：基于模糊匹配的查找与替换（只给出某一部分条件，没有给出精确查找对象）1----无限匹配：* （* 表示多个字符）例如：将以周（包含周三与周四）开头的全部替换为工作日2----只匹配一项：? (? 表示一个字符)例如：需要将&quot;燕凌等风与燕凌等雨替换为燕凌等雪，而燕凌等风姣不被替换&quot; ######如果和?是作为表格中的字符，那么取消其匹配作用需要在其前面添加波浪号:~例如：将周替换为周八而周三不被替换 三：基于格式的查找与替换例如1：将星期六替换为有填充颜色的格式 例如2：将所有以浅绿色为填充色格式的替换为以橙色为填充色格式 ####定位/转到 一：名称框定位（选中连续多行/多列）—-行定位 —-列定位 —-名称定位 高级定位开始-查找和选择-定位条件 ####批注 用来做一些小的标记，笔记等单元格右键-插入批注然后即可填写，在鼠标悬停到上面时显示批注 1—–可以将单个批注始终显示出来（不需要鼠标悬停）单元格右键-显示/隐藏批注2—–将所有的批注都显示出来/隐藏审阅-显示所有批注 批注的个性化设置怎么做到上面的批注样式？1.—插入-形状**任意单元格右键-插入批注** 批注的定位开始-查找和选择-定位条件-选择批注-确定然后可以对所有批注进行操作 (在上面可以进行其他条件的定位，非常好用，批量操作) 这是一碗毒鸡汤吗？：明天天气很好，出去透透气吧！]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018-01-30]]></title>
    <url>%2F2019%2F05%2F02%2F2018-01-30%2F</url>
    <content type="text"><![CDATA[写在前面：1.首先在这里要感谢小佩老师的无私奉献，为老师可贵的精神鼓掌（此处应该有掌声）这是老师课程的链接点击可看老师详细教程。2.再就是给咱们的暖男大张同学一些学习笔记，一起学习，共同进步。 #excel学习知识点一 1.交换整行/列———–首先选中整列，按住shift+鼠标拖动单元格边框 2.选中多行/列 *———–按住shift+单击标签边框（如果要选中连续的n行/列，只需按住shift选中1和n两个标签） *———–如果行列太多，可以在名称框手动输入，中间需要冒号。例如：选中A1到A5，输入a1:a5 3.调整行列宽度 *———-（自动适应）在行标签边框的右双击或在列标签边框的下双击（可选多行或列） *———-（等间距调节）选中多行/列的时候，鼠标移动行/列标签边框 4.插入行/列 *———-（单行/列）在选中的行/列标签右击插入 *———-（多行/列）选中多行列标签（选中的行列数即为插入的行列数）右击插入 5.如何在整行/列中快速移动到首或者尾（行列连续无空行列）——-在任意的单元格边框上下双击到达列的首或尾/左右边框双击则到达行的首或尾 6.冻结行列（作用是在滚动行列时某些行列不被覆盖，保持固定不动，例如标题、序号） *———-（冻结首行/首列）视图-冻结窗格-冻结行/列首 *———-（冻结连续多行/列）选中m行n列的窗格-视图-冻结窗格-冻结拆分窗格（效果是冻结前m-1行前n-1列） 7.快速在单元格中填入今天的日期———ctrl+: 8.填充柄（选中的单元格右下角出现的点，作用是复制填充一系列有规律的内容） *———-（复制）方法一：选中单元格拖动右下角即可进行复制方法二：或者可以先选中要填充的单元格，然后输入一个需要复制的内容，ctrl+enter。方法三：需要用到第三节讲到的条件定位如何在这些空白区域内填充与上面一样的文字？1.首先选中需要填充的区域2**开始-查找和选择-定位条件-空值-确定**3.直接填入：=↑ （等于和上箭头）4.ctrl+enter即可达到复制效果 *———-（顺序1递增）选中单元格CTRL+拖动右下角即可 *———-（有序递增）在连续单元格中填充递增的两个数字，然后选中这两个单元拖动右下角即可进行递增 *———-（其它格式）右键拖动，主要针对日期 日期的复制`ctrl+:’ 填充日期——直接拖动则递增排序—–按住ctrl拖动则是复制]]></content>
      <categories>
        <category>excel</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[类，对象，方法]]></title>
    <url>%2F2019%2F05%2F02%2F%E7%B1%BB%EF%BC%8C%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[怎么写一个类，就这样写了，class 名字{代码块}前面是不是还有个public，它呢就是为了推销自己，让别人都可以调用它。如果是个private,那就尴尬了。 12345678910111213public class Function &#123; int width; int height; public int multi()&#123; //这里的int就是需要return一个数值的。给谁呢？山人自有妙用。 return(this.height*this.width); &#125; public void divi()&#123; // void就不需要返回数值了，自己用就好 System.out.println(multi()/20); &#125; public Function()&#123; &#125;&#125; 注意到最后那个B没有，和class名字相同，它有名字的，叫构造函数，要他有何用呢？看下面的对象咋来的，是不是调用了一个叫Function的函数，没错了，这就是我们所说的对象的实例化，把类实例化为对象，就是用的这个函数了。当然了，除了这个，他还有一点作用，就是给类里面的属性给初值，初次之外毫无用处。123456789public class Main &#123; public static void main(String[] args) &#123; Function function=new Function(); function.width=100; function.height=50; System.out.println(function.multi());//有返回值啊，直接露出原形吧。 function.divi(); &#125;&#125; 类实例化为对象，用到了一个关键字叫new，除了这个还有其他的，如果是一个抽象类的话，就不能用new了，举个例子： Calendar calendar=Calendar.getInstance(); 至于为什么这么写，我也不清楚，为啥啊/(ㄒoㄒ)/~~你管他那么多，上天安排的最大嘛！不过都是将一个函数给了另一个变量，然后可以用class的方法了。 方法为啥都有一个括号，为了传参数，虽然这里没有传参数，但是不代表不可以啊。格式什么的懂就行。 有话就直说，我喜欢《西游之大闹天宫》里的小狐狸]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[接口，抽象]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%8E%A5%E5%8F%A3%EF%BC%8C%E6%8A%BD%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[interface（接口）和 abstract（抽象）都是为了做一件事，那就是将方法与方法体（实现）分离。有什么实际意义，分工合作吧。 但是又有自己的特点，不然就叫一个名得了。123456789public abstract class Calculate &#123; double num1; double num2; public abstract void add(double num1,double num2); public abstract void sub(double num1,double num2); public abstract void mul(double num1,double num2); public abstract void div(double num1,double num2); public abstract void mod(double num1,double num2);&#125; 1234567891011121314151617public class Method extends Calculate&#123; public void add(double num1,double num2) &#123; System.out.println(num1+num2); &#125; public void sub(double num1,double num2)&#123; System.out.println(num1-num2); &#125; public void mul(double num1,double num2)&#123; System.out.println(num1*num2); &#125; public void div(double num1,double num2)&#123; System.out.println(num1/num2); &#125; public void mod(double num1,double num2)&#123; System.out.println(num1%num2); &#125;&#125; 抽象类不能实例化为对象，但是被继承后就好说话了，继承后的类就和普通的类一样了，可以实例化。然后调用这些方法1234567891011121314151617181920212223242526272829303132333435363738import java.util.Scanner;public class Cal &#123; public static void main(String[] args) &#123; Method method = new Method(); double num1=0,num2=0; int choose=1; for(;;) &#123; try &#123; Scanner scanner = new Scanner(System.in); System.out.println(&quot;输入第一个数值&quot;); num1 = scanner.nextDouble(); System.out.println(&quot;输入第二个数值&quot;); num2 = scanner.nextDouble(); System.out.println(&quot;1.+ 2.- 3.* 4./ 5%&quot;); choose = scanner.nextInt(); &#125; catch (Exception e) &#123; System.out.println(&quot;输入不正确&quot;); &#125; switch (choose) &#123; case 1: method.add(num1, num2); break; case 2: method.sub(num1, num2); break; case 3: method.mul(num1, num2); break; case 4: method.div(num1, num2); break; case 5: method.mod(num1, num2); break; &#125; &#125;&#125;&#125; 接口？差不多。区别就这么点1interface Calculate &#123;方法名&#125; 1public class Method implements Calculate&#123;方法体&#125; 不过，抽象类里还可以有自己的方法体，而接口就纯接口，抽象类只能被一个继承，而接口可以被很多去实现。 快下课了，回去了！]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[堆，栈内存分析]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%A0%86%EF%BC%8C%E6%A0%88%E5%86%85%E5%AD%98%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[这是一个数据流，将李白这个对象写入到文件中。12345678910111213141516171819202122232425262728293031323334353637package fileOperatiion.fileSerializable;import java.io.*;public class WriteWithSerialize &#123; public static void main(String[] args) &#123; StudenInfo stu=new StudenInfo(); stu.setName(&quot;李白&quot;); stu.setAge(18); stu.setGender(&quot;男&quot;); File file=new File(&quot;/home/narcissus/Desktop/studentinfo&quot;); FileOutputStream fs= null; ObjectOutputStream oos=null; try &#123; file.createNewFile(); fs = new FileOutputStream(file); oos= new ObjectOutputStream(fs); oos.writeObject(stu); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; try &#123; if(oos!=null)&#123; oos.close(); &#125; if(fs!=null)&#123; oos.close(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125; 整个抄写下来也是懵的，不知道是啥意思，为什么是这样写的。然后也是找了许多资料才明白了一丢丢：)看下图： 内存分析是很重要的。 StudenInfo stu = new StudenInfo(); 这句话做了啥呢？三件事 1变量stu前面的不仅仅可以放数据类型（int ，string等），还可以放类，对象等。其实是在栈中声明了一个局部变量，这个变量是对前面的引用。比如这里就是定义了一个stu的变量，这个变量是对StudenInfo类的引用。 2 new StudenInfo 在堆中创建了一个StudentInfo类的对象。 3 将创建的对象地址给到变量stu。 然后下面的这段也就不那么难理解了，只不过是把这些拆开了写，目的是什么呢？因为作用域的关系，为了后面写close（）方法，所以只能把初始化变量和实例化对象分开写。 FileOutputStream fs= null; //变量fs对类的引用，并赋初值。 ObjectOutputStream oos=null; try { file.createNewFile(); fs = new FileOutputStream(file); //实例化对象，并将地址给到变量fs oos= new ObjectOutputStream(fs); oos.writeObject(stu); //oos的地址是对象ObjeOutpuStream，这里调用对象的writeObject()方法。 } catch (Exception e) { e.printStackTrace(); } 然后是读文件操作1234567891011121314151617181920212223242526272829303132333435package fileOperatiion.fileSerializable;import java.io.File;import java.io.FileInputStream;import java.io.ObjectInputStream;public class ReadWithSerialize &#123; public static void main(String[] args)&#123; File file =new File(&quot;/home/narcissus/Desktop/studentinfo&quot;); FileInputStream fis=null; ObjectInputStream ois=null; try&#123; fis = new FileInputStream(file); ois = new ObjectInputStream(fis); //怎么读一个Object？ StudenInfo stu=(StudenInfo)ois.readObject(); System.out.println(stu.getName()+stu.getAge()+stu.getGender()); &#125;catch(Exception e)&#123; e.printStackTrace(); &#125; finally &#123; try &#123; if(oos!=null)&#123; oos.close(); &#125; if(fs!=null)&#123; oos.close(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[匿名类，增强for循环]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%8C%BF%E5%90%8D%E7%B1%BB%EF%BC%8C%E5%A2%9E%E5%BC%BAfor%E5%BE%AA%E7%8E%AF%2F</url>
    <content type="text"><![CDATA[forearch简称为增强for循环，目的是为了简化for循环 12for(数据类型 每次循环的名称 : 循环对象)&#123; &#125; 匿名类之前一直以为一个方法method（）只能传值进去，今天才发现原来对象也可以当做参数传进去。之前一直以为接口和对象都不能直接实例化为对象，都需要继承后才能实例化，今天才发现原来也可以，只要做成匿名类就好了。so，new bird。天真为啥接口可以直接实例化为对象，首先想想之前是咋做的。需要一个类去继承它，继承之后可以实例化，怎么继承？必须实现父类的方法。所以本质是实现方法，这也是为什么匿名类可以实例化的前提，那么实例这个接口就必须把方法实现。 匿名类其实就是相当于实现接口或者实现抽象类的一个具体类 下面就是一个文件过滤的功能：找出家目录里以rc结尾的所有文件123456789101112131415161718192021import java.io.File;import java.io.FileFilter;public class FilterFile&#123; public static void main(String[] args) &#123; File file=new File(&quot;/home/narcissus&quot;); //File类实例化对象 //这个File[] 是个什么鬼？数组？可以这么写？ File[] grade=file.listFiles(new FileFilter() &#123; //FileFilter接口的构造函数的匿名实例化 public boolean accept(File file) &#123; //方法的实现，自动补全 if(file.getName().endsWith(&quot;rc&quot;))&#123; return true; &#125; return false; &#125; &#125;); for(File f:grade) &#123; //增强for循环，之前一直不会写 :) System.out.println(f.getName()); &#125; &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一些基础]]></title>
    <url>%2F2019%2F05%2F02%2F%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[怎么描述数据的类型：分类，资源合理利用。 整形：byte short int long 浮点：float double 布尔：boolean 字符串：String （复合数据类型） 怎么存放值：当然是放内存里了傻的，怎么找到他？起个名来指向这个地址 常量：由final来定义。确认过眼神，不会变了 final a=1； 变量：随着程序运行而变化，变化多端，不喜欢，总喜欢跟着别人混，还混出了一个圈子，叫作用域。 int b=1； 一个程序只有一个main方法（专一，可以），程序从main开始执行，直到main方法结束，然后程序也就可以休息了 一个程序由类，对象，方法等构成。但是方法很重要。 那么什么是类呢，为什么需要类？为了程序的简洁，不需要写许多重复的东西，都知道把具有相同数据类型的放在一起组成数组比较好，多简单。那么不同数据类型的怎么放一起呢，可以用代码块啊，但是怎么去调用呢，得起个名字才行，就叫class（类）了。 既然有类了，那么是不是可以了呢？当然不行，如果就这样直接调用的话，那类的作用就不大了，因为只能放一组数据。所以就有了对象（object），我们把类实例化（把类变成对象的过程有个名字叫实例化）为许多许多的对象，这样类的作用就体现出来了。超多的 对象和类都有了，就下来就是方法（method）了。方法也可以叫函数，就是用来实现一个小功能的代码块，写哪里呢？写class里吧，那样就可以被对象放肆的调用了 1234567891011121314151617public class Calculate &#123; int firstnum; int secondnum; public void add()&#123; System.out.println(firstnum+secondnum); &#125; public void sub()&#123; System.out.println(firstnum-secondnum); &#125; public void mul()&#123; System.out.println(firstnum*secondnum); &#125; public void div()&#123; System.out.println(firstnum/secondnum); &#125;&#125; 12345678910111213141516171819import java.util.Scanner;public class Cal &#123; public static void main(String[] args) &#123; Scanner input=new Scanner(System.in); Calculate num=new Calculate(); //将类转为对象 System.out.println(&quot;输入第一个数字&quot;); num.firstnum=input.nextInt(); System.out.println(&quot;输入第二个数字&quot;); num.secondnum=input.nextInt(); System.out.println(&quot;1.+ 2.— 3.× 4./&quot;); int math=input.nextInt(); switch(math)&#123; case 1:num.add(); break; //对象.方法 case 2:num.sub(); break; case 3:num.mul(); break; case 4:num.div(); break; &#125; &#125;&#125; 学了三个星期了，理解的还是很肤浅，后面的学的有点郁闷，所以总结一下了，基础很重要。还是那句话，写代码是很优雅的事，所以为了让她变得优雅要好好学。拒绝浮躁！]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux-jdk1-6的安装步骤]]></title>
    <url>%2F2019%2F05%2F02%2Flinux-jdk1-6%E7%9A%84%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[首先下载jdk1.6的二进制文件(可以直接安装，不要解压)链接：https://pan.baidu.com/s/19lcBWUeYoM3kgaJQ-ybsrQ提取码：frd9 然后通过xshell将jdk传输到linux中 rz 在linux中创建jdk安装目录 sudo mkdir /usr/java 复制jdk到/usr/java目录下 sudo cp ~/jdk-6u45-linux-x64.bin /usr/java cd /usr/java ls 修改jdk文件权限 sudo chmod 775 jdk-6u45-linux-x64.bin 安装jdk ./jdk-6u45-linux-x64.bin 配置jdk环境变量 sudo vim /etc/profile 添加 JAVA_HOME=/usr/java/jdk1.6.0_45 CLASSPATH=.:$JAVA_HOME/lib/tools.jar PATH=$PATH:$JAVA_HOME/bin export JAVA_HOME CLASSPATH PATH 刷新一下，使配置环境变量生效 source /etc/profile 查看是否安装成功 java -version 1. 以上步骤需要对照自己安装目录这些什么的进行修改，如果操作步骤和我一样可以直接复制2. 另外如果提示那条命令权限不足，就在命令前面添sudo]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[建表及简单操作]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%BB%BA%E8%A1%A8%E5%8F%8A%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[SQL：结构化查询语言(Structured Query Language) 属于lamp/lnmp中的m(MySQL) 创建数据库 1.创建数据库，设置utf8支持中文1create database 数据库名 default character set utf8; ps:我在这里又上了一次当，这里其实只有一句话，建表和设置字符集是同一句话，因为我分开了写，所以老是报错，设置不了中文支持。 :) 2.查询所有的已经存在的数据库1show databases; 数据表 1.进入数据库1use 数据库名; 2.创建表123456create table if not exists 表名( 列名 数据类型 primary key, 列名 数据类型, ..... 列名 数据类型); 需要注意的事项：自增长可以自动在主键生成有序列表 在primary key后加 123456主键 primary key 必须唯一，一个表只有一个主键。列名（不能是关键字 必须是英文）表名不能有连字符```-```，只能使用 字母加下划线这种3.查询所有已经存在的表 show tables;14.给表中写入数据 insert into 表名(列名,列名,….,列名) values(值,值….值);15.查询表中所有的数据 select * from 表名;12345---到这里数据表已经建好了，接下来就是对数据的修改了，修改之前先备份&gt;修改数据库1.修改之前先备份表数据（很重要） create table 数据表名_bak as select * from 表名;12.添加列或者备用列 alter table 表名 add 列名 列名的数据类型;alter table 表名 add bak 列名的数据类型；13.添加状态列,可以配合条件查询来显示不需要的数据 alter table 表名 status char14.加列类型的长度 ater table 表名 modify column 列名 类型；15.配合条件语句的查找，修改指定的一条数据 update 表名 set 列名=值,列名=值,…. 列名=值 where 主键=值16.删除整条数据 delete from 表名 where 列名=值/主键=值17.显示中文表名 select 列名 替换的中文名,列名 替换的中文名 from 表名；18.条件查询 select * from 表名 where 列名=值` 自增长1.有上限 在主键后添加 auto_increment2.无上限 select uuid]]></content>
      <categories>
        <category>sql</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows使用cmd操作mysql]]></title>
    <url>%2F2019%2F05%2F02%2Fwindows%E4%BD%BF%E7%94%A8cmd%E6%93%8D%E4%BD%9Cmysql%2F</url>
    <content type="text"><![CDATA[在linux终端上操作MySQL似乎很简单，其实在windows下的cmd中同样简单。并不需要安装其它软件的 win+s 搜索cmd 右键管理员运行 net start mysql 启动MySQL服务 mysql -uroot -p 启动MySQL show databases; 显示数据库 use mysql; 使用那个数据库 show tables; 显示表 select * from db; 显示表内容 exit; 退出mysql net stop mysql 关闭MySQL服务]]></content>
      <categories>
        <category>sql</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[面的输入]]></title>
    <url>%2F2019%2F05%2F02%2F%E9%9D%A2%E7%9A%84%E8%BE%93%E5%85%A5%2F</url>
    <content type="text"><![CDATA[建模可以从线开始生成面，也可以直接从面开始，也可以直接画一个体。具体从哪里开始取决于那种方式最简单。 曲面: 1 SrfPt ：从点开始生成面（指定3或4个点）2 PlanarSrf ：从线生成面，这些线要在同一平面且闭合 3 NetworkSrf ：线生成面，可以用于不在同一平面的线，线之间要有交点，即有相交的部分4 Loft ：线生成面，可以用于不在同一平面的线，线之间没有交集，即有空隙5 EdgeSrf ：线生成面，可以用于不在同一平面的线，从3或4根线生成，这些线最好是相互连接，闭合，这样生成的面就会以这些线为边缘，否则生成的面不规则6 Patch ：线生成面，可以用于不在同一平面的线，由一些相交的线生成 7 Plane ：生成矩形平面8 CutPlane ：用矩形平面对其他部分进行切割 9 PictureFrame ：将图片放到矩形平面中，并可以对其进行渲染（平面可以打开其控制点F10进行变形） 10 ExtrudeCrv ：将线框/曲线挤出成面11 ExtrudeCrvAlongCrv ：将线框/曲线沿着线挤出成面12 ExtrudeCrvTapered ：将线框/曲线渐变缩小挤出成面13 ExtrudeCrvToPoint ：将线框/曲线挤出至一点14 Ribbon ：将线框/曲线延伸成带状，环状15 Fin ：将线框/曲线沿着曲面的法线方向挤出 16 Sweep1 ：同1117 Sweep2 ：将线框或曲线沿着两条线流动成面 18 Revolve ：将线框或曲线进行任意角度旋转 19 Drape ：制作布料效果 20 HeightField ：通过图片灰度制造起伏的效果，适合做凹凸不平的地面]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[面的编辑]]></title>
    <url>%2F2019%2F05%2F02%2F%E9%9D%A2%E7%9A%84%E7%BC%96%E8%BE%91%2F</url>
    <content type="text"><![CDATA[对面进行编辑 1 ExtendSrf ：延伸曲面，与ExtrudeCrv不同的是它延伸的与原来的面是一个整体，还是同一个面 2 FilletSrf ：对两个曲面连接部分进行圆角，圆角半径大小可能对结果有影响，太大可能出现错误3 ChamferSrf：对连接的两个曲面进行倒角 4 VariableFilletSrf : 同2，不同点是可以不等距圆角5 VariableChamferSrf : 同3，不同点是可以不等距倒角 6 BlendSrf : 对不相连接的两个曲面进行曲面衔接 ，效果比较好，可以对其进行控制点调节 7 OffsetSrf : 将曲面进行复制并偏移8 VariableOffserSrf ： 将曲面进行复制并不等距偏移 9 SetSurfaceTangent : 对曲面进行曲率调节 10 MatchSrf : 对两个分开的曲面进行衔接，以正切的方式，过度很平滑，不过原曲面会改变11 MergeSrf : 对两个公用一条边的两个面进行曲面连接12 ConnectSrf : 对两个分开的延长线相交的面进行延长线连接 13 Symmetry : 对称，原物体形状改变，则对称的也会改变14 Mirror ： 镜像，原物体形状改变，对称的不会改变 15 Rebuild : 对原物体进行控制点的重新分布，增加或减少16 RebuildUV ：对原曲面的UV方向上的分段数和方向进行改变17 FitSrf : 对原曲面的控制点进行智能减少 18 SplitEdge ：对曲面的边缘进行分段19 MergeEdge ： 将曲面边缘有分段的边缘进行融合为一条没分段的线]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[边缘线断开了怎么办]]></title>
    <url>%2F2019%2F05%2F02%2F%E8%BE%B9%E7%BC%98%E7%BA%BF%E6%96%AD%E5%BC%80%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E%2F</url>
    <content type="text"><![CDATA[有时候会发现一个面的边缘线断开了，可是又要选取整个曲线才能操作（比如说loft（放样），sweep2（双轨）） mergeedge 可以帮你省去所有烦恼，将断开的边缘性连接起来。好极了（我不要听 join 这种废话，醒醒吧，没用的，哈哈） 现在可以开心的loft了]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[特殊曲线的输入]]></title>
    <url>%2F2019%2F05%2F02%2F%E7%89%B9%E6%AE%8A%E6%9B%B2%E7%BA%BF%E7%9A%84%E8%BE%93%E5%85%A5%2F</url>
    <content type="text"><![CDATA[1 InterpcrvOnSrf ：在曲面上画线 2 CurveThroughSrfControlPt : 通过曲面的控制点画曲线 3 从曲面提取曲线 4从其它曲线生成曲线 5 从曲面生成线 6 当使用了extract(抽离曲线)命令后，无法打开原物体的控制点，需要使用 solidpton 这个命令]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[有没有觉得filletsrf后生成的面是断开的]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%9C%89%E6%B2%A1%E6%9C%89%E8%A7%89%E5%BE%97filletsrf%E5%90%8E%E7%94%9F%E6%88%90%E7%9A%84%E9%9D%A2%E6%98%AF%E6%96%AD%E5%BC%80%E7%9A%84%2F</url>
    <content type="text"><![CDATA[对两个生成的曲面进行倒角 filletsrf ，发现生成的面是两个断开的 以前我看一个大神的视频，还没搞懂为什么一定要那样做，现在才发现他那样做是有道理的，而且就是解决这个问题的。1.首先关掉要倒角的两个曲面的ISO线会发现这两个曲面的接缝线并没有重合在一起，而是有一段的距离，这就是产生上面倒角后出现断裂面的原因 2.所以我们需要手动调解一下这个接缝线：srfseam 3现在倒角就不会出现生成断开面的情况了]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[曲面分割容易忽略的细节]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%9B%B2%E9%9D%A2%E5%88%86%E5%89%B2%E5%AE%B9%E6%98%93%E5%BF%BD%E7%95%A5%E7%9A%84%E7%BB%86%E8%8A%82%2F</url>
    <content type="text"><![CDATA[对于分割的曲面有两种方法可以做到，但是要选择好的第一种是先画好线，分割好，然后生成面第二种是先画好线，生成面，然后分割 第二种更好：因为第一种曲线分割之后，控制点会增多，即每条新分割出来的都会是原来数目的控制点数，这样生成的曲面就变得很复杂了。第二种生成的面控制点比较均匀，而且分割之后通过shrinktrimsrf缩回控制点，达到比较好的效果，可以rebuildsrf，调整控制点等这些命令，可以达到理想的造型，而且曲面很平滑 总之生成的面控制点越少越好，如果不够的话再rebuildsrf增加就是了]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[对线和物体造型的操作]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%AF%B9%E7%BA%BF%E5%92%8C%E7%89%A9%E4%BD%93%E9%80%A0%E5%9E%8B%E7%9A%84%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[1.F10 / pointson 打开控制点 F11 / pointsoff 关闭控制点 2.editpton 打开编辑点（只对曲线有效）solidpton 打开物体的编辑点（只对体有效）]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[堪称利器]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%A0%AA%E7%A7%B0%E5%88%A9%E5%99%A8%2F</url>
    <content type="text"><![CDATA[之前写了那么多，发现并不好，没有什么条理。忽然之间发现真正的好东西就在身边，那就是犀牛的帮助手册，真的是写的好，条理清晰，解释透彻，还有小视频教程。超级好，所以以后就只写那些特别好用的功能。这里是帮助手册链接(在犀牛里按F1也可到达帮助界面) 这里要说的是以前一直让我不知所措的一个东西，那就是如何在需要的平面画线什么的。因为在画线的时候，虽然开了物件锁点，可是没有物件吸附的那些点又画到了世界坐标平面，真的是忒难受，（常用的方法是按住ctrl画，然后调点，很麻烦，或者干脆画一个平面去满足它，但这个平面不一定好画，画完之后还需要删除，或者画好之后移动过去），但是都不是很好用so——今天发现了两个好命令，那就是 cplane mplane cplane是将坐标平面进行各种平移旋转等等等操作（总之功能好多），可以只在一个视图里面改，也可全局 mplane是在一个任意的平面去画你想要的平面，前提是你已经有一个平面为基础，以这个平面为参照，它的好处是坐标会跟随物体的移动旋转等而发生改变，很有用 值得注意的是：在mplane命令修改平面后需要使用cplane恢复原来的世界坐标平面，在里面选择world，这样就恢复过去了，另外透视图使用的是top视图]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[基础设置（快捷键等以及直线的输入）]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE%EF%BC%88%E5%BF%AB%E6%8D%B7%E9%94%AE%E7%AD%89%E4%BB%A5%E5%8F%8A%E7%9B%B4%E7%BA%BF%E7%9A%84%E8%BE%93%E5%85%A5%EF%BC%89%2F</url>
    <content type="text"><![CDATA[rhino正式从今天学习，目的：熟练。参考资料：rhino自带的帮助手册写在前面：rhino的学习如果只是靠鼠标点击那些小的图标来操作，眼睛会受不了，速度也提不上来，这或许是我以前不喜欢rhino的原因吧，但是如果用命令来操作的话，就不要太方便，简直了，很好用。可以随便的布尔，曲面建模真的还是比较舒服的，不需要像C4D中那样考虑布线。so，我要好好学 首先将犀牛的界面进行一下调整：file-properties-general-command lists 写入 Testtoggleroundpoints 将控制点改为圆形file-properties-view-display modes-wireframe-objects-control point size 输入4 将控制点的大小变大file-properties-view-display modes-wireframe-objects-curves-curvewidth 输入2 将线的宽度变宽 1.直线的输入：2D平面坐标：在知道长度坐标的情况下，直接输入 x,y3D平面坐标：直接输入 x,y,z2D世界坐标(world coordinates)：输入：wx,y3D世界坐标：输入：wx,y,z 2 以某一个角度画直线：输入：&lt;angle (angle是某一确定角度)以某一个定长画直线：输入：长度数字以上一个点为基准需要向输入需要的长度(relative coordinates)：输入：rx,y 3 以某一长度同时某一角度确定下一点，画直线：输入：@长度&lt;角度 或者 r长度&lt;角度 （@distance&lt;angle / r distance&lt;angle） 4 方向锁定，tab键：需要直线通过一条曲线的末端，然后以这个方向延长，在经过这个末端时按一下tab键 5 轴向锁定，ctrl键：按住ctrl键，在移动或确定下一个点，即下一个位置是在轴向上。 6 物体的复制：按住alt拖动物体，则进行了复制 7 ctrl +shift + RMB(右键) ：旋转视角 8 ctrl + shift + LMB(左键) : 在gumball(操作轴)开启的情况下，可以移动一个物体的子层级，例如一个box的边，面，在正常模式下是无法选中它们的，但是ctrl + shift + LMB(左键)可以选中，然后对其进行移动拉伸，非常方便，就像在C4D中一样，不要太好用，😄]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[在面上打孔]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%9C%A8%E9%9D%A2%E4%B8%8A%E6%89%93%E5%AD%94%2F</url>
    <content type="text"><![CDATA[如果有许多的真实的孔需要打（有一定的深度），而不是在渲染的时候贴图做纹理等来达到打孔的效果的话（无深度），那么就要掌握打孔的命令，然而这个命令还有点奇怪的地方。 这是一个直接建立的球体，然后在上面画了七个圆，准备在上面打孔如果直接打孔的话是这样子的：makehole 然而我需要的只是一个孔洞，不是有这样的深度。因为这样打的孔那个孔深度的方向无法控制，而我需要的是沿着曲面的法线方向的孔洞这是因为这个球体是未修剪过的曲面，我们只需要把这个球体修剪一下就可以达到需要的效果（原理嘛，这个，我也不懂） 就这样子咯，开心😂对了，还有一个好玩的命令叫turntable]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于倒角的一个问题]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%85%B3%E4%BA%8E%E5%80%92%E8%A7%92%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[在对一个物体倒角的时候，发现有的边无法选择然后使用showedges命令，发现那两条边是裸露的边，不是物体的边，所以选不中出现这个问题的原因是因为，在生成那两个面的时候，出现了问题：我使用的是双规扫掠这个命令生成的面，无法使用edgesrf这个命令，因为上面的两个面是分开的，但是明明就是组合在一起了的，这个问题我遇到好多次了，一直没有好的解决办法 所以只能将那两个面删除，然后使用patch这个命令，生成的面就没有裸露的边缘了，然后可以倒角 PS：在两个面之间无法倒角的时候，可以将面先提取出来，然后使用offsetcrvonsrf来得到一条面上的线，将不需要的面剪切掉，然后使用混接曲面就可以做到了]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一个另类切割命令]]></title>
    <url>%2F2019%2F05%2F02%2F%E4%B8%80%E4%B8%AA%E5%8F%A6%E7%B1%BB%E5%88%87%E5%89%B2%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[trim在切割工具里面 用的是比较多的wirecut是另一个好用的切割工具，它的效果类似于先分割先分割再加盖吧，三维切割？（我也不太确定）]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[flowalongsrf]]></title>
    <url>%2F2019%2F05%2F02%2Fflowalongsrf%2F</url>
    <content type="text"><![CDATA[这个的做法就是先建一个球，然后createuvcrv得到球的uv曲线，通过这些uv曲线建立一个平面，因为后面flowalongsrf需要用。再建立需要流动的实体。然后就是flowalongsrf命令：选择流动的实体，选择uv曲面，选择应用的球。]]></content>
      <categories>
        <category>rhino</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[网络知识及测试点]]></title>
    <url>%2F2019%2F05%2F02%2F%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E5%8F%8A%E6%B5%8B%E8%AF%95%E7%82%B9%2F</url>
    <content type="text"><![CDATA[web网络三层结构展现层/web server，显示数据或者接受用户的输入—-应用程序逻辑、逻辑层、事物层—-数据层/database server 客户端–web服务器–应用程序–数据服务器 负载均衡：在多个服务器随机获取数据，降低单个服务器压力 b/s网络结构模式browser/server：客户通过浏览器访问服务器资源，客户端零维护c/s网络结构模式client/server：利用两端硬件资源，降低服务器开销。需要针对不同操作系统开发不同版本，更新代价高，效率低 activeX：软件组件或对象，可以插入到web网页中提高浏览器效率。比如flashajax异步处理asynchronous javascript and xml:在浏览器与web服务器之间使用异步数据传输（http请求），可以使网页从服务器请求少量信息，而不是整个网页。是一种独立于web服务器软件的浏览器技术。可使因特网应用程序更小、快、友好。 ria（Rich Internet Applications）丰富互联网程序，具有高度互动性、丰富用户体验以及功能强大的客户端 web2.0特点：用户参与网站内容制造web2.0更加注重交互性符合web标准的网站设计web2.0网站与web1.0没有绝对的界限web2.0的核心不是技术而在于指导思想 web核心技术：协议类型域名端口号页面文件url地址参数 动态页面vs静态页面：静态HTML指的是使用单纯的HTML或者结合CSS制作的包括图片、文字等的只供用户浏览但不包含任何脚本、不含有任何交互功能的网页！ 动态的HTML指的是网页不仅提供给用户浏览，网页本身还有交互功能，存在着在脚本如JAVASCRIPT，并利用某种服务器端语言如PHP等实现如用户注册，用户登录，上传文件，下载文件等功能 web服务器作用：监听客户端请求处理客户端请求客户端与数据库之间的屏障 应用服务器的作用：处理复杂系统的业务和数据库的访问 例如常见的应用服务器：weblogic 硬件集群/软件集群目的：负载均衡/故障转移 服务器端数据库：文件型数据库关系型数据库内存型数据库：将数据放在内存中直接操作的数据库，10倍传统数据库速度nosql：非关系型数据库 服务器端技术-其它soa:面向服务的架构service-oritented architecturesaas：软件即服务software-as-a-service云计算物联网 网络协议：tcp/ipudphttphttps 网络协议模型：osi开放式系统互联open system interconnect7应用层—处理网络应用：DNS、HTTP、邮件服务、文件传送服务6表示层—数据表示：编码、加密解密、压缩5会话层—主机间通信：建立连接，保证数据传输不错4传输层—进程间通信：中转站3网络层—寻址和最短路径：主要设备：路由器2链路层—介质访问（接入）:常见的链路层设备有：二层交换机/网桥1物理层—二进制传输：常见的物理层设备有：中继器/集线器 网络协议模型-tcp/ip模型：4应用层（5，6，7）3传输层（4）2internet层（3）1网络访问层（1，2） tcp协议-三次握手tcp协议提供了一种端到端的、基于连接的、可靠的通信服务 udp协议通讯时不需要接收方确认，属于不可靠的传输，可能会出现丢包现象，实际应用中要求程序员编程验证 ip协议 http协议：hypertext transport protocol：支持客户/服务器模式简单快速协议简单，速度快灵活无连接无状态 http协议-http请求：request，客户端发送给服务器端 get（显式传值）/post（隐式传值）/head（中文支持，授权码）/put（修改）/delete（删除） http协议-http响应：response，由服务器端返回给客户端，包含正常响应和异常响应http协议通过响应的状态码来进行定义：100-300属于正常 400-500为不正常200正常发送请求400发送的数据不对应，参数问题401端口错误402缺少head403端口冲突/权限不够，服务器已经理解请求，但无法执行404请求失败/没有功能链接500源码错误502网关错误/网络连接失败504网络错误造成数据丢失 https：HTTPS和HTTP的区别主要为以下四点：一、https协议需要到ca申请证书，一般免费证书很少，需要交费。二、http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。三、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。四、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。 http协议-session和cookiehttp协议：无连接，无状态cookie是服务器暂存放在用户计算机上的一些资料，session会话，客户端和服务器之间的会话，特点：1 session数据保存在服务端，客户端也会保存一个session的id值，存在cookie中2 键值对应3 有生命周期；默认40分钟4 以文本形式存在区别:cookie以文本形式存在，无时间限制 session有时间限制cookie记住用户登录信息密码，下次不需要输入，只能通过清除缓存才能消除。session用来存用户是否登录信息session将用户登录信息保存在服务器中，并发送一个session的id值与cookie中的信息对比 web开发技术：java微服务，接口，应用服务器php前端 html js jQuery h5app应用 android iosmysql/oracle 数据库 服务端脚本技术-php基础php是一种服务器端的脚本语言 web测试技术-功能测试1 链接测试：登录之前能否通过网址直接进入登录后的页面，绕过登录。fidder查看页面是否有400-500错误 2 表单测试输入框边界值，错误提示，长度，特殊字符 3 cookie测试：密码是否加密4 session测试5 脚本测试：数据库脚本6 文件上传测试7 数据库的查询测试：密码是否加密 web测试技术-可用性测试站点整体布局页面导航直观图形内容风格统一页面内容准确注意快捷 fangshi满足区域文化考虑用户群体 web测试技术-兼容性测试客户端平台：app安装要求的android版本]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试-软件质量]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95-%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F%2F</url>
    <content type="text"><![CDATA[弹奏江南夜雨，唱了一首花语 1. 软件质量的定义 iso（国际标准化组织）关于质量的定义： 一个实体的所有特性，基于这些特性可以满足明显的或隐含的需求。而质量就是实体基于这些实体特性满足需求的程度。 软件质量的三个层次 符合需求规格 ：符合开发者明确定义的目标，即产品是不是在做让它做的事情，目标是开发者定义的，并且是可以验证的。（例如用户目标群体） 符合用户显式需求：符合用户所明确说明的目标，目标是客户所定义的，符合目标即判断我们是不是在做我们需要做的事情。（例如客户对功能和界面的需求） 符合用户实际需求：实际的需求包括用户明确说明的和隐含的需求。 影响软件质量的因素 流程 技术 组织 软件质量的提高需要综合考虑，需要从各个方面进行改进，同时还需要兼顾成本和进度 如果有不能解决的技术问题，需要先屏蔽/跳过这个问题 质量管理发展阶段 第一阶段：检验质量管理 19th末-20th初 第二阶段：统计质量控制。强调统计方法 第三阶段：将质量控制扩展到产品生命周期全过程。强调全体员工参与 2. 软件质量管理体系 流行的质量管理体系 iso9000 cmm 六西格玛 iso2000八项质量管理原则 1.以顾客为中心 2.领导作用 3.全员参与 4.过程方法：做好相关过程记录 5.管理的系统方法： 6.持续的改进：提出建议 7.基于事实的决策方法 8.互利的供方关系 意义: 质量管理的理论基础 最基本/通用的一般性规律 为组织建立质量管理体系提供了理论依据 是组织领导者有效实施质量管理工作必须遵循的原则 八项质量管理原则的意义 是质量管理的理论基础； 用高度概括、易于理解的语言所表述的质量管理的最基本、最通用的一般性规律； 为组织建立质量管理体系提供了理论依据； 是组织的领导者有效地实施质量管理工作必须遵循的原则。 cmm的用途 评估组用来识别组织中的强处和弱点 评估组用来识别选择不同的业务承包商的风险和监督合同 管理者用来了解其组织的能力，并了解了提高其能力成熟度而进行软件过程改进所需要进行的活动 技术人员和过程改进组用来作为指南，指导他们在组织中定义和改进软件过程 iso9001和cmm关系 最大相似点：强调管理、过程、规范化和文档化 不同点 cmm焦点在软件 iso包括硬件/软件/流程性服务 六西格玛管理法 以质量作为主线，以客户需求为中心，利用对数据和数据的分析，改进一个组织的业务流程能力，从而增强企业竞争力，是一套灵活，综合性的管理方法体系。 要求企业完全从外部客户角度，而不是自己的角度来看待企业内部的各种流程。 利用客户的要求来建立标准，设立产品与服务的标准与规格，并以此来评估企业流程的有效性和合理性 3. 软件质量模型 质量模型：一组特性及特性之间的关系，它提供规定质量需求和评价质量的基础 外部和内部质量 功能性：当软件在指定条件下使用时，软件产品提供满足明确和隐含需求的功能的能力 适合：软件产品为指定的任务和用户目标提供一组合适的功能的能力。 准确：软件产品提供具有所需精确度的正确或相符的结果或效果的能力。 互操作：软件产品与一个或更多的规定系统进行交互的能力。 保密安全性：软件产品保护信息和数据的能力，以使未授权的人员或系统不能阅读或修改这些信息和数据，而不拒绝授权人员或系统对它们的访问。 可靠性：在指定条件下使用时，软件产品维持规定的性能级别的能力 成熟：软件产品为避免由软件中错误而导致失效的能力 容错：在软件出现故障或者违反指定接口的情况下，软件产品维持规定的性能级别的能力。 易恢复性：在失效发生的情况下，软件产品重建规定的性能级别并恢复受直接影响的数据的能力。 易用性：在指定条件下使用时，软件产品被理解、学习、使用和吸引用户的能力 易理解：软件产品使用户能理解软件是否合适以及如何能将软件用于特定的任务和使用环境的能力。 易学：软件产品使用户能学习其应用的能力。 易操作：软件产品使用户能操作和控制它的能力。 吸引性：软件产品吸引用户的能力。 效率： 在规定条件下，相对于所用资源的数量，软件产品可提供适当性能的能力 时间特性：在规定条件下，软件产品执行其功能时，提供适当的响应和处理时间以及吞吐率的能力。即完成用户的某个功能需要的响应时间 资源利用性：在规定条件下，软件产品执行其功能时，使用合适的资源数量和类别的能力。 维护性：软件可被修改的能力，修改可能包括修正，改进或软件对环境需求和功能规格说明变化的适应 易分析：软件诊断软件中的缺陷或失效原因或识别待修改部分的能力 易改变：软件产品使指定的修改可被变成现实的能力 稳定：软件产品避免由于软件修改而造成意外结果的能力 易测试性：软件产品使已修改软件能被确认的能力 可移植性：软件产品从一种环境迁移到另外一种环境的能力 适应：软件产品无需采用有别于为考虑该软件的目的而准备的活动或手段就可能适应不同的指定环境的能力 易安装：软件产品在指定环境中被安装的能力 共存：软件产品在公共环境中同与其分享公共资源的其它独立软件共存的能力 易替换性：软件产品在同样环境下，替代另一个相同用途的指定软件产品的能力 4. 软件质量活动 软件质量保证SQA与测试的关系 软件质量由组织、流程和技术三方面决定 SQA从流程方面保证软件的质量 测试从技术方面保证软件的质量 只进行SQA活动或只进行测试活动不一定能产生好的软件质量 SQA的主要工作范围 指导并监督项目按照过程实施； 对项目进行度量、分析，增加项目的可视性； 审核工作产品，评价工作产品和过程质量目标的符合度； 进行缺陷分析，缺陷预防活动，发现过程的缺陷，提供决策参考，促进过程改进 质量度量的概念和目的 概念： 度量：对事物属性的量化表示 度量：指计算机软件中范围广泛的测度，包括对软件系统，构件或生命周期过程具有的某个给定属性的度的一个定量测量 目的： 提高软件生产率，缩短产品研发周期，降低研发成本、维护成本 提高软件产品质量，提高用户满意度 为组织持续改进提供量化的指标和反馈 软件度量的作用 理解：通过度量，获得对过程，产品，资源等的理解，确定以后预测的基线和模型，对于不同的软件组织和软件类型，过程和模型都不一样。这是评估，预测，改进活动的基础 预测：根据所理解确定的模型，由已知的要素推算，估计其它要素，以便合理分配资源，合理制定计划。 评估： 分析活动与计划的符合度，确定是否有偏差，以便控制其执行 开发活动与计划的符合程度。如工作量估计偏差、进度偏差等； 产品的质量。如软件复杂度、缺陷密度、平均失效时间间隔等； 新技术的影响 改进：根据得到的量化信息，可以帮助我们识别要因、查找问题的根源，以及能提高产品质量和过程效率的其它方法；与以前的量化信息比较，可以验证这些方法是否有效 软件度量分类 四个基本度量项： 规模：软件工作产品的大小 工作量：完成各软件工作产品和活动所用人时 进度：各软件工作产品和活动开始和结束的时间 质量缺陷：在各软件工作产品和活动中产生的缺陷数 软件度量分类-规模数量 规模度量： SRS文档页数 HLD文档页数 LLD文档页数 代码量 UT用例数 IT用例数 ST用例数、 其它度量指标 依据基本度量数可以分析，综合得到其它度量数据或指标 缺陷密度： 研发活动发现缺陷密度 研发活动引入缺陷密度 工作产品缺陷密度 生产率 测试执行效率 用例密度]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试-软件研发组织和流程]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95-%E8%BD%AF%E4%BB%B6%E7%A0%94%E5%8F%91%E7%BB%84%E7%BB%87%E5%92%8C%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[此树，昔年汝去时栽之。十年生死两隔，今已亭亭如盖矣。卿卿，十年之日为你报了仇。你可愿，如梦一见 软件研发组织和流程 #####软件研发相关要素 人员：只有合适的人员借助合适的工具经过合适的过程才能研发出高质量的软件 过程 工具：工具为人员和过程服务，起辅助作用，起关键作用的是人员和过程 #####基本软件研发流程 瀑布模型：应用的最为广泛的一种模型，也是最容易理解和掌握的模型，然而他的缺陷也是显而易见的。（人员闲置） - 优点：简单 - 缺点：测试介入较晚，人员闲置严重，后续工作跟不上。项目开发完成后才招测试人员，那么可能是瀑布模型，不适合需求频繁变更的项目。不适合于大的项目，适用于小规模传统项目业务研发。 - **螺旋模型**:综合了基本的瀑布式模型和演化/渐增原型方法（技术储备不足）。 - 与瀑布不同点：螺旋模型有替代方案，是多个瀑布模型的并行集合。充分考虑了风险问题，故设计了替代方案。 - 优点：充分考虑风险，抗风险能力强 - 缺点：成本太高，需要专业的风险分析专家参与 - 适用范围：与生命财产相关的系统。 - `理解：` - 1.软件分多个版本开发，每个版本就是一次螺旋。 - 2.每个版本按照这样的顺序进行： - 1）确定软件目标，选取定实施方案，弄清项目开发的限制条件；（图中左上象限） - 2）分析所选取方案，考虑如何识别和消除风险；（图中右上象限） - 3）实施软件开发；（图中右下象限） - 4）评价开发工作，提出修正建议，调整计划。（图中右下象限、左下象限） - 3.需求不是一次获取和实现的，通过多个螺旋来完善。 - 4.计划也不是一次成型的，每次螺旋都需要调整。 - **RUP流程**：所有工作流在各个阶段都有体现 - 优点： - 1、RUP的思想打破了“需求-设计-编码-测试”这样的传统瀑布模式，需求、设计、编码、测试这些工作其实一直都在进行的，只是不同时间比重不一样。这个思想是和实际情况非常吻合。 - 2、用户可在早期提出变更并进行修复，从而有效控制变更风险及代价（往往都是局部变更） - 3、可在早期增强用户的信心（看到了半成品） - 缺点： - 1、要有专业的架构师（架构师的职责），当功能与功能之间联系太过紧密的话，不太使用rup模型，比如登陆与注册的联系 - 2、已经确定了的功能将不允许变更，但由于因为设计引起的内在联系引起的变更是无法控制的。 - 适用范围： - 大型复杂的项目研发，耦合度较低的系统。 - **IPD流程**：从整个产品角度出发，不仅仅针对研发 - 优点： - 1、将软硬件研发及生产、销售等各个部门有效整合，集中在一个平台下统一管理，提高了决策的准确性及时效性。 - 2、利于各部门关键数据的共享 - 缺点： - 1、管理成本高 - 2、部门之间的协调关系较复杂 - 适用范围： - 大型软硬件集成厂商]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试-软件中引入缺陷的原因]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95-%E8%BD%AF%E4%BB%B6%E4%B8%AD%E5%BC%95%E5%85%A5%E7%BC%BA%E9%99%B7%E7%9A%84%E5%8E%9F%E5%9B%A0%2F</url>
    <content type="text"><![CDATA[你永远也不知道 在车站候车 看起来文文静静的女孩子 耳机里在听些什么 软件中引入缺陷的原因 软件缺陷和bug 软件缺陷：既指静态存在于软件工作产品（文档、代码）中的错误，也指软件运行时由于这些错误被激发引起的和软件产品预期属性的偏离现象。 Bug：代码中的缺陷。有时也被泛指因软件产品内部的缺陷引起的软件产品最终运行时和预期属性的偏离。 软件错误、软件缺陷、Bug在实际工作中可以认为一样。 常见的引入缺陷的原因 开发过程缺乏有效的沟通，或者没有进行沟通 软件复杂度越来越高 编程中产生错误 需求不断变更 项目进度的压力不重视开发文档 软件开发工具本身隐藏的问题 缺陷类型：所有缺陷可以归纳为三类 遗漏：规定的或预期的需求未体现在产品中（可能未将规格说明全面实现，也可能需求分析阶段就遗漏了需求） 错误：未将规格说明正确实现（可能设计错误、也可能编码错误） 额外的实现：规格说明并未规定的需求被纳入产品，得到实现]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试的相关概念]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[测试： 开发 ：项目经理/架构师（软件设计） 高级开发 中级开发 初级开发 开发管理：需求 测试报告 计划 测试用例 测试：测试经理 高级测试 中级测试 初级测试 1 功能测试/性能测试 2 系统测试 bug： 致命bug 严重bug 影响流程 一般bug 建议bug 接口测试 ：工具测试（app，web工具） 自动化测试 3 操作文档（帮助文档） 软件测试的目的和定义 什么是软件测试 定义： 软件测试是一个过程，包含若干活动，运行软件进行测试只是活动之一 进行软件测试可以是人工方式，也可以借助于工具 进行软件测试可以运行软件也可不运行软件 软件测试的目的不仅仅是为了发现错误 目的：以最少的人力、物力和时间找出软件中潜在的各种错误和缺陷，通过修正各种错误和缺陷提高软件质量，回避软件发布后由于潜在的软件缺陷和错误造成的隐患所带来的商业风险 目的-证明： 获取系统在可接受风险范围内可用的信心 尝试在非正常情况和条件下的功能和特性 保证一个工作产品是完整的并且可用或者可被集成 目的-检测 发现缺陷，错误和系统不足 定义系统的能力和局限性 提供组件，工作产品和系统的质量信息 目的-预防 澄清系统的规格和性能 提供预防或减少可能制造错误的信息 在过程中尽早检测错误 确认问题和风险并且提前确认这些问题和风险的途径 软件测试的主要工作 检测代码，评审开发文档 进行测试设计，写作测试文档（测试计划，测试方案，测试用例） 执行测试，发现软件缺陷，提交缺陷报告，并确认缺陷最终得到了修正 通过测试度量软件的质量 软件生命周期 计划（开发/测试） 工作内容 ： 确定软件开发总目标 给出软件的功能，性能，可靠性以及接口等方面的设想 研究完成该项目的可行性，探讨问题解决方案； 对可供开发使用的资源、成本、可取得的效益和开发进度作出估计； 制定完成开发任务的实施计划。 需求分析： 工作内容： 对开发的软件进行详细的定义，由需求分析人员和用户共同讨论决定，那些需求是可以满足的，并且给予了确切的描述，写出软件需求说明书SRS（software requirement specification） 软件研发的类型不同，需求的来源也不同，需求分析中的用户针对的具体内容也不同 针对产品的软件研发（自主研发） 需求来源：市场调研 用户：市场调研人员 特点：自己想研发什么，自己就来研发 针对项目的软件研发（需求开发） 需求来源：客户要求 用户：实际用户 特点：别人想研发什么，我们帮助研发 设计 工作内容 设计是软件工程的技术核心，这个阶段需要完成设计说明书 概要设计（HLD），在设计阶段把各项需求转换成相应的体系结构，每一部分是功能明确的模块； 详细设计（LLD），对每个模块要完成的工作进行具体的描述。 编码 工作内容： 把软件设计转换成计算机可以接受的程序，即写成以某个程序设计语言表示的源程序清单，使用RDBMS工具建立数据库。 测试 工作内容： 测试时检验软件是否符合客户需求，达到质量要求，一般由独立的小组独立执行，测试工作分为： 单元测试 集成测试 系统测试 运行维护 工作内容： 这个阶段将软件交付用户投入正式使用，以后便进入维护阶段，可能由多种原因需要对它进行修改，如软件错误，系统软件升级，增强软件功能，提高性能]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试-测试过程]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95-%E6%B5%8B%E8%AF%95%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[此物…..此物…….此物最相思！ 测试过程组织机构：公司人员结构外包：1. 项目外包 2. 人力外包 测试阶段划分 单元测试(白盒测试)–&gt;集成测试(灰盒测试)–&gt;系统测试(黑盒测试) 单元测试： 单元测试是针对软件基本组成单元（软件设计的最小单位）来进行正确性检验的测试工作 单元测试的目的是检测软件模块对《详细设计说明书》的符合程度 集成测试： 集成测试是在单元测试的基础上，将所有模块按照概要设计要求组装成为子系统或系统，验证组装后功能以及模块间接口是否正确的测试工作 集成测试的目的是检测软件模块对《概要设计说明书》的符合程度 系统测试 系统测试是将已经集成好的软件系统，作为整个基于计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行（使用）环境下，对计算机系统进行一系列的测试工作 系统测试的目的在于通过与《需求规格说明书》作比较，发现软件与系统需求定义不符合或与之矛盾的地方 单元、集成、系统测试的比较 测试方法不同 单元测试属于白盒测试范畴 集成测试属于灰盒测试范畴 系统测试属于黑盒测试范畴 考察范围不同 单元测试主要测试单元内部的数据结构、逻辑控制、异常处理等 集成测试主要测试模块之间的接口和接口数据传递关系，以及模块组合后的整体功能 系统测试主要测试整个系统相对于需求的符合度 评估基准不同 单元测试的评估基准主要是逻辑覆盖率 集成测试的评估基准主要是接口覆盖率 系统测试的评估基准主要是测试用例对需求规格的覆盖率 回归测试 软件在测试或其他活动中发现的缺陷经过修改后，应该进行回归测试（Regression Testing）。目的是验证缺陷得到了正确的修复，同时对系统的变更没有影响以前的功能 回归测试可以发生在任何一个阶段，包括单元测试，集成测试，系统测试。 回归测试流程 以下流程适合于单元测试，集成测试，系统测试 1、在测试策略制定阶段，制定回归测试策略 2、确定需要回归测试的版本 3、回归测试版本发布，按照回归测试策略执行回归测试 4、回归测试通过，关闭缺陷跟踪单（问题单） 5、回归测试不通过，缺陷跟踪单返回开发人员，开发人员重新修改问题，再次提交测试人员回归测试 回归测试策略一 完全重复测试：重新执行所有在前期测试阶段建立的测试用例，来确认问题修改的正确性和修改的扩散局部影响性 选择性重复测试：即有选择地重新执行部分在前期测试阶段建立的测试用例，来测试被修改的程序 覆盖修改法：即针对被修改的部分，选取或重新构造测试用例验证没有错误再次发生的用例选择方法。 周边影响法：该方法不但要包含覆盖修改法确定的用例，还需要分析修改的扩散影响，对那些受到修改间接影响的部分选择测试用例验证它没有受到不良影响。该方法比覆盖修改法更充分一点。 指标达成方法：这是一种类似于单元测试的方法，在重新执行测试前，先确定一个要达成的指标，如修改部分代码100%的覆盖、与修改有关的接口60%的覆盖等，基于这种要求选择一个最小的测试用例集合。 回归测试自动化 后面的功能由前面的数据支撑，而前面的功能没有bug，那么可以通过自动化脚本来写前面的测试部分。 什么时候需要回归测试 bug修复之后 大版本升级 其它测试阶段 有用户参与的测试阶段 验收测试 α测试：现场测试（开发者在现场） β测试：多用户/多环境的现场测试（开发者不在现场） 测试过程： 上线测试：验收测试之前的第一步测试 验收测试：在客户端试运行 测试过程阶段划分 测试计划阶段-测试计划 测试设计阶段-测试方案 测试实现阶段-测试用例、测试规程 测试执行阶段-测试报告 测试总结： 项目功能 功能流程（联系） 测试用例/测试功能/bug的数量 收获（遇到的难点，解决的想法） 主要的测试文档 测试计划：指明测试范围、方法、资源，以及相应测试活动的时间进度安排表的文档。 测试方案：指明为完成软件或软件集成特性的测试而进行的设计测试方法的细节文档。 测试用例：指明为完成一个测试项的测试输入、预期结果、测试执行条件等因素的文档。（需要评审） 测试规程：指明执行测试时测试活动序列的文档。 测试报告：指明执行测试结果的文档。 测试日报：每天测试执行情况的记录和总结。 常见的测试模型 瀑布模型 H模型 V&amp;V模型 H模型 测试分两类活动： 测试准备活动，包括测试需求分析、测试计划、测试设计、测试编码、测试验证 另一类是测试执行活动，包括测试运行、测试报告、测试结果分析等 软件测试不仅仅指测试执行，还包括很多其他的活动。 测试是一个独立的流程，贯穿产品整个周期，与其他流程并发地进行。 测试要尽早准备，尽早执行。 各个不同阶段的测试除了简单的时间上的先后关系外，还存在触发、反复、迭代和增量关系。 v模型 V&amp;V模型实现了测试设计和测试执行相分离 V&amp;V模型揭示了软件测试活动分层和分阶段的本质特性，测试执行的顺序与开发活动相反 验证与确认V&amp;V 验证（Verification）—重点在软件 验证是保证软件正确地实现特定功能的一系列活动 验证是检测每一阶段形成的工作产品是否与前一阶段定义的规格相一致 “Are we building the product right？” 确认（Validation）—重点在需求 确认是指保证所生产的软件可追溯到用户需求的一系列活动 确认是检测每一阶段的工作产品是否与最初定义的软件需求规格相一致 “Are we building the right product？” 需求分析阶段的主要任务 需求分析，完成SRS 软件需求规格说明书的评审 进行需求跟踪 系统测试计划 系统测试计划的评审 需求阶段的角色和职责 软件开发项目经理： A、带领项目组分析审核工作任务书；计划 B、带领项目组与系统工程师进行需求交流并进行分析和文档化； C、组织SRS文档评审； D、组织需求跟踪； 软件开发工程师： A、完成SRS文档； B、完成需求跟踪； C、参加SRS review； D、根据SRS评审专家意见，修改SRS文档； E、参加系统测试计划的评审； 软件经理：A、在SRS评审结束后，批准SRS文档； 软件测试项目经理： A、参与开发人员的软件需求分析，提出可测试性需求； B、组织人员参与SRS的评审工作； C、软件系统测试计划写作； D、组织系统测试计划的评审； E、组织本阶段测试需求跟踪； 软件测试工程师： A、参与SRS评审工作； B、协助软件测试项目经理完成软件系统测试计划写作； C、参加系统测试计划的评审； D、完成本阶段测试需求跟踪； 概要设计阶段的主要任务 进行软件系统各层设计，完成HLD文档 概要设计的评审 系统测试方案，用例的设计 系统测试方案，用例的评审 需求跟踪更新 集成测试计划 集成测试计划评审 概要设计阶段的角色和职责 软件开发项目经理： A、安排概要设计任务，并确保有足够的资源； B、组织概要设计文档的评审； C、批准评审后的概要设计说明书； D、组织需求跟踪； 软件开发工程师： A、数据字典 B、完成需求跟踪； C、参加概要设计文档review； D、根据评审专家意见，修改概要设计文档； E、参加系统测试方案、用例、集成测试计划的评审； 测试经理：在集成测试计划评审结束后，批准集成测试计划。 软件测试项目经理： A、组织人员参与HLD的评审工作； B、软件集成测试计划写作； C、组织集成测试计划的评审； D、安排相关系统测试方案、用例设计任务； E、组织系统测试方案、用例评审； F、组织本阶段测试需求跟踪； 软件测试工程师： A、参与HLD评审； B、参与集成测试计划的评审； C、进行系统测试方案、用例的设计； D、参与系统测试方案、用例评审； E、完成本阶段的测试需求跟踪；]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试-测试方法]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95-%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[一个潦草的名字,拨动了故事的弦 #####白盒测试（代码测试）：测试代码的覆盖率 #####黑盒测试（功能测试） 什么是黑盒测试？ 把被测对象看成一个黑盒，只考虑整体特性，不考虑其内部具体实现。 被测对象可以时一个系统，一个子系统，一个模块，一个子模块，一个函数等。 黑盒测试又可以被称为基于规格的测试。 常见的黑盒测试类型 功能性测试： 是顺序测试每个程序特性或功能 一个模块一个模块的测试，即每个功能在其最先调用的地方被测试 容量测试：检测软件在处理海量数据时的局限性，能发现系统效率方面的问题。 负载测试：检测系统在一个很短时间内处理一个巨大的数据量或执行许多功能调用上的能力 恢复性测试：主要保证系统在崩溃后能够恢复外部数据的能力 黑盒测试来源于质量模型 功能性测试所测试的软件质量特性 外部和内部质量 功能性：适合/准确/互操作/保密安全性 可靠性：成熟/容错/易恢复性 易用性：易理解/易学/易操作/吸引性 效率： 时间特性/资源利用性 维护性：易分析/易改变/稳定/易测试性 可移植性：适应/易安装/共存/易替换性 常用黑盒测试方法： 等价类划分法 边界值分析法 因果图分析法 判定表法 状态迁移法 黑盒测试特点： 优点： 对于更大的代码单元来说（子系统/系统级），比白盒测试效率高 测试人员不需要了解现实的细节，包括特定的编程语言 从用户的视角进行测试，很容易被大家理解和接受 有助于暴露任何规格不一致或有歧义的问题 缺点： 没有清晰的和简明的规格，测试用例时很难设计的 不能控制内部执行路径，会有很多内部程序路径没有被测试到 不能直接针对特定的程序段，这些程序可能非常复杂 灰盒测试（黑盒测试和白盒测试结合） 典型的灰盒测试比如集成测试和系统测试时借助log信息 以下属于什么测试 LLD：详细设计文档 —&gt; 单元测试-白盒 SRS：需求分析文档 —&gt; 系统测试-黑盒 HLD：概要设计文档 —&gt; 集成测试-灰盒 LLD（详细设计文档 ） 单元测试UT 白盒测试范畴 主要测试单元内部的数据结构 逻辑控制 异常处理等 HLD（概要设计文档） 集成测试IT 灰盒测试范畴 主要测试模块之间的接口和接口数据传递关系，以及模块组合后的整体功能 SRS（需求设计文档） 系统测试ST 黑盒测试范畴 主要测试整个系统相对于需求的符合度 产品软件：把行业的共同点抽出来做一套软件。 软件研发可以看成一个生成过程，在这个过程中会有产品输出，或者叫做工件输出 输出的产品分为两类： 最终产品：编译后的软件，用户手册 中间产品：SRS，HLD，LLD，代码等 无论是最终产品还是中间产品，都可以分为代码和文档 文档进一步细分： 开发文档：SRS，HLD,LLD 测试文档：测试计划，测试方案，测试用例 静态测试/动态测试 静态测试：不运行被测试软件，而是采用其它手段和技术对被测试软件进行检测的一种测试技术，常用技术有静态分析技术 动态测试：按照预先设计的数据和步骤去运行被测软件系统，从而对被测软件系统进行检测的一种测试技术。常用技术有动态分析技术 静态分析技术 定义：静态分析是一种不通过执行程序二分析程序执行的技术 功能：检查软件的表示和描述是否一致，没有冲突或者没有歧义，它瞄准的是纠正软件系统在描述，表示和规格上的错误，因此是任何进一步测试执行的前提。 主要有三种不同的程序测试可能性 考虑程序是否满足编码规则，语法上是否具有一致性和完整性 考虑文档描述是否符合规范，准确，便于查阅 考虑程序和文档之间的一致性 动态分析技术 定义：对软件系统运行行为进行分析，包含程序在受控的环境下使用特定的输入进行正式的运行，和期望的结果比较以检查系统运行是正确还是不正确。 常用的动态分析技术 路径测试 分支测试 性能测试 人工测试和自动化测试 人工测试：测试活动由人来完成，狭义上是指测试执行由人工完成，是最基本的测试形式 自动化测试：一般是指通过计算机模拟人的测试行为，替代人的测试活动，狭义上是指测试执行由计算机来完成 自动化测试的意义： 对程序新版本运行前一版本执行的测试，提高回归测试效率 可以运行更多更频繁的测试，比如冒烟测试 更好的利用资源 可以执行手工测试困难或不可能做的测试 测试具有一致性和可重复性，即自动化测试的步骤和结果是完全一样的 测试的复用性，即自动化测试脚本可以拆分开给其它测试脚本使用 可以更快的将软件推向市场，软件发布前进行高效的回归测试，减少软件发布的时间 增加软件的信任度，通过自动化测试提高了测试效率。 自动化测试的限制 不能取代手工测试，自动化测试只能提高测试效率，不能提高测试有效性，即不可能发现更多缺陷 手工测试比自动测试发现的缺陷更多 对测试设计依赖性极大，测试设计的不好会遗漏问题 自动化测试对软件开发具有很大的依赖性，开发上出现变更可能导致前面的自动化测试完全失效 工具本身并不具备想象力，智能。 性能测试 什么是软件性能：软件的性能是软件的一种非功能特性，它关注的不是软件是否能够完成特定的功能，而是在完成该功能时展示出来的及时性。 理解：由定义可知性能关注的是软件的非功能特性，所以一般来说性能测试介入的时机是在功能测试完成之后。另外，由定义中的及时性可知性能也是一种指标，可以用时间或其它指标来衡量，通常我们会使用某些工具或手段来检测软件的某些指标是否达到了要求，这就是性能测试。 性能测试定义：指通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试 性能测试类型 基准测试：在给系统施加较低压力时，查看系统的运行状况并记录相关数做为基础参考 负载测试：是指对系统不断地增加压力或增加一定压力下的持续时间，直到系统的某项或多项性能指标达到安全临界值，例如某种资源已经达到饱和状态等 。 压力测试：压力测试是评估系统处于或超过预期负载时系统的运行情况，关注点在于系统在峰值负载或超出最大载荷情况下的处理能力。 稳定性测试：在给系统加载一定业务压力的情况下，使系统运行一段时间，以此检测系统是否稳定。 并发测试：测试多个用户同时访问同一个应用、同一个模块或者数据记录时是否存在死锁或者其他性能问题， 性能测试包含那些方面： 响应时间 吞吐量 并发数 资源利用率]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[测试方法]]></title>
    <url>%2F2019%2F05%2F02%2F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[测试用例测试方法：判定表，因果图，等价类，边界值 边界值测试： 一种黑盒测试方法，是对等价类分析方法的一种补充,由长期的测试工作经验得知，大量的错误是发生在输入或输出的边界上。因此针对各种边界情况设计测试用例，可以查出更多的错误。 边界条件测试是环绕边界值的测试。通常意味着测试软件各功能是否能正确处理最大值，最小值或者所设计软件能够处理的最长的字符串等等。 12等价类划分法将程序所有可能的输入数据（有效的和无效的）划分成若干个等价类。然后从每个部分中选取具有代表性的数据当做测试用例进行合理的分类，测试用例由有效等价类和无效等价类的代表组成，从而保证测试用例具有完整性和代表性。有效和无效的输入（以某个注册的输入框为例） 等价划分测试 等价划分测试是根据等价类设计测试用例的一种技术。是黑盒测试的典型方法之一，通过把被测试程序所有可能的输入数据域划分成若干部分。从每一部分中选取少数有代表性的数据作为测试用例，可有效减少测试次数，极大提高软件测试效率，缩短软件开发周期．等价类划分测试的目的就是为了在有限的测试资源的情况下，用少量有代表性的数据得到比较好的测试效果。有效等价类和无效等价类。有效等价类中的数据代表的是一组符合需求文档的正确的有意义数据。无效等价类则正相反。组合方法：控制变量法有效等价类（合法输入）------------&gt;预期结果无效等价类（不合法输入）----------&gt;预期结果 输入 有效等价类 无效等价类 1.6-18个字符 4.5个字符 2.字母开头 5.19个字符 3.字母、数字、下划线 6.非字母开头 9.邮箱地址不存在 7.非字母、数字、下划线 8.邮箱地址已经存在 输出 邮箱地址可注册 1，2，3，9 长度为6-18个字符 4，2，3 5，2，3 邮箱地址为字母开头 6，1，3 邮箱地址为字母、数字、下划线 1，2，7 邮箱地址已注册 1，2，3，8 判定表 判定表的英文是decision table，是指一个表格，用于显示条件和条件导致动作的集合。 定义：判定表是分析和表达多逻辑条件下执行不同操作的情况的工具。 判定表的优点：能够将复杂的问题按照各种可能的情况全部列举出来，简明并避免遗漏。因此，利用判定表能够设计出完整的测试用例集合。 在一些数据处理问题当中，某些操作的实施依赖于多个逻辑条件的组合，即：针对不同逻辑条件的组合值，分别执行不同的操作。判定表很适合于处理这类问题 123456【判定表的合并规则：1、以相同动作项出发；2、相同的条件项直接合并；3、相反的条件忽略（注意：此处为一般情况，需结合业务再次明确其必要性，否则不予合并】条件和动作相反都是必测的，如全部输入和全部不输入注意一些单引号、 判定表的合并规则：1 以相同的动作和项出发2 相同的条件直接合并3 相反的条件忽略 1 2 3 4 5 6 没有输入 y n n n n n 商品名称 y y n n n n 条件 商品货号 y y y n n n 价格开始 y y y y n n 价格结束 y y y y y n 所有商品信息 查询出有这个输入关键字的商品名称 动作 查询出有这个输入关键字的商品货号 起始价 最高价 没有数据显示 没有数据显示 因果图（鱼骨图）方法：生成判定表 左边列条件，右边列结果一般是针对比较复杂的情况，可能出现的情况和结果，主要是分析出判定表的条件桩和动作桩先鱼骨图，再做判定表 流程分析法前提是要画好流程图，分清三种流程，分别测一遍。基本流——正常流程备选流——分支，换了个条件异常流——异常操作，强制性终端操作以银行转账为例基本流放入银行卡→输入密码→输入转账卡号→输入转账金额→转账人金额减少，被转账人金额增加备选流：放入卡号、正确输入密码、账号输入错误、没有账号输入转账账号、取消后续操作输入转账账号、输入金额但余额不足 异常流：放入卡号→密码输入错误3次，卡被冻结，无法转账图片上传测试：1.功能测试（1）选择符合要求的图片，上传——–上传成功；（2）上传成功的图片名称显示———-显示正常（根据需求）（3）查看，下载上传成功的图片——–上传的图片可查看或下载（4）删除上传成功的图片————-可删除（5）替换上传成功的图片————-可替换（6）上传图片是否支持中文名称——–根据需求而定（7）图片路径是否可手动输入———-根据需求而定（8）手动输入正确的图片路径，上传—–上传成功（9）手动输入错误的图片路径，上传—–提示，不能上传 2.图片大小测试（1）符合格式，总大小稍小于限制大小的图片——上传成功（2）符合图片，总大小等于限制大小的图片——–上传成功（3）符合图片总大小稍大于限制大小的图片——–在上传初提示附件过大（4）小为0kb的txt图片———————–不能上传 3.图片名称测试（1）图片名称过长。Win2000标准：255个字符（指在英文的字符下），如果是中文不超过127个汉字—–提示过长（2）图片名称达到最大长度（中文，英文或混在一起）上传后名称显示，页面排版———–页面显示正常（3）图片名称中包含特殊字符————-根据需求而定（4）图片名全为中文——————–根据需求而定（5）图片名全为英文——————–根据需求而定（6）图片名为中、英混合—————–根据需求而定 4.图片类型测试（1）上传正确格式—————–上传成功（2）上传不允许的格式————–提示不能上传（3）上传rar,zip等打包图片（多图片压缩）———根据需求而定 5.安全性测试（1）上传可执行图片（exe图片）—————–根据需求而定（2）上传常见的木马图片————————提示不能上传（3）上传时服务器空间已满———————-有提示（4）上传时服务器验证————————–所有的验证都在服务端，不能在客户断验证（5）上传时绕过验证，替换j_sessionid———–验证失败（6）上传时绕过验证，删除j_sessionid———–验证失败 6.性能测试（1）上传时网速很慢（限速）—————–当超过一定时间，提示（2）上传过程断网————————–有提示是否上传成功（3）上传过程服务器停止工资——————有提示是否上传成功（4）上传过程服务器的资源利用率—————在正常范围（5）发送多个上传请求（6）对接口进行压力测试（7）响应时间、吞吐量、并发数记录 7.接口测试（1）接口参数化：特殊字符、参数类型、参数有、无、null、必选参数、组合参数、边界值（2）接口功能测试： 业务流程———正常场景、异常场景（3）接口性能：响应时间、吞吐量、并发数（4）接口安全：敏感信息加密、必要参数后端验证、接口防恶意修改 8.界面测试（1）界面美观性、易用性（键盘和鼠标的操作、tab跳转的顺序是否正确）———-显示正常（根据需求）（2）按钮文字是否正确————–正确（3）正确/错误提示的文字是否正确—————正确（4）说明性文字是否正确———————–正确 9.其他测试（1）有多个上传框时，上传相同名称的图片—————根据需求而定（2）上传一个正在打开的图片————————-可以上传（3）图片路径是手工输入的是否限制长度—————-限制一定的长度（4）上传过程中是否有取消正在上传图片的功能———–有（5）保存时有没有已经选择好，但没有上传的图片———–提示上传（6）选择好但是未上传的图片是否可以取消选择————可以取消选择]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[基础语法]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[数组 Python continue 语句跳出本次循环，而break跳出整个循环。continue 语句用来告诉Python跳过当前循环的剩余语句，然后继续进行下一轮循环。continue语句用在while和for循环中。 元组 tuple ()Python的元组与列表类似，不同之处在于元组的元素不能修改字典 dict {} 字典的每个键值 key=&gt;value 对用冒号 : 分割，每个键值对之间用逗号 , 分割，整个字典包括在花括号 {} 中 key不可重复，后面的相同键会覆盖前面键值，none可以作为键 读取：dic.get(key) 或者dic[key]set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等 可以用来将list中的重复元素去除，然后通过循环set集合取值，重新变成list 对象 类的创建 class student： name:str age:int address=&quot;&quot; 方法： def study(self): print(&quot;&quot;) 类的实例化,对象的创建 stu=student() stu.name=&quot;李白&quot; stu.age=&quot;20&quot; stu.address=&quot;中国&quot; 方法的调用 stu.study()]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python基础知识点]]></title>
    <url>%2F2019%2F05%2F02%2Fpython%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%2F</url>
    <content type="text"><![CDATA[Python程序是大小写敏感的，如果写错了大小写，程序会报错 以#开头的语句是注释，注释是给人看的，可以是任意内容，解释器会忽略掉注释。其他每一行都是一个语句，当语句以冒号:结尾时，缩进的语句视为代码块。如果字符串里面有很多字符都需要转义，就需要加很多\，为了简化，Python还允许用r’ ‘表示’ ‘内部的字符串默认不转义如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用’’’…’’’的格式表示多行内容 数组 [] () {}数据类型：int float complex str bool算术运算符：+ - * / % // **关系运算符：&lt; &gt; = &gt;= &lt;= != == 函数：无参无返回值函数/无参有返回值函数/有参有返回值函数/内置函数 python异常处理：12345678try: 正常的操作except(Exception1[, Exception2[,...ExceptionN]]]): 发生以上多个异常中的一个，执行这块代码else: 如果没有异常执行这块代码try-finally 语句无论是否发生异常都将执行最后的代码。 字符串和编码：在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码（可变长编码”的UTF-8编码）。对于单个字符的编码，Python提供了ord()函数获取字符的整数表示，chr()函数把编码转换为对应的字符len()函数计算的是str的字符数，如果换成bytes，len()函数就计算字节数]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pycharm激活]]></title>
    <url>%2F2019%2F05%2F02%2Fpycharm%E6%BF%80%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[没有激活的pycharm只能使用30天,所以需要激活一下.简单讲分为三步: 下载破解补丁:链接: https://pan.baidu.com/s/14dJCxmnY7GXf7tQOWw6iIA 提取码: k7mu不需要解压,放到任何你想放的位置,比如说你放到了D盘 修改pycharm安装目录下的bin文件夹下的pycharm.exe.vmoptions在文本最后面添加下载的补丁的位置 -javaagent:D:/JetbrainsCrack-release-enc.jar 修改pycharm安装目录下的bin文件夹下的pycharm64.exe.vmoptions在文本最后面添加下载的补丁的位置 -javaagent:D:/JetbrainsCrack-release-enc.jar 这样就激活成功了,可以查看激活时间:菜单栏--help--about 如果是linux系统,操作也是一样的.只是要修改的bin目录下的文件名不同分别为pycharm.vmoptions , pycharm64.vmoptions]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[django配置过滤器]]></title>
    <url>%2F2019%2F05%2F02%2Fdjango%E9%85%8D%E7%BD%AE%E8%BF%87%E6%BB%A4%E5%99%A8%2F</url>
    <content type="text"><![CDATA[每日歌曲 为什么需要过滤器？比如用户没有登录是发不了评论的，但是在没有配置过滤器时，用户只需要知道发表评论的地址，就可以进入这个界面。所以需要加一个地址过滤器，判断是否是用户登录了，没有登录时，如果输入的不是我们过滤掉的地址就让它回到首页，不允许访问。具体配置： 在子项目新建一个mymiddleware.py的文件 代码：1234567891011121314151617181920from django.shortcuts import HttpResponseRedirecttry: from django.utils.deprecation import MiddlewareMixinexcept ImportError: MiddlewareMixin=objectclass SimpleMiddleware(MiddlewareMixin): def process_request(self,request): if request.path!=&apos;/file/index/&apos; and \ request.path!=&apos;/file/login/&apos; and \ request.path!=&apos;/file/find/&apos; and \ request.path!=&apos;/file/signin/&apos; and \ request.path!=&apos;/file/logout/&apos; and \ request.path!=&apos;/file/addUser/&apos;: # if request.session[&apos;id&apos;]!=None: 这么写是错的，因为刚开始登录时是没有id这个session的 if request.session.get(&apos;id&apos;,None)!=None: #所以需要在这里设置默认值 pass else: return HttpResponseRedirect(&apos;/file/index&apos;) 在settings.py配置 &apos;file.mymiddleware.SimpleMiddleware&apos;, #配置登录访问的过滤器]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[django配置一]]></title>
    <url>%2F2019%2F05%2F01%2Fdjango%E9%85%8D%E7%BD%AE%E4%B8%80%2F</url>
    <content type="text"><![CDATA[djanjo安装1.安装好python并配置好环境变量2.安装pip并配置环境变量3.pip install Django==2.1.7 （网址）4.python连接mysql：安装pymysql 12pip install pymysqlpip install mysqlclient 项目中各文件含义：template 网页static 网站资源settings.py 配置 数据库链接插件urls.py 主链接地址models.py 表模型 做数据库的增删查改功能urls.py 副链接地址views.py 视图 网页互动代码 python manage.py startapp 项目名字 #初始化自己的项目 settings.py文件中的配置默认DEBUG = TrueINSTALLED_APPS 添加自己新建的项目名MIDDLEWARE 添加插件功能 新建数据库： 12show databases;create database djangotest default character set utf8; DATABASES 指定使用的数据库 12345678910DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;, &apos;NAME&apos;: &apos;djangotest&apos;, #数据库名 &apos;USER&apos;: &apos;root&apos;, &apos;PASSWORD&apos;: &apos;xxxx&apos;, &apos;HOST&apos;: &apos;127.0.0.1&apos;, &apos;PORT&apos;: &apos;3306&apos; &#125;&#125; 建一个与项目同级的目录名为：static在settings.py最后添加： 123STATICFILES_DIRS=[ os.path.join(BASE_DIR,&apos;static&apos;)] static中放图片templates中放网页html文件在自己新建的项目里新建urls.py文件]]></content>
      <categories>
        <category>测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[shell编程二]]></title>
    <url>%2F2019%2F05%2F01%2Fshell%E7%BC%96%E7%A8%8B%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[shell编程二expr求和命令放在之间 例子：计算1到100的和 123456789#!/bin/zshj=0for ((i=1;i&lt;100;i++))do j=`expr $j + $i` #j=$(($i+$j))doneecho $j 字符串的截取 %号截取，删除右边字符，保留左边字符 %t*表示从右边开始，删除第一个 t及右边的字符 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i%t*&#125; 1it seems that i fall in love wi %%m* 表示从右边开始，删除最后（最左边）一个t及右边的字符 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i%%t*&#125; 1i #号截取，删除左边字符，保留右边字符。 #*t表示从左边开始，删除第一个 t及左边的字符 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i#*t&#125; 1seems that i fall in love with you ##*t表示从左边开始删除最后（最右边）一个t及左边的所有字符 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i##*t&#125; 1h you 从左边第几个字符开始，总字符的个数 从第一个字符开始，总个数为4 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i:0:4&#125; 1it s 从左边第几个字符开始，直到结束 从第4个开始，到结束 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i:4&#125; 从右边第几个开始，总字符个数 从右边第三个开始算起，向右2个字符 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i:0-3：2&#125; 1yo 从右边第几个字符开始，直到结束 从右边第三个开始，向右直到结束 12i=&quot;it seems that i fall in love with you&quot;echo $&#123;i:0-3&#125; 1you 例子：我需要将简书上的文章发布到网站上，我已经下载好了，可是因为有点多，需要每次都手动去一个一个的发布，太麻烦了，所以就想有什么简单的方法可以解决。 1234567891011121314151617#!/bin/bash#used for create hexo file and cat origin file to it#author NARCISSUS木cd /home/narcissus/Downloads/compressd-file/jianshu/user-9937522-1556131627/测试for i in `ls`do m=$&#123;i%.*&#125; cd /home/narcissus/Data/HexoBlog echo $m hexo n draft $m if [ $? -eq 0 ];then cat /home/narcissus/Downloads/compressd-file/jianshu/user-9937522-1556131627/测试/$i &gt;&gt; ./source/_drafts/$i else exit fidone]]></content>
      <categories>
        <category>linux</category>
        <category>shell编程</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo基本操作]]></title>
    <url>%2F2019%2F05%2F01%2Fhexo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[hexo的配置在两个地方一个是hexo主目录下的_config.yml，这个用来对整个网站的设置 另外一个是hexo主目录下themes/next中的_config.yml，这个用来对网站主题的设置 自定义主题12vim _config.yml #修改hexo主目录下的配置theme: next #将主题设置为下载好了的next 自定义网站的标题、描述等1234567 6 title: NARCISSUS木 7 subtitle: narcissus blog 8 description: &quot;for u in my love&quot; 9 keywords:10 author: NARCISSUS木11 language: zh-CN #界面语言设置为中文12 timezone: Asia/Shanghai next设置 主题风格选择 1181 scheme: Mist #选择mist这个风格 页面底部设置 1234567891011121365 copyright: #留空显示author66 67 powered: #不显示hexo授权图片68 # Hexo link (Powered by Hexo).69 enable: false70 # Version info of Hexo after Hexo link (vX.X.X).71 version: false72 73 theme: #不显示hexo版本内容74 # Theme &amp; scheme info link (Theme - NexT.scheme).75 enable: false 76 # Version info of NexT after scheme info (vX.X.X).77 version: false 页面顶部菜单栏项目的添加 默认的菜单栏有点少，可以将其他的都开启。也可以自定义菜单，不仅仅局限于给出的这些 12345678159 menu:160 home: / || home161 tags: /tags/ || tags162 categories: /categories/ || th163 archives: /archives/ || archive164 schedule: /schedule/ || calendar165 about: /about/ || user166 网站集锦: /website/ || link 这样设置之后点击菜单时，会报错，因为没有关联网页，所以还需要将这些页面生成出来 12hexo n page abouthexo n page website 文章的创建先在_drafts下创建草稿，不会发布到网站上去，publish后才会转移到_posts下 创建草稿 1hexo n draft 文章名 草稿发布前可以在本地预览 1hexo s --drafts 发布草稿 1hexo publish 文章名 直接创建文章，可直接发布到网站上 1hexo n 文章名 然后使用编辑器来编辑文章 文章的发布123hexo clean #清楚缓存hexo g #将md文件生成静态页面hexo d #同步到github上进行发布 本地查看 1hexo s 修改文章的同时预览不需要修改完后再hexo g &amp;&amp; hexo s 1hexo g -w #一个终端开实时预览 1hexo s ＃一个终端开本地服务 侧边头像设置1vim themes/next/_config.yml 123456789101112227 avatar: 228 # In theme directory (source/images): /images/avatar.gif229 # In site directory (source/uploads): /uploads/avatar.gif230 # You can also use other linking images.231 #url: #/images/avatar.gif232 url: https://hbimg.huabanimg.com/62479431e0811e471f0d94672049141a41d6c65413f9-hX0miG_fw658233 # If true, the avatar would be dispalyed in circle.234 rounded: true235 # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.236 opacity: 0.8237 # If true, the avatar would be rotated with the cursor.238 rotated: false 添加搜索功能，简直不要太帅安装hexo-generator-searchdb 插件 1npm install hexo-generator-searchdb --save 添加配置到hexo主目录下的_config.yml中，在Extensions下添加 12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件themes/next/_config.yml 12local_search: enable: true 给文章加密编辑文件： 1vim themes/next/layout/_partials/head/head.swig 在文章末尾script后添加 12345678910&lt;script&gt; (function()&#123; if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; alert(&apos;密码错误！&apos;); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 在需要加密的文章的tags后面添加 1password= 123456 例如： 123456781 --- 2 title: hexo基本操作3 date: 2019-05-01 00:41:284 categories:5 - hexo6 tags:7 password: 1234568 ---]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[shell编程一]]></title>
    <url>%2F2019%2F04%2F29%2Fshell%E7%BC%96%E7%A8%8B%E4%B8%80%2F</url>
    <content type="text"><![CDATA[shell编程一创建shell文件1touch test.sh #.sh用来表示这是一个shell脚本，并无特殊作用 shell文件的执行12chmod +x test.sh #给文件添加可执行权限./test.sh #表示执行当前目录下的shell脚本 指定执行shell及注释文件开头写法： 123#!/bin/bash #指明使用何种shell#这里指明shell作用、目的#指明作者 赋值语法与其它语言不同的一点是赋值的变量与值之间是不能有空格的 1name=“narcissus” #必须紧挨着 变量的调用变量前面加$,同时变量本身加{} 1echo $&#123;name&#125; #当然了，大部分时候这个括号是可以省略的，只要保证后面不紧挨着其它字符 系统预置变量12345678910$&#123;0&#125; 当前程序$&#123;1&#125; 程序的第一个参数$&#123;2&#125; 程序的第二个参数...$&#123;*&#125; 程序的所有参数$&#123;#&#125; 程序所有参数的统计$&#123;?&#125; 前一个命令是否执行成功，成功为0$&#123;PWD&#125; 当前目录$&#123;UID&#125; 用户id，root为0 if条件判断语句有开头有结尾，if...then..elif..then...else ...fi 1234567if ((10&gt;5));then #两个括号用在if中表示判断大小，后面接分号，then echo 10 is greater than 5elif ((10==5));then echo 10 equals 5else echo 5 is greater than 10fi #以反if结尾表示结束 逻辑运算符1234567891011-eq #等于，用于整形比较-ne #不等于，用于整形比较-lt #小于，用于整形比较-gt #大于，用于整形比较-le #小于或等于，用于整形比较-ge #大于或等于，用于整形比较-a #and-o #or-z #空字符串-f #文件是否存在-d #目录是否存在 例子：判断目录是否存在，不存在就创建12345678910#!/bin/bash#make directory if it&apos;s not exist#author narcissusif [ ! -d ./test2 ];then echo create direcotry test2 mkdir test2else echo directory existsfi 日期打印1echo `date +%Y%m%d` for 循环例子：列出普通用户家目录所有文件、目录 1234567891011121314151617181920#!/bin/bash#打印用户家目录下的所有文件名#author narcissus木cd ~ #进入家目录if [ $UID -eq 0 ];then #判断如果是root用户 for i in `ls /home/` #列出所有普通用户 do cd /home/$i #进入普通用户目录 for j in `ls` #循环用户下的文件/目录 do echo $j #打印 done doneelse #如果是普通用户 for j in `ls` #循环用户下的文件/目录 do echo $j #打印 done fi shell执行时候的检查12sh -n test.sh #检查是否有错误sh -x test.sh #打印执行具体过程（每步都显示，非常有用）]]></content>
      <categories>
        <category>linux</category>
        <category>shell编程</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wc计数]]></title>
    <url>%2F2019%2F04%2F27%2Fwc%E8%AE%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[前面说的时候没注意到这个命令还挺复杂的 wc(word count)计数常用参数 -c, –bytes 字节数 -m, –chars 字符数 -l, –lines 总行数 -L, –max-line-length 最长的行的字符数 -w, –words 单词数 wc是支持管道的,可以接受标准输入.所以我们使用echo来看为什么输出是5?是它数错了吗?不是的,其实每行的结尾都有一个换行符,只是我们看不到而已.我们把它打印出来看看所以现在就很清楚了,每一行都有一个换行符.总的字节数=字节数-行数=(wc -c )-(wc -l) 如果是汉字呢?我们来数一下字数同样的道理,都需要考虑到换行符的问题]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机安装ubuntu服务器版]]></title>
    <url>%2F2019%2F04%2F27%2F%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%89%88%2F</url>
    <content type="text"><![CDATA[不要奇怪我为啥会呢，无他，唯手熟尔。所以多安装几次就会了 新建 给系统取个名 然后一直下一步（设置动态磁盘啊什么的这些都不用管），需要注意的是，这里选择系统大小的时候不要太小了（默认10G没有问题），否则安装不上（我刚开始装的时候分配了2G，结果就没安装成功） 一直下一步，然后就进入设置界面了 存储这里添加下载好的ubuntu iso文件 网络这里设置桥接网卡，混杂模式选择全部允许 设置好了，启动 选择安装系统时界面提示的语言，这里选汉语了。这样界面就是汉语的 选择安装服务器版 在选择系统语言的时候本来是要选择英语的（汉语支持不好），但是我也不知道咋的，选不了其它语言。可能是前面选择了汉语的原因吧。不过没什么影响，毕竟是服务器版，也看不到什么汉语。yes 不需要配置键盘，否 选择汉语 设置系统名称 设置用户名称 设置用户密码 他会提示这个密码太弱，但是我们不需要设置复杂密码，选择是 不需要加密家目录，选择否 可以看到时区是正确的，所以选择是 磁盘分区，这里不需要选择其他的，选第一个就好了（动态磁盘阵列以及手动分区用在这个虚拟机上实在是浪费感情啊） 直接下一步 选择是，将会自动格式化磁盘 不需要代理，直接下一步 下面进入安装系统了，漫长的等待 选择不自动更新，服务器嘛，稳定最重要了 这里要用空格将ssh选择上，方便用xshell来连接linux，如果不选的话，就要等系统安装好了之后在手动安装ssh了 系统开始下载并安装选择的ssh了，漫长的等待 安装grub启动管理器了，这里选择是，这一步一定不要选错，不然启动不了的 看到下面这个界面就是安装好了，继续下一步 看，自动重启进入系统了 用户名，密码登录成功了 有的电脑可能存在显卡不支持的情况，也就是花屏，修改设置里面的显卡驱动 end——————————————————————————————————-完结]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机sharefolder]]></title>
    <url>%2F2019%2F04%2F27%2F%E8%99%9A%E6%8B%9F%E6%9C%BAsharefolder%2F</url>
    <content type="text"><![CDATA[安装插件insert Guest Additions cd image 会提示添加盘符，新建一个空的option device， 再安装就可以了 在~/virtualbox vms目录下建一个share_folder文件夹，用来在linux和windows上共享文件 在虚拟机上machine-settings-shared folders-新建一个共享目录，路径为之前设置的。选择自动挂载 然后就可以在虚拟机中看到挂载的虚拟磁盘了，通过这个共享磁盘实现共享文件。]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统注册表错误修复]]></title>
    <url>%2F2019%2F04%2F27%2F%E7%B3%BB%E7%BB%9F%E6%B3%A8%E5%86%8C%E8%A1%A8%E9%94%99%E8%AF%AF%E4%BF%AE%E5%A4%8D%2F</url>
    <content type="text"><![CDATA[如果电脑因为一些错误的操作出现了注册表损坏的这种情况，首先可以试着修复它。 我们需要用到pe启动器（或者电脑上的其它操作系统），进入pe，打开文件管理器，复制C:\Windows\System32\config\RegBack下的所有文件到C:\Windows\System32\config目录下。然后重启电脑就有可能修复好了。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[目录基本操作]]></title>
    <url>%2F2019%2F04%2F27%2F%E7%9B%AE%E5%BD%95%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[ls cd clear alias 今天主要说如何在linux文件系统目录中移动 ls(list directory contents) 列出目录内容,作用就是列出当前目录下的文件常用参数:-a 列出所有文件-l 以长列的格式列出-h 以易于读的大小表示文件大小这些参数都是可以组合使用的 可能有的人会看到别人使用了ll这个命令,为什么你的使用不了呢?其实linux上是没有这个命令的.而是使用了alias在.bashrc里面写 alias ll=&apos;ls -lh&apos; 然后运行 source ~/.bashrc 再试试ll这个命令什么意思呢?就是给之前那一长串的命令写了一个别名,用来简化命令的再举个例子:clear这个命令是用来清屏的,由于经常使用,我们想能不能写简单点,这个命令打起来太麻烦了.当然可以了,在.bashrc中加上 alias cc=&apos;clear&apos; 然后运行 source ~/.bashrc 再试试 cc这个命令 2.cd(change working directory)改变工作目录,目的是在各目录中移动回到上一级目录: cd .. 回到家目录: cd 或者: cd ~ 在linux中目录中移动有两种方式:1.绝对路径:所有路径都是以 / (根目录为基准) 比如: cd /opt cd /etc/fonts cd /home 2.相对路径:所有路径都是以当前工作路径或者家目录~为基准 cd .. cd Picture cd Downloads/zipfile cd ~/Picture 再来一个好玩的命令screenfetch,可以在终端打印出系统的一些信息]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浏览器百度网址打不开如何解决]]></title>
    <url>%2F2019%2F04%2F27%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BE%E5%BA%A6%E7%BD%91%E5%9D%80%E6%89%93%E4%B8%8D%E5%BC%80%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[（分享张罐子的单曲《十二（Cover 留声玩具）》http://music.163.com/song/435307280?userid=1388867694 (@网易云音乐)） 问题：同桌电脑不能打开百度网址，其它的网址打开没问题 刚开始以为所有网址都打开不了，就以为是网络链接问题，于是需要ping网络首先在正常电脑（我的）上找到网关地址 ipconfig 然后在她电脑cmd输入 ping 192.168.0.252 发现可以ping通，然后继续ping百度地址 ping www.baidu.com 发现也可以ping通，这就有点奇怪了。所以怀疑是dns解析出了问题然后就是去配置dns了：配置了静态的ip地址和两个固定dns（这里不写了，有点多）可是。。。。。还是打不开百度网址，其它的网页没有问题最后呢，是她自己找到了解决办法 :)所以。。。。。你懂吧，有一个美丽会计算机的女同桌多么可怕，哈哈 下面是操作步骤： 这样就好了。鉴定结果是病毒修改了ie的设置。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2019%2F04%2F27%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[虽然记忆力不怎么好,但是我想全部记下来怎么办? 下面是我的简单总结: 字符 描述 \ 转义 ^ 行首 $ 行尾 * [0, +∞) + [1, +∞) ? 0或1 {n} 确定的n次 {n,} [n, +∞) {m,n} [m, n] 点 匹配除换行/回车之外的单个字符 x\ y 匹配x或者y(x和y为一个词) [ xyz ] 匹配x或y或z [ ^xyz ] 匹配除x或y或z之外的 [a-z] a到z中的任意一个字母 [A-Z] A到Z中的任意一个字母 [0-9] 0到9中的任意一个数字 \d 0到9中的任意一个数字 \D 非数字 下面是详细介绍:]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文本内容查看]]></title>
    <url>%2F2019%2F04%2F26%2F%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9%E6%9F%A5%E7%9C%8B%2F</url>
    <content type="text"><![CDATA[cat more less diff/colordiff wc 使用linux总会有这种感觉,用起来怎么那么舒服呢?没错,真的是这样的我们在windows上想看一个文本文件里面写了什么,一般都是用记事本打开来看吧.然而这个记事本实在是有点难用.so,我们来看看linux上怎么看文本内容吧 cat(concatenate file and print on the standard output) 连接文件并输出到屏幕上 cat 文件名 这样可以显示行号 cat -n 文件名 less/more 如果文件内容比较长,那么这两个命令就有作用了,支持滚屏.其中less支持回滚与vim的简单移动操作 more 文件名 less 文件名 这样可以显示行号 less -L 文件名 如果不想看文本内容只想知道有多少行呢? wc 可以数文件行数,字数,最长一行的字符数 wc 文件名 不仅如此, wc是支持使用pipe(管道)的.简单说只要能在屏幕输出信息的都可以作为wc的输入.比如说你可以这样:数一下/bin下有多少个命令? ls /bin | wc -l 统计一下有多少进程? ps -aux | wc -l 如何比较两个文件的差别?vim可以,但是更简单的是 diff diff -y 文件1 文件2 但是 diff没有颜色显示, colordiff 有颜色显示,安装一下就可以用了 sudo pacman -S colordiff colordiff -y 文件1 文件2]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用软件]]></title>
    <url>%2F2019%2F04%2F26%2F%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[软件名 简介 variety 动态壁纸 archlinux-wallpaper archlinux壁纸包 yaodao-dict 有道翻译 sublime-text-dev sublime-text3 xchm .chm格式（windows帮助文档）查看 treesheets 思维导图 fragments bit下载 iotop 磁盘写入检查 leafpad 记事本 netease-cloud-music 网易云音乐 virtualbox 虚拟机 mplayer 视频播放 wpsoffice 办公软件 marktext markdown 编辑 shotcut 视频剪辑 gimp 和ps一样的图片处理软件 deepin-wine-tim 聊天 （不过个人不喜欢） weechat irc聊天 nautilus gnome默认文件管理器 unrar 解压rar格式文件 rar 压缩文件格式为rar lsof 列出打开的文件（list openfile and cat ip port） tor torsocks tor dconf-editor 可以用来关闭gnome自动挂载U盘 gnome-software-packagekit-plugin 系统必须要安装的一个神器，安装之后应用商店就有很多很多软件可以下载了 blender 3d动画自作软件（很想学习的一个软件） ydcv 终端有道翻译 amor 桌面小猫 netease-musicbox 网易云终端 musicbox exfat-utils fix unable to read portable添加U盘特殊格式exfat驱动 ntfs-3g 添加ntfs驱动（读写windows文件：mount -t ntfs-3g /dev/sdxy） cava 终端下alsa声音可视化 wewechat 微信 geckodriver linux下selenium的firefox驱动 scrot 命令截图软件 launch-cmd 在命令行打开软件 gnome-shell 简介 screenshot tool 截屏 easyscreencast 录屏 netspeed 网速 freon 温度 coverflow alt-tab alt-tab切换窗口 notes 便签 night light slider 屏幕色温调节 alarm clock 闹钟 weatherin the clock 天气 caffeine 用来阻止屏幕自动休眠，在看视频的时候很好用 Drop down terminal 也是一个神器，安装后可以用～快速打开一个终端，很帅气 No Topleft Hot Corner 去掉gnome左上角的热区 Dash to Dock 修改gnome默认dock的位置，很好用]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用archlinux需要明白的]]></title>
    <url>%2F2019%2F04%2F25%2F%E4%BD%BF%E7%94%A8archlinux%E9%9C%80%E8%A6%81%E6%98%8E%E7%99%BD%E7%9A%84%2F</url>
    <content type="text"><![CDATA[首先需要明白的是archlinux和其它发行版的不同之处: 1.archlinux是”rolling release”,它不需要系统的版本升级 2.不敢说archlinux是最稳定的,但它却是我最钟爱的.archlinux仓库的软件都是最新的,而且软件仓库中的软件比其他发行版的软件要多的多 3.因为它是可定制的,想安装什么软件,什么桌面环境都是自己选择的.虽然没有gentoo那样高度定制化,但是与gentoo安装时编译需要花费的时间比起来,archlinux这种二进制文件安装更快 archlinux是滚动发行版,所以经常更新是必要的.为了确保更新不会出现任何问题,我们需要了解最近更新了什么,有那些需要注意的.怎么了解呢? 第一种方式是查看Arch News 第二种方式是订阅archlinux的更新邮件服务,有更新消息会通过邮件发送给你 了解mirror和repository,repository是存放在mirror上的 /etc/pacman.d/mirrorlist 中列出了所有的镜像/服务器,把中国的服务器位置放到前面,这样下载东西的时候网速就快很多 /etc/pacman.conf中有官方仓库,可以添加非官方仓库,仓库就是用来存放软件的,添加的越多,能搜到的软件就越多.]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[zsh安装配置]]></title>
    <url>%2F2019%2F04%2F25%2Fzsh%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[zsh配置好了是很好看的 安装 zsh pacman -S zsh pacman -S zsh-completions 切换shell为zsh 查看现在使用的shell chsl -l 设置默认shell为zsh chsh -s /bin/zsh 切换为zsh zsh 基础配置添加以下到.zshrc里 autoload -Uz compinit promptinit compinit promptinit 查看自带的主题 prompt -l 然后选择一种 prompt xxx #xxx为主题名 我们发现这些主题并不是特别好看，所以安装 0h-my-zsh yay -S oh-my-zsh-git 安装这个之后我们就可以选择一种主题了例如： ZSH_THEME=&quot;agnoster&quot; 我们发现并不像下面这么好看 那是因为没有安装 powerline 这种字体，所以终端就无法显示这些箭头了。 git clone https://github.com/powerline/fonts.git --depth=1 cd fonts ./install.sh cd .. rm -rf fonts 重新打开一个终端就可以正常显示了 然后我们还可以找更多喜欢的 主题我比较喜欢 powerlevel9k 这款主题 sudo pacman -S zsh-theme-powerlevel9k 设置为终端主题 echo &apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme&apos; &gt;&gt; ~/.zshrc 这样设置之后已经很好看了，不过有些自带的图标显示不了 下载 Awesome-Terminal Fonts pacman -Syu awesome-terminal-fonts 然后配置一下 在.zshrc找到设置 powerlevel9k的位置，将下面的配置放到它上面 POWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos; 重新打开一个新的终端，就可以看到漂亮的主题了有关主题更多的配置，就照着这里 设置 好了 9.安装zsh-syntax-highlighting sudo pacman -S zsh-syntax-highlighting 我的 zsh配置文件 1234567891011121314151617181920212223242526272829export TERM=&quot;xterm-256color&quot; #common settingautoload -Uz compinit promptinitcompinitpromptinitzstyle &apos;:completion::complete:*&apos; gain-privileges 1zstyle &apos;:completion:*&apos; menu select#theme settingPOWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-themePOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(load dir vcs ssh dir_writable)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history newline)#use to highlight syntax like fishsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh#highlight man man() &#123; LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; &#125;#user aliasalias l=&apos;ls -lh --color=auto&apos;]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows系统的安装]]></title>
    <url>%2F2019%2F04%2F25%2Fwindows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[PS：其实很久之前就想写这个的，虽然安装了无数次，但是因为安装系统的时候不好截屏，所以就一直没做：）还记得大一的时候因为安装linux，然后把win10弄坏了（没有启动项），差点就拿去店里修了。但是因为太年轻=任性，所以最后还是自己安装好了系统。之后也给别人安装了许多次系统，但是也就那次真的是开心，像吃了蜂蜜。 好了废话不多说了，接下来就开始了。 在安装系统之前第一件要做的事就是备份好重要的资料，比如说作业：)，不然就有点意思了。 第二件要做的事是弄清楚你的电脑（主板）是啥型号，然后百度一下找到开机时怎么进BIOS和启动项选择的界面的。比如我的联想电脑F2进BIOS，F12进启动项选择。 这里就要说一些概念了，以便决定你的系统是进行怎么样的分区。你的整个磁盘的磁盘分区表采用的是gpt还是mbr？可能有人不懂gpt和mbr是啥，简单的说gpt是比较新的技术，mbr技术比较老；gpt分区表需要一个esp分区来存放开机时的启动文件，而mbr分区表则不需要。如果你想用gpt分区表，那么就要确保你的bios里面设置了支持uefi启动，这个知识点需要自己去get。 既然上面说了磁盘分区表是对于整个磁盘而言的，所以如果你要修改的话，整个磁盘相当于格式化了，所以你懂得，只有保证磁盘上没有重要文件才可以这样操作。当然了，我是推荐用gpt分区表的，因为对于装多个系统来说很好用鸭。 分区：用了这么久的电脑，我们都习惯了系统有多个分区了吧，比如系统盘C盘，软件D盘，其它E盘等，分区的好处是各个分区相对独立，也便于归类。所以说给磁盘进行分区这个技能要提前get到。 道理讲完了，下面开始正式的安装。 制作U盘启动器。此方法我之前写的有介绍过，这里略过了。 下载windows镜像文件。按照这个步骤下载下来格式为ISO的系统镜像，具体的操作不解释了。 这个iso镜像文件放那里呢，只要不是放在你要安装系统的分区就好了。你也可以复制到你制作的启动U盘里。 开机选择U盘启动，进入pe系统。在这里将完成我们的大部分安装步骤。 注意：以下步骤本来是要在pe下操作的，但是pe下不好截屏，所以我就用虚拟机代替了，但是步骤一样，可能图标长得有点不同。同时我是用一整个磁盘来安装系统的，如果你的磁盘上还有其他分区，那么就要注意区别了。 打开一个叫diskgenius的用来分区的软件。我们可以看到一个空闲为5G大小的磁盘，这个就是我要安装系统的磁盘。可以看到他的磁盘分区表格式为mbr，接下来我会采用gpt分区表格式来安装系统。如果你的磁盘也是mbr，同时想用gpt分区表，而且没有其他分区，或者其他分区没有重要文件，那么继续往下看，否则看第六点。 5.1 选中整个磁盘，如图中的HD1：VBOXHARDDISK（5GB），然后右键选择转换分区表类型为guid格式，然后选择左上角的保存更改。 5.2 选中整个磁盘，右键–&gt;选择建立新分区。 5.3 这里要勾上建立esp分区，大小100MB-500MB之间随便选。太大了也没必要，太小肯定不行。并且不要选择建立msr分区。然后确定，再将剩余的空间作为系统盘。 5.4 一路确定下来，然后点击左上角的保存更改。 5.5 一般来说esp分区就会自动分配有一个盘符，如果没有那么我们就手动给他添加上去。右键–&gt;指派新的驱动器号 5.6 找到我们下载的iso系统镜像，右键–&gt;装载 （或者叫其他什么的名字，目的是挂载后可以读取到里面的文件），记住挂载的盘符位置。 5.7 在桌面上打开一个叫WinNTSetup的软件。 5.8 .1在选择windows安装源这里要选择刚刚挂载的windows镜像目录里面的sources–&gt;install.wim5.8. 2 在选择引导器这里选择之前分配的esp分区的盘符5.8 .3 在选择安装驱动器这里选择系统安装的位置 5.9 然后点击开始安装，然后确定，等待大约十几分钟，复制完之后选择重启，重启之后按照步骤操作选择语言什么的………大概十几分钟就可以安装好系统了 如果你是mbr分区，而且不想转换为gpt分区表，那就好办了。第一步和5.8.1的步骤一样，选择引导驱动器和选择安装驱动器都选择要安装系统的分区。其它的步骤一样。 到这一步，系统已经安装好了。是不是觉得安装系统如此简单。。。。。。就像宫本的台词：无敌的我。 激活系统。另外如果还有不懂的话，可以参考我录得视频，安装系统 （看着像上个世纪的，其实就是去年录得）。激活系统]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[U盘启动盘的制作]]></title>
    <url>%2F2019%2F04%2F25%2FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E7%9A%84%E5%88%B6%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[在说到安装以及修复操作系统时，很多时候我们都会用到PE启动器，这里就写下如何制作它。 为什么要制作这个东西呢我们知道一旦电脑出现问题并且无法开机后，就没办法进系统里面去修复它了。所以我们需要借助别的工具来修复系统。U盘启动器/PE启动盘，就是将一个微型的操作系统安装到U盘里，从U盘启动这个微操作系统。然后对我们有问题的系统（不能正常启动）进行修复。 如何制作这个U盘启动器1.下载制作软件。这里推荐绿色纯净的WePE，当然了你也可以选择其它喜欢的比如熟悉的大白菜，老毛桃 ……2.安装进U盘。选择一个没有任何文件的U盘（因为安装的时候会格式化U盘），4G足够了，插入U盘，打开软件，选择其它安装方式的U盘安装方式，待写入U盘里选择插入的U盘，然后点击安装进U盘。 这样一个U盘启动盘就制作好了然后就可以安装或者修复系统了 启动盘制作好了，如何进入这个启动盘呢我们每个电脑的主板都不一样，这个就需要自己搜自己电脑是怎么进启动项界面的了。比如我的联想就是在开机的时候按 F12，然后选择需要启动那个选项的。选择U盘启动项，这样就进PE启动盘了。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu14配置静态ip及使用xshell传输文件]]></title>
    <url>%2F2019%2F04%2F25%2Fubuntu14%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%8F%8A%E4%BD%BF%E7%94%A8xshell%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[修改配置文件 sudo vim /etc/network/interfaces 添加： auto eth0 iface eth0 inet static address 192.168.0.111 #配置没有被使用的ip地址 netmask 255.255.255.0 gateway 192.168.0.252 #写入网关地址 dns-nameservers 1.1.1.1 #写dns解析地址 a. 其中dns（域名解析服务）是必须要写的，不然配置不会成功 b. 网关地址哪里看？通过命令查询： ip route c. 怎么知道那些ip地址没有被使用？ ping 想要使用的ip地址 如果没有ping通，那么就可以使用 或者使用更高级一点的工具：nmap 首先安装nmap这个软件 sudo apt-get install nmap 然后使用ping的方式扫描局域网内所有已经使用的ip nmap -sn 192.168.0.0/24 重启网络服务 /etc/init.d/networking restart 将ssh设置为开机启动 chkconfig --add ssh chkconfig ssh on 然后使用xshell连接ubuntu安装一个lrzsz的软件，用来在windows与ubuntu间传输文件 sudo apt-get install lrzsz 上传文件：rz(receive zmodem) rz 下载文件：sz(send zmodem) sz 文件名 PS:有没有觉得挺方便的？]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime-text3配置随笔]]></title>
    <url>%2F2019%2F04%2F25%2Fsublime-text3%E9%85%8D%E7%BD%AE%E9%9A%8F%E7%AC%94%2F</url>
    <content type="text"><![CDATA[sublime 的goto，macro，group搭配vim的使用，飘逸。 优点：轻量，插件多 缺点：调试不方便 1.首先安装package control，作用是安装管理其它插件 2.然后需要安装其它插件都是Ctrl+shift+p调出命令窗口，然后输入package control install，等一会就可以输入插件名并安装了。 3.preference-setting加入这两句，高亮光标所在行和所在的文件。 &quot;highlight_line&quot;: true, &quot;highlight_modified_tabs&quot;: true, 4.然后是一些插件的推荐 a folder icon 提供左边打开文件的图标 package resource view]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[parrotos-4-x使用指南]]></title>
    <url>%2F2019%2F04%2F25%2Fparrotos-4-x%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[parrotos4.18的版本取消了root用户（虽然有root用户，但是无法使用），这给使用带来了许多的麻烦。所以第一件要做的事就是让普通用户加入sudoer。 由于没有root权限，不能在系统里去修改。所以使用别的系统去修改12345678910![](https://upload-images.jianshu.io/upload_images/9937522-fbcde508a3bd0a0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)* 然后正常进入系统后```sudo su```就可以使用管理员权限了![](https://upload-images.jianshu.io/upload_images/9937522-45c5b4267ea3910e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)---2. **然后就是第二个问题了，因为有两块硬盘，所以安装时启动程序默认安装到了第一块硬盘，但是系统却在第二块硬盘上，所以需要重新安装一下grub**由于有了root权限，所以有权限去安装grub* 挂载efi分区```/dev/sdb1```到```/boot/efi```下![](https://upload-images.jianshu.io/upload_images/9937522-899278c16920cbbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)* 修改```/etc/fstab```，将efi分区调整为```/dev/sdb1 然后安装grub到efi分区 12grub-mkconfig -o /boot/grub/grub.cfggrub-install --target=x86_64-efi --efi-directroy=/dev/sdb1 --bootloader-id=grub 安装后efi分区包含一个grub和一个parrot目录，并分别有一个grubx64.efi文件 到这里已经把grub安装到了第二块磁盘上了，但是这个grub的启动项不完整，需要手动添加Android的启动项，以及一些关机重启的选项over]]></content>
      <categories>
        <category>linux</category>
        <category>渗透系统</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>parrotos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux的一些美化优化]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[所以pacman命令能生效的前提是开启了AUR源，以及安装了AUR的包管理器yay。在pacman搜索不到的情况下使用yay。 archlinux默认下载软件后是不会自动删除软件的安装包的,长时间不清理那么就会很占磁盘空间,必须要手动进行清除 sudo pacman -Scc 但是这样还是不是特别好,毕竟有时候会忘了,那么就可以将下载包的位置换一下.默认是下载到了/var/cache/pacman/pkg这个位置 sudo vim /etc/pacman.conf 修改cache的位置就ok了 让man有不同颜色显示，加入.bashrc或者.zshrc，取决于使用何种shell man() { LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; } diff没有颜色显示，那么安装colordiff 安装编程用字体 iosevka 将firefox等浏览器的缓存文件放入RAM，加快响应速度以及减少SSD的数据写入。 pacman -S profile-sync-daemon systemctl --user enable psd.service 开启overlay：在~/.config/psd/psd.conf中加入 USE_OVERLAYFS=&quot;yes&quot; 在 /etc/sudoers/ 中加入 user ALL=(ALL) NOPASSWD: /usr/bin/psd-overlay-helper 安装QQ或者TIM。先在 /etc/pacman.conf 中开启multilib仓库 pacman -S deepin-qq-im pacman -S deepin-wine-tim]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux搜狗输入法的安装]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[首先在官网下载安装包然后执行下面两条命令就好了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux基础-认识]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E5%9F%BA%E7%A1%80-%E8%AE%A4%E8%AF%86%2F</url>
    <content type="text"><![CDATA[学习主题曲 linux上一切皆文件什么意思呢？就是说你所有的配置操作，都可以通过修改文件来达到效果，不同于windows那样通过软件设置。修改ip地址、修改主机名称、修改用户、调节屏幕亮度、音频声音大小。。。如你所知，都可以通过修改文件配置内容达到目的 root拥有最高权限linux上很大的一个特色就是可以多用户登录，那么每个用户对应就有不同的权限。root拥有至高无上的权限，也就是说一般不用root用户登录，因为你的一个不小心就可能造成无法挽回的错误（比如说把系统删掉）。那么普通用户没有权限怎么操作呢？我们是可以的，既可以临时使用root权限 sudo 命令 ，也可以切换到root用户去 su home（家）是最终归宿无论你用何种身份登录终端，你一定会先到达一个称为家的地方。pwd查看一下，/home/user这个目录就是家，或者~也称为家。无论你进入了那个目录，cd会带你回到家的地方。家目录已经为我们分好了许多目录，我们可以将日常操作的文件放入对应的地方。比如说Picture里面就放壁纸图片什么的 熟悉linux命令怎么熟悉呢？你一定会想到记命令，没错，但是不全对。命令记忆是有方法的，比如说cd这个命令，改变所在位置对吧，英文为change directory,是不是很好记了，首拼就是cd。pwd显示当前所在位置,print working directory的首拼。sudo临时使用root权限，super user do的首拼。su切换root用户，super user的首拼。 善于使用帮助命令那么多的命令，已经很难记了，如果再加上参数怎么办？参数其实不需要怎么记，在你使用的时候查看一下帮助文档就好了，命令 --help就是显示简单的使用帮助，一般用这个就够了，如果你需要更详细的解释，就用man 命令吧 好了，基础就这么多了，了解了这些，相信学起来就如鱼得水了吧]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>archlinux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux修改磁盘卷标]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E4%BF%AE%E6%94%B9%E7%A3%81%E7%9B%98%E5%8D%B7%E6%A0%87%2F</url>
    <content type="text"><![CDATA[在windows上修改磁盘的名称只要右键就可以修改了,但是linux中却害得我好找啊首先是修改ext2,ext3,ext4这种类型的 e2label /dev/sdb3 ARCHLINUX 修改ntfs的卷标 ntfslabel /dev/sda2 WIN10]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-补充]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[前面说的rule-specification不够详细,so,补充一下rule-specification是用来指定符合条件的规则,包含了对这个规则的处理注意了:写规则的时候是可以用tab键来补全的,所以这样就简单多了 有些参数是支持取反的 -4, –ipv4 指定使用ipv4 -6, –ipv6 指定使用ipv6 [!] -p, –protocol protocol 指定使用的协议,这个参数就支持取反,如果我想写除tcp之外的协议:! -p tcp例如我写这个的时候不知道有那些协议啊?tab一下就出来了 [!] -s, –source address[/mask][,…] 指定源主机地址,包含a network name, a hostname, a network IP address [!] -d, –destination address[/mask][,…]与上面的参数一样,指定目标主机地址 -m, –match match 匹配模块,可以调用模块的扩展功能.举个例子:使用 -p tcp参数的时候,就是指定匹配tcp协议.而使用-m tcp参数的时候,是调用tcp模块.不过我真不知道这有啥用,恕我孤陋寡闻了 -j, –jump target 动作,包含ACCEPT DROP ECN MARK MIRROR REDIRECT RETURN TCPMSS ULOG DNAT DSCP LOG MASQUERADE QUEUE REJECT SNAT TOS -g, –goto chain指定跳转用户自定义的链 [!] -i, –in-interface name 指定数据进来的网络接口 [!] -o, –out-interface name 指定数据出去的网络接口 [!] -f, –fragment 只能是ipv4起作用,类似于模糊匹配,通过数据包片段来匹配 -c, –set-counters packets bytes 允许root初始化链的数据]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-语法]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[今天心情不好,果然,放个歌的链接都有问题 相信看了前面的还是不懂怎么写,其实前面的只是以讲故事的方式了解了一下表和链,以及简单的添加和删除 这里总结一下: iptables -t 使用什么表 -增加/删除/修改 那条链 (数字) -p 协议 -s 目标地址 -j 丢弃/接收 当然了,也不是每条规则都需要写这么多参数的.只要能达到目标即可,比如说:我想阻止所有的tcp请求(默认是filter表可以不写,-I默认写入到规则列表最上面,后面数字也不必写,已经阻止所有tcp请求了,ip地址也不需要写) sudo iptables -I INPUT -p tcp -j DROP 上面这条规则写完后,你会惊喜的发现你已经打不开百度网页了.为什么呢?我只阻止了tcp请求啊,跟服务器给我发消息有什么关系呢?tcp协议是有三次握手的,网页传输正好使用了tcp协议,我们给服务器发送一个请求后,服务器会给我们回一个请求,可是我们阻止了所有的tcp请求,自然无法完成握手,也就无法打开网页了.打不开网页多可怕,所以把上面的规则删掉 sudo iptables -D INPUT 1 下面正式写语法: 新增规则 iptables [-t table] -A chain rule-specification iptables [-t table] -I chain rulenum rule-specification iptables [-t table] -N chain rule-specification表示指定规则,比如说指定ip,指定协议,指定动作这些rule-specification =[matches...] [target] match = -m matchname [per-match-options]举个例子:match为-p tcp 或者 -s 192.168.0.12 target = -j targetname [per-target-options]举个例子:target为-j DROP 或者 -j ACCEPT [-t table]表示可选,可以写,可以不写(如果是filter表就不需要写,其它表是必须写的) -A参数与-I参数区别:A表示append/add,新增或在已有规则后面添加.I表示insert,插入到指定位置,可以将规则写入到表中的任意位置,这个位置就是后面的rulenum决定的. -N表示添加用户自定义的链 targetname表示对规则的处理,有accept接收/drop丢弃/return暂存 删除规则 iptables [-t table] -D chain rulenum iptables [-t table] -F iptables [-t table] -X -D删除rulenum所指的规则 -F删除指定的整个表的规则 -X删除用户自定义的表 查看规则 iptables [-t table] -C chain rule-specification iptables [-t table] -L [chain [rulenum]] iptables [-t table] -S [chain [rulenum]] -Ccheck检查是否存在规则,存在不给提示,不存在给出提示-L与-S区别:L显示的信息全面,S显示简略信息常用的查看规则(显示排序数字): sudo iptables -nvL --line-numbers 修改规则 iptables [-t table] -R chain rulenum rule-specification iptables [-t table] -E old-chain-name new-chain-name iptables [-t table] -P chain target -Rreplace替代rulenum指定的规则 -Erename修改用户自定义链的名字 -Ppolicy修改iptables默认链的规则,target只有drop和accept这两种情况举个例子:我们的个人电脑一般是不会用来做路由的吧,路由转发这种事是服务器和路由器做的,所以forward这条链对我们的作用几乎为零,那我们就可以将链的规则修改为丢弃 sudo iptables -P FORWARD -j DROP 清除所有链/指定链/指定规则的数据包统计 iptables [-t table] -Z [chain [rulenum]] over over语法已经完了想想和mysql的增删改查好像没多大区别吧,其实语法写起来简单,难的是rule-specification的写法,就比如说可以ping别的主机且不允许被ping,就需要了解icmp-type的相关知识了.]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-规则]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%A7%84%E5%88%99%2F</url>
    <content type="text"><![CDATA[iptables有五张表(filter,nat,mangle,raw,security),五个规则链(prerouting,input,forward,output,postrouting).要全部弄懂好像有点麻烦,不过先挑常用的来学学还是一个不错的选择. 什么是表呢?用过myql数据库的应该很清楚,表是用来存放数据的.就像excel表格一样,将数据一条一条的存到数据库中.同理,这里的表也是这个作用,表里面存放的就是我们写好的规则.为什么又分了五个呢,一个不行吗?我觉得一个也不是不可以,但是那样不是就很乱了吗?分类管理还是挺好的.既然说到分类管理了,那么五条链也就比较好理解了,也是为了分类管理. 在表中存放着许多规则,我们把这些规则分个类,这些类就是链.而每张表的功能又不一样,所以每张表中的链也就不一样了 nat表:prerouting,input,output,postrouting filter表:input,forward,output mangle:prerouting,iniput,forward,output,postrouting raw表:prerouting,output security表:input,forward,output 上面这样写应该还是不好理解,到底是怎么起作用的?arch wiki上的这张图很好的展示了如何接收/发送数据.以数据的流向为依据,将这些表和链很好的连接在了一起,非常漂亮.所以又不得不夸夸arch wiki了,写的是真的好. 12345678910111213141516171819202122232425262728293031323334 XXXXXXXXXXXXXXXXXX XXX Network XXX XXXXXXXXXXXXXXXXXX + | v +-------------+ +------------------+ |table: filter| &lt;---+ | table: nat | |chain: INPUT | | | chain: PREROUTING| +-----+-------+ | +--------+---------+ | | | v | v [local process] | **************** +--------------+ | +---------+ Routing decision +------&gt; |table: filter | v **************** |chain: FORWARD|**************** +------+-------+Routing decision |**************** | | | v **************** |+-------------+ +------&gt; Routing decision &lt;---------------+|table: nat | | ****************|chain: OUTPUT| | ++-----+-------+ | | | | v v | +-------------------++--------------+ | | table: nat ||table: filter | +----+ | chain: POSTROUTING||chain: OUTPUT | +--------+----------++--------------+ | v XXXXXXXXXXXXXXXXXX XXX Network XXX XXXXXXXXXXXXXXXXXX 看这个表就知道我们主要操作的还是filter表了.下面就操作一下,秀操作的时候到了,有没有操作?(PS:老年人手速,也想有操作?) iptables的规则书写是有大小写区别的 首先我们不想别人ping我们的ip sudo iptables -A INPUT -p icmp -j DROP 其实完整的写法是下面这样的(需要指定是那张表),但是它默认就是filter表,而我们操作的也是filter表就省略了 sudo iptables -t filter -A INPUT -p icmp -j DROP 可以查看一下 sudo iptables -S 这样虽然别人不能ping我们了,但是我们发现自己也无法ping别人了,所以得改 这个iptables执行是按顺序一条一条从上向下执行的,所以我们想写在之前写的那条规则上面就要使用-I这个参数,insert将规则插入到最上面,如果后面再接一个数字的话,就是插入到指定第几条规则的上面 在这里我们可以看到icmp-type对应数字的意义,icmp-type 8代表echo request,就是别人ping我们时怎么回答 sudo iptables -I INPUT -p icmp --icmp-type 8 -j DROP 上面这句话就是别人ping我们时,我们不回答,直接丢弃.其实这里还是没有解决无法ping别人的问题,只是替代了上面那条规则 好,这里就写怎么解决ping别人.前面是别人ping我们时,发给我们的icmp数据包直接丢弃.而我们自己ping别人时是需要别人发给我们一个icmp回应包才算ping通的,所以就要接收这个包咯,前面不是说了不接受包吗?icmp-type 0就是接受我们发给别人后回传的数据包的.通过数据包类型的不同来区分到底是别人ping我们的数据包还是回传的数据包我们把这条规则加到最开始 sudo iptables -I INPUT 1 -p icmp --icmp-type 0 -j ACCEPT 还记得我们添加的第一条规则吗,没有作用了,我们把它删除 sudo iptables -D INPUT 3 然后查看一下现在的规则 sudo iptables -S 最后保存一下,以免下次开机这些规则就丢失了 su iptables-save &gt; /etc/iptables/iptables-rules]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-基础]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[早就听闻iptables很难了,也一直没有学.但是呢,这么基础和重要的东西不掌握点总觉得缺点什么.是的,关闭端口/拒绝访问都不会,要我何用? archlinux安装系统的时候默认就已经安装好了iptables,只是没有开启而已,不信我们看一下就知道了 arch wiki上说开启这个服务首先需要有 /etc/iptables/iptables.rules这个文件,默认是没有的(但是我的系统上有是什么鬼?),没有就自己新建一个 sudo touch /etc/iptables/iptables.rules 或者复制一个 sudo cp /etc/iptables/empty.rules /etc/iptables/iptables.rules 然后就可以启动了 sudo systemctl start iptables 如果想要开机自动启动的话,就这样设置 sudo systemctl enable iptables 如果是使用的ipv6那么就这样设置(多个6而已) sudo systemctl start ip6tables sudo systemctl enable ip6tables 等等,我启动时竟然出错了? 终于找到原因了,那个iptables.rules文件中说了要清空内容,但是默认是没有清空的,删掉之后再启动就OK了(所以创建这个文件时还是用touch吧,不要copy的好) 可能现在写规则还是会出现一些错误提示,重启一下就ok 现在来写第一条规则,了解一下怎么保存规则的我想阻止别人ping 我的ip地址 iptables -A INPUT -p icmp -j DROP 查看写的这条规则: sudo iptables -nvL 现在写的这个可以临时生效,只要重启后就失效了,所以要保存这条规则,需将规则保存在/etc/iptables/iptables-rules中这条命令需要root权限,但是sudo来执行的话,好像有点问题.所以切换root用户操作 su iptables-save &gt; /etc/iptables/iptables-rules 搞定至此 ,在别的电脑上ping我的ip就ping不通了 开心]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gnome主题设置]]></title>
    <url>%2F2019%2F04%2F25%2Fgnome%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[怎么说呢,gnome主题确实做的不错,不过个人觉得mac的主题更好看,所以安装gnome后第一件事就是修改一下默认的主题 首先我们需要安装gnome-tweaks这个软件(好像安装gnome时已经安装了,忘了) ,用来做个性化设置 sudo pacman -S gnome-tweaks 主题分为三个部分:application(所有应用程序的主题),icons(所有图标的主题),shell(桌面最上面的状态栏的主题).所以在下载的时候需要注意了,有的主题包里面不一定包含了shell或者icons,可能安装之后发现最上面的状态栏并没有改变,其实是因为那个主题包不包含shell主题了 如果要改变shell,那么还需要安装一个插件,用来启用user themes(忘了要不要安装,好像默认已经安装上了).然后在设置中启用它 sudo pacman -S gnome-shell-extensions 然后就是去下载了opendesktop这个网站有很多主题,而链接里的这个主题包包含了application和shell主题.所以安装后application和shell的主题都可以被改变 如何安装,applications和shell主题可以放在~/.local/share/themes 这个目录下,icons可以放在~/.local/share/icons这个目录下或者可以直接放在家目录下,在家目录下新建.themes文件夹用来放application和shell主题,在家目录下新建.icons文件夹用来放icons主题. 把下载下来的压缩包解压之后放在对应文件夹下,然后打开tweaks设置就ok了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gnome设置默认file-manager]]></title>
    <url>%2F2019%2F04%2F25%2Fgnome%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4file-manager%2F</url>
    <content type="text"><![CDATA[安装ranger后，再打开filemanager时总是会默认用ranger打开，觉得十分不方便，但是在设置里找不到设置默认文件管理器的选项 所以需要手动设置：会用到一个叫 xdg-mime 的命令 mime:多用途Internet邮件扩展（MIME）类型 是一种标准化的方式来表示文档的性质和格式 格式：type/subtype gnome自带的文件管理器叫 nautilus 用下面命令来设置默认文件管理器 xdg-mime default org.gnome.Nautilus.desktop inode/directory 最后一行可以看到nautilus已经加进去了 也可以用下面的命令查看默认文件管理器 xdg-mime query default inode/directory]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux zsh安装配置]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux-zsh%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[zsh配置好了是很好看的 安装 zsh pacman -S zsh pacman -S zsh-completions 切换shell为zsh 查看现在使用的shell chsl -l 设置默认shell为zsh chsh -s /bin/zsh 切换为zsh zsh 基础配置添加以下到.zshrc里 autoload -Uz compinit promptinit compinit promptinit 查看自带的主题 prompt -l 然后选择一种 prompt xxx #xxx为主题名 我们发现这些主题并不是特别好看，所以安装 0h-my-zsh yay -S oh-my-zsh-git 安装这个之后我们就可以选择一种主题了例如： ZSH_THEME=&quot;agnoster&quot; 我们发现并不像下面这么好看 那是因为没有安装 powerline 这种字体，所以终端就无法显示这些箭头了。 git clone https://github.com/powerline/fonts.git --depth=1 cd fonts ./install.sh cd .. rm -rf fonts 重新打开一个终端就可以正常显示了 然后我们还可以找更多喜欢的 主题我比较喜欢 powerlevel9k 这款主题 sudo pacman -S zsh-theme-powerlevel9k 设置为终端主题 echo &apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme&apos; &gt;&gt; ~/.zshrc 这样设置之后已经很好看了，不过有些自带的图标显示不了 下载 Awesome-Terminal Fonts pacman -Syu awesome-terminal-fonts 然后配置一下 在.zshrc找到设置 powerlevel9k的位置，将下面的配置放到它上面 POWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos; 重新打开一个新的终端，就可以看到漂亮的主题了有关主题更多的配置，就照着这里 设置 好了 9.安装zsh-syntax-highlighting sudo pacman -S zsh-syntax-highlighting 我的 zsh配置文件 1234567891011121314151617181920212223242526272829export TERM=&quot;xterm-256color&quot; #common settingautoload -Uz compinit promptinitcompinitpromptinitzstyle &apos;:completion::complete:*&apos; gain-privileges 1zstyle &apos;:completion:*&apos; menu select#theme settingPOWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-themePOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(load dir vcs ssh dir_writable)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history newline)#use to highlight syntax like fishsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh#highlight man man() &#123; LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; &#125;#user aliasalias l=&apos;ls -lh --color=auto&apos;]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[firefox无法输入中文]]></title>
    <url>%2F2019%2F04%2F25%2Ffirefox%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%2F</url>
    <content type="text"><![CDATA[在parrotOS英文版上安装了fcitx输入框架和googlepinyin输入法，在终端可以输入中文，但是在firefox等浏览器里无法使用中文输入法解决方法：原来是local-gen里面没有设置中文环境。然后执行1sudo locale-gen 这样就可以在firefox里输入中文了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EncFS加密]]></title>
    <url>%2F2019%2F04%2F25%2FEncFS%E5%8A%A0%E5%AF%86%2F</url>
    <content type="text"><![CDATA[linux下面加密文件的方法还是比较多的，常见的vim，zip，tar等都可以加密。不过这里要说的是加密文件夹的一个软件：encfs 所有的路径都是绝对路径,假设文件都在家目录 假设要加密的是data这个文件夹，先创建一个存加密文件的.data文件夹。 mkdir ～/.data 加密data文件夹 encfs ~/.data ~/data 取消被加密的文件的挂载 fuser -u ~/data 重新挂载文件 encfs ~/.data ~/data]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux手动安装mysql-5.6.42]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85mysql-5-6-42%2F</url>
    <content type="text"><![CDATA[不像之前那样，一条命令就可以安装好，手动安装真的很麻烦。但是这么麻烦为什么还要安装呢？还不是因为mysql5.7以后版本有ssl加密，驱动包也不同，而我又不会，学习java又要用。哎，所以不得不手动安装。 ####参考教程多亏了网上的教程 教程1 教程2 下载的mysql版本是5.6.42,同样的方法，在5.5.42上没有成功。或许是之前步骤错误吧。 参考官网教程步骤都差不多，但是一定是把解压后的文件放到/usr/local/文件下。不然会有奇奇怪怪的问题。（ps：本来想放到自己的家目录的），我就是直接在/usr/local/下新建了一个mysql的文件夹，然后将解压的文件全部复制进去，没有做链接这个操作。 所有操作都基于root权限 ####具体安装步骤 很重要的一点是archlinux安装mysql后是启动不了的，因为缺少了一个aur的依赖包，所以先安装上。 pacman -S ncurses5-compat-libs 解压安装包。 tar -xvzf ~/Downloads/mysql-5.6.42-linux-glibc2.12-x86_64.tar.gz 添加mysql组。 groupadd mysql 添加mysql用户。 useradd -r -g mysql -s /bin/false mysql 进入安装目录，创建文件夹。 cd /usr/local mkdir mysql 把解压好的文件复制到安装目录。 cp -r ~/Downloads/mysql-5.6.42-linux-glibc2.12-x86_64/* /usr/local/mysql 修改文件的所属用户和组。 cd mysql &amp;&amp; chown -R mysql:mysql ./ 执行安装脚本。 ./scripts/mysql_install_db --user=mysql 再修改文件的所属用户和组 chown -R root:root ./ chown -R mysql:mysql data 启动mysql。 ./support-files/mysql.server start 修改密码。 ./bin/mysqladmin -u root -h localhost.localdomain password &apos;密码&apos; 启动mysql。 ./bin/mysql -uroot -p ####修改一些东西，方便下次启动 如果不做一些修改的话，那么每次都要进入/usr/share/mysql然后再执行启动命令，这样有点麻烦。 给启动服务命令加一个别名 vim .zshrc alias mysqld=&apos;sudo /usr/local/mysql/support-files/mysql.server&apos; 这样下次操作时，就只需要mysqld option mysqld start/stop/restart/status mysql不是系统命令，所以当你使用mysql命令登录时，会提示找不到此命令，所以做一个链接 ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql 这样下次登录mysql就简单许多了 mysql -uroot -p ps:本来想将mysql.server加入systemd，然后利用systemctl来启动的，但是失败了，也不纠结了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装mysql和ssh]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85mysql%E5%92%8Cssh%2F</url>
    <content type="text"><![CDATA[mysql安装 1.使用pacman查看mysql版本 sudo pacman -Si mysql 2.下载安装mysql sudo pacman -S mysql 仔细看安装的说明，里面有介绍初始化安装的步骤 3.初始化安装 sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql 仔细看初始化安装的输出，里面有初始登录的密码 4.启动mysql，archlinux使用的是systemd sudo systemctl start mysqld.service 5.查看mysql服务是否启动 systemctl status mysqld.service 6.连接mysql数据库 mysql -uroot -p 输入上面的临时密码 7.可以看到提示说需要修改密码 alter user user() identified by &apos;新密码&apos; 密码长度太短会报错。。。。。。 8.好了，密码修改成功了，可以退出去然后再用新密码进来 exit mysql -uroot -p 输入新密码进入数据库，然后就可以操作了 9.下次登录就可以直接启动了 sudo systemctl start mysqld.service mysql -uroot -p 10.如果你想让mysql服务开机自启动 sudo systemctl enable mysqld.service ssh远程连接 安装ssh pacman -S openssh 系统开启ssh服务 systemctl start sshd.service ip -color addr show #查看ip地址 然后在其他终端就可以连接了 ssh 用户名@地址]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装marktext(创建快捷方式)]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85marktext-%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Mark Text is a Markdown editor for Mac, Windows, and Linux. It is a concise text editor, dedicated to improving your editing efficiency. 最近想用markdown记笔记，所以选择了marktext.由于通过aur安装失败，所以直接在官网下载并安装 下载完，解压之后就可以直接使用 cd .local/marktext-0.13.65 ./marktext 这样使用是没有问题的，但是有点麻烦，因为通过搜索软件那样直接搜是搜不到的（环境变量没有设置），而且没有图标。所以呢，就自己创建一个快捷方式（当然也可以使用ln 来创建软连接，然后。。。。），不过这里我使用了另外的一个方式 首先去官网把logo图片下载下来，并移动到marktext的安装目录 在gnome桌面环境下，app的桌面快捷方式在~/.local/share/applications下 cd /home/narcissus/.local/share/applications touch marktext.desktop vim marktext.desktop 然后添加下面信息12345678[Desktop Entry]Version=0.13.65Type=ApplicationName=marktextIcon=/home/narcissus/.local/marktext-0.13.65/logo.pngExec=&quot;/home/narcissus/.local/marktext-0.13.65/marktext&quot; %fCategories=Development;Terminal=false 然后就可以搜索到了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装之后的配置]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85%E4%B9%8B%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[安装软件 1.pacman的使用（以前介绍的不全，现在补上） pacman -Syu 升级系统pacman -Ss 搜索软件pacman -Si 查看软件详细信息pacman -S 安装软件pacman -Rs 删除软件pacman -Qs 查询已安装软件pacman -Qi 查询已安装软件详细信息这两个查询命令有啥作用呢？可以把已安装的软件导出到一个文件里面去，下次安装系统就知道要安装那么东西了。 a 如果想指定某些软件不更新，该怎么做？例如我不想更新mate-desktop这个软件，那么就修改 /etc/pacman.conf 这个文件，ignorepkg后面写上不需要更新的软件名就好了 b 是不是每次搜索软件的时候终端搜索出来的结果都很难看（都是一个颜色），去掉color的注释就好了 一些必备应用： 字体：ttf-dejavu ttf-inconsolata ； 资源查看：htop； 终端图片查看：feh (used for x window , set desktop background)； 编辑器： vim ； 终端文件管理器：ranger 终端视频播放器：mplayer 2.配置aur来启用更多的软件库 : 找到aur源，选择一种 比如添加163源 1vim /etc/pacman.conf 123## 网易 (ipv4, http, https)[archlinuxcn]Server = https://mirrors.163.com/archlinux-cn/$arch 然后需要安装archlinuxcn签名 pacman -S archlinuxcn-keyring 然后安装一个aur的包管理器比如安装：yay1pacman -S git 123git clone https://aur.archlinux.org/yay.gitcd yaymakepkg -si 然后就可以使用yay来安装软件了 3.firefox 123pacman -S firefoxpacman -S wqy-microhei #firefox显示中文pacman -S flashplugin #firefox播放视频 4.安装搜狗输入法 123pacman -S fcitxpacman -S fcitx-configtoolpacman -S fcitx-im 1yay -S fcitx-sogoupinyin 如果使用的是wayland，那么在1234```GTK_IM_MODULE=fcitxQT_IM_MODULE=fcitxXMODIFIERS=@im=fcitx 如果使用xorg，则添加到12* 5.安装网易云音乐 yay -S netease-cloud-music1* 6.安装urxvt，以及配置xterm pacman -S rxvt-unicode1配置：新建.Xresources touch .Xresources1234567891011121314151617181920212223242526272829303132333435363738394041424344454647```URxvt.font: xft:Inconsolata:style=bole:pixelsize=22URxvt.letterSpace: +1URxvt.scrollBar_right: TrueURxvt.cursorBlink:TrueURxvt.cursorColor:#DCB36AURxvt.cursorUnderline:FalseURxvt.pointerBlankDelay:1URxvt.saveLines:1000URxvt.background:#002B35URxvt.foreground:#839496URxvt.scrollBar:falseURxvt.inheritPixmap: trueURxvt.tintCddolor:white URxvt.shading:40 URxvt.colorBD:#78E3BFURxvt.colorUL:#D7D2BC! ColorsURxvt*color0: #000000URxvt*color8: #686868URxvt*color1: #B21818URxvt*color9: #FF5454URxvt*color2: #18B218URxvt*color10: #7EDD7EURxvt*color3: #B26818URxvt*color11: #FFFF54URxvt*color4: #14477bURxvt*color12: #2578cbURxvt*color5: #B218B2URxvt*color13: #FF54FFURxvt*color6: #18B2B2URxvt*color14: #6ADCDCURxvt*color7: #B2B2B2URxvt*color15: #FFFFFFURxvt*iso14755:falseURxvt*iso14755_52:falseURxvt.urlLauncher:firefoxURxvt.urgentOnBell:TrueURxvt.fade:50URxvt.fadecolor:grayURxvt.highlightColor:#BDBC6AURxvt.highlightTextColor:black 配置xterm1vim .Xresources 1234567!XTerm.vt100.faceName:Libration Mono:size=14:antialias=falseXTerm.vt100.faceName:Inconsolata Mono:size=14:antialias=falseXTerm.vt100.foreground: blackXTerm.vt100.background: #DEDEDEXTerm.vt100.color0: rgb:28/28/28XTerm.vt100.color15: rgb:e4/e4/e4 让配置生效1xrdb .Xresources 如果使用的是xorg，就需要将这句加入.xinitrc (cp /etc/X11/xinit/xinitrc ~/.xinitrc)如果使用wayland，加入.bash_profile]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Archlinux的安装还是不算简单，所以需要记录一下安装步骤。 1.默认tty字体太小，输命令前当然是将终端的字体调大一些 setfont /usr/share/kbd/consolefonts/iso01-12x22.psfu.gz 2.由于安装是在线下载的，所以需要有网络连接，最好是有线连接了，无线连接有点麻烦 rfkill unblock all wifi-menu #搜索网络 ping -c 3 archlinux.org #查看是否连接上 如果连接不上那就比较麻烦了，试着重启下dhcpcd服务 systemctl stop dhcpcd &amp;&amp; systemctl start dhcpcd 一些手动连接的方法，以后再补充 3.磁盘分区，分区方法比较多，我选择用cfdisk 需要分出一块100MB的esp分区来安装grub（esp分区采用fat文件类型），一块root分区来安装系统（linux系统采用ext4这种文件类型） lsblk #查看分区名 cfdisk /dev/sdxy #x代表a/b/c,y代表数字 4.格式化分区 mkfs.vat /dev/sdxy #x代表a/b/c,y代表数字，这里格式化esp分区为fat格式 mkfs..ext4 /dev/sdxy #x代表a/b/c,y代表数字，这里格式化root为ext4格式 5.磁盘分好了之后就可以安装系统了，先将分区挂载上来 mount /dev/sdxy /mnt #这里先挂载root分区到/mnt下 mkdir -p /mnt/boot/efi #然后建文件夹来挂载esp分区 mount /dev/sdxy /mnt/boot/efi #将esp分区挂载到新建的文件下 6.安装之前要选择国内的源，这样下载的速度才快，不然会等到花都谢了 vim /etc/pacman.d/mirrorlis 将这里面的china源移动到文件开头就像下面一样 7.安装基础包到挂载的root分区里，都是系统启动必须的 pacstrap /mnt base base-devel #(base-devel is optional) 如果你制作的启动盘是比较早的版本，那么这里可能会出现安装不了的问题，需要安装archlinux-keyring来解决这个问题。没有问题则跳过 pacman -Sy archlinux-keyring &amp;&amp; pacman -Su 8.接下来就是将磁盘挂载的信息写到fstab这个文件夹里 genfstab -U /mnt &gt;&gt; /mnt/etc/fstab 9.现在需要对系统进行设置，所以改变root目录到新系统里 arch-chroot /mnt 10.设置时区 ln -sf /usr/share/zoneinfo/*Region*/*City* /etc/localtime 11.设置语言环境Locale vim /etc/locale.gen 由于要使用中文的输入法或者中文系统语言的，所以 zh_CN.UTF-8 UTF-8 和en_US.UTF-8 UTF-8是要选择的 locale-gen #生成配置 12.设置系统名和用户名 设置系统名 touch /etc/hostnamevim /etc/hostname 用户设置 vim /etc/hosts 进行如下设置 127.0.0.1 localhost.localdomain localhost::1 localhost.localdomain localhost127.0.1.1 myhostname.localdomain myhostname 13.下载网络连接所需要的软件 无线网要安装这些才方便使用 pacman -S iw wpa_supplicant dialog netctl 当然了安装一个网络管理软件可以少许多不必要的配置 pacman -S NetworkManager 14.设置root用户的密码（输入密码时是没有显示的，这是一种安全保护措施） passwd 15.1安装grub启动管理器 os-prober是为了检测windows（双系统）而安装的，不安装也可以手动配置。安装重启后第一次启动是检测不到的，需要再配置一次grub pacman -S grub efibootmgr os-prober grub-mkconfig -o /boot/grub/grub.cfg grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub 15.2以前一直安装的是grub，觉得安装也挺简单，但是最近却出了一些问题，安装的时候会提示grub无法安装到efi分区，空间不足。由于找不到解决的办法，所以选择了另外一种启动器：refind pacman -S refind 安装的时候有点小复杂 refind-install #由于使用的是liveiso安装的，所以还需要手动调整 mkdir /boot/efi/EFI/BOOT #新建一个文件夹 cp /boot/efi/EFI/refind/refind_x64.efi /boot/efi/EFI/BOOT/bootx64.efi #将refind加入启动项 cp /usr/share/refind/refind_linux.conf-sample /boot/refind_linux.conf 然后修改一下refind_linux.conf.(我还修改了fstab和refind.conf，因为我用lsblk -f的时候找不到uuid，奇怪得很：）) vim /boot/refind_linux.conf 16.好了，基本系统已经安装完成。取消挂载的磁盘分区，然后重启 exit umount -R /mnt reboot ##重启之后就是安装其它需要的软件了 1.为了检测到windows，再运行一次这条命令 grub-mkconfig -o /boot/grub/grub.cfg 2.允许联网，启用网络模块 rfkill unblock all &amp;&amp; dhcpcd systemctl enable dhcpcd 3.简单的网络连接命令 wifi-menu 4.添加用户，并加入sudoer（可以执行sudo命令） useradd -m -G wheel -s /bin/bash dove passwd dove 用户加入sudoer visudo 5.安装显示服务，可以选择xorg或者wayland。现在wayland支持度已经不错了，比如gnome和kde就是默认使用wayland的。 可以安装xorg pacman -S xorg 或者安装wayland配合gnome用 pacman -S wayland 6.安装显卡驱动 inter显卡驱动 pacman -S xf86-video-intel (intel driver) nvida显卡驱动 pacman -S xf86-video-nouveau (nvidia driver) 或者 pacman -S xf86-video-vesa (common deriver) 7.安装声卡驱动 (include alsamixer and amixer(a shell command tool)) pacman -S alsa-utils 这里就有很多选择了，可以只安装窗口管理器（节约系统资源），也可以安装桌面环境（集成度高，开箱即用的这种）。可以体验一下无限种可能的感觉 1 窗口管理器 1.1安装平铺窗口管理器，这个安装配置好了之后很好用的。当然了，配置过程相当费时间(我喜欢的组合是 xmonad and xmobar plus dmenu) pacman -S xmonad pacman -S xmobar pacman -S dmenu 1.2.为了能够使用startx来进入窗口管理器需要安装基础的软件 pacman -S xorg-xinit # (get the command startx) pacman -S xterm #(when we type startx then this is important for that .xinitrc use xterm by default.and it can be changed by urxvt )# pacman -S rxvt-unioncode (i prefer this one for it can show chinese) 1.3.然后还要在文件里配置一下，才可以使用startx进入窗口管理器xmond cp /etc/X11/xinit/xinitrc ~/.xinitrc 然后添加 exec xmonad to .xinitrc 现在就可以进入xmond的世界了，不过没有配置的xmond是你不敢想象的 startx 如果想开机直接进入xmond，而不用每次都敲startx，那么修改一下~/.bash_profile vim .bash_profile 添加 if [ -z &quot;$DISPLAY&quot; ] &amp;&amp; [ -n &quot;$XDG_VTNR&quot; ] &amp;&amp; [ &quot;$XDG_VTNR&quot; -eq 1 ]; then exec startxfi 好了，一个完整系统已经安装好了。进入xmond后的一些小的配置 make super key instead of capslock#xmodmap -pke //show key map and find capslock is 66 super_l is 133 super_r is 134#touch .xmodmap //used to set settingsthen add this command like this: !delete fake super key keycode 133 = keycode 134 = !change Caps_Lock to Super_L keycode 66 = Super_L !clear lock clear lock !clear all mod_s with Super key clear mod4 ! add our new Super key add mod4 = Super_L then run command to make it work#xmodmap ./.xmodmapafter that we can add this command (xmodmap ~/.xmodmap &amp;) to ~/.xinitrc ,then it will work every time we log into x window 2.in order to use xbacklight to adjust backlight we should install xf86-video-intel#pacman -S xf86-video-inteland then run command like this to adjust screen light#xbacklight -set 40 2 接下来是安装另一种：桌面环境 这里可能安装软件的时候会失败，原因是签名不对，所以先安装签名pacman -S archlinux-keyring 2.1安装gnome桌面环境 pacman -S gnome 2.2安装额外的一些包，包含了许多有用的软件 pacman -S gnome-extra 2.3安装logoin管理器 pacman -S gdm systemctl enable gdm #开启gdm服务，开机自启 2.4安装xorg-server-xwayland来启动某些不支持wayland的应用 pacman -S xorg-server-xwayland 2.5安装gnome的个性化设置软件 pacman -S gnome-tweak （可选）2.6启动wayland服务，在.bash_profile中添加 if [[ -z $DISPLAY ]] &amp;&amp; [[ $(tty) = /dev/tty1 ]] &amp;&amp; [[ -z $XDG_SESSION_TYPE ]]; then XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session fi]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于github和hexo的个人博客搭建步骤]]></title>
    <url>%2F2019%2F04%2F25%2F%E5%9F%BA%E4%BA%8Egithub%E5%92%8Chexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[原理 本地编写markdown文件，选择一个喜欢的hexo主题，使用hexo框架生成静态网页，利用git将本地文件推送到github代码托管平台，然后通过网址进行访问（这里也可以自己注册域名，在github上进行绑定，然后可以通过自己的域名来访问网站） github是一个代码托管平台，用来存放网页文件，当做服务器使用 hexo是基于node.js的静态博客框架，用来生成html静态网页 git是一个分布式版本控制系统，用来将本地文件推送到github上 必备技能 markdown编写能力（十分钟就可以掌握，超简单的） github注册账号，创建仓库 git的基本使用 步骤安装node.js git hexo archlinux上安装比较简单 pacman -S nodejs git npm install -g hexo-cli #这里可能需要花费点时间，也可能会报错，不用管就ok npm install --save hexo-deployer-git #解决后面发布时找不到git的问题 windows安装git node.js 上面两个安装好了之后打开cmd npm install -g hexo-cli 新建存放hexo的文件夹 archlinux 1mkdir hexodir windows 1随便找个地方新建一个文件夹就好了 # 初始化hexo需要进入到新建的文件夹下面操作 linux 123cd hexodirhexo initnpm install windows 进入hexo文件夹下面，打开cmd 12hexo initnpm init 使用hexo生成静态html文件进入到hexo文件下，windows打开cmd，linux打开终端 1hexo generate 或者简写为 1hexo g 本地启动服务1hexo server 或者简写为 1hexo s 使用浏览器访问1http://localhost:4000/ 如果能打开网页，说明本地已经配置好了 在github上面创建仓库 如果没有github，先去注册一个 git与github连接需要使用ssh，所以需要生成ssh 密匙。 1ssh-keygen linux在~/.ssh下生成id_rsa.pub文件，复制文件内容 复制id_rsa.pub文件内容，添加到key中 配置hexo，与github关联起来注意：在写配置的时候，冒号后面需要有一个空格，不然会报错 编辑hexodir文件夹下面的_config.yml文件，最后面添加 1234deloy: type: git rpeo: git@github.com:用户名/仓库名.git branch: master 将本地文件推送到github上面12hexo generatehexo deploy 或者简写为 12 hexo g hexo d 然后打开网址就能看到自己的网站了 配置自己喜欢的主题 在官网选择自己喜欢的主题 将主题下载到hexodir下的themes目录下，比如我下载的next主题 12cd hexodirgit clone https://github.com/iissnan/hexo-theme-next themes/next 修改hexodir目录下的_config.yml配置文件,修改theme 1 theme: next 然后重新生成静态网页，并将网页推送到github上 1 hexo g &amp;&amp; hexo d]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
