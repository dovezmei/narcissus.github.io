<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[wc计数]]></title>
    <url>%2F2019%2F04%2F27%2Fwc%E8%AE%A1%E6%95%B0%2F</url>
    <content type="text"><![CDATA[前面说的时候没注意到这个命令还挺复杂的 wc(word count)计数常用参数 -c, –bytes 字节数 -m, –chars 字符数 -l, –lines 总行数 -L, –max-line-length 最长的行的字符数 -w, –words 单词数 wc是支持管道的,可以接受标准输入.所以我们使用echo来看为什么输出是5?是它数错了吗?不是的,其实每行的结尾都有一个换行符,只是我们看不到而已.我们把它打印出来看看所以现在就很清楚了,每一行都有一个换行符.总的字节数=字节数-行数=(wc -c )-(wc -l) 如果是汉字呢?我们来数一下字数同样的道理,都需要考虑到换行符的问题]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机安装ubuntu服务器版]]></title>
    <url>%2F2019%2F04%2F27%2F%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%89%88%2F</url>
    <content type="text"><![CDATA[不要奇怪我为啥会呢，无他，唯手熟尔。所以多安装几次就会了 新建 给系统取个名 然后一直下一步（设置动态磁盘啊什么的这些都不用管），需要注意的是，这里选择系统大小的时候不要太小了（默认10G没有问题），否则安装不上（我刚开始装的时候分配了2G，结果就没安装成功） 一直下一步，然后就进入设置界面了 存储这里添加下载好的ubuntu iso文件 网络这里设置桥接网卡，混杂模式选择全部允许 设置好了，启动 选择安装系统时界面提示的语言，这里选汉语了。这样界面就是汉语的 选择安装服务器版 在选择系统语言的时候本来是要选择英语的（汉语支持不好），但是我也不知道咋的，选不了其它语言。可能是前面选择了汉语的原因吧。不过没什么影响，毕竟是服务器版，也看不到什么汉语。yes 不需要配置键盘，否 选择汉语 设置系统名称 设置用户名称 设置用户密码 他会提示这个密码太弱，但是我们不需要设置复杂密码，选择是 不需要加密家目录，选择否 可以看到时区是正确的，所以选择是 磁盘分区，这里不需要选择其他的，选第一个就好了（动态磁盘阵列以及手动分区用在这个虚拟机上实在是浪费感情啊） 直接下一步 选择是，将会自动格式化磁盘 不需要代理，直接下一步 下面进入安装系统了，漫长的等待 选择不自动更新，服务器嘛，稳定最重要了 这里要用空格将ssh选择上，方便用xshell来连接linux，如果不选的话，就要等系统安装好了之后在手动安装ssh了 系统开始下载并安装选择的ssh了，漫长的等待 安装grub启动管理器了，这里选择是，这一步一定不要选错，不然启动不了的 看到下面这个界面就是安装好了，继续下一步 看，自动重启进入系统了 用户名，密码登录成功了 有的电脑可能存在显卡不支持的情况，也就是花屏，修改设置里面的显卡驱动 end——————————————————————————————————-完结]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机sharefolder]]></title>
    <url>%2F2019%2F04%2F27%2F%E8%99%9A%E6%8B%9F%E6%9C%BAsharefolder%2F</url>
    <content type="text"><![CDATA[安装插件insert Guest Additions cd image 会提示添加盘符，新建一个空的option device， 再安装就可以了 在~/virtualbox vms目录下建一个share_folder文件夹，用来在linux和windows上共享文件 在虚拟机上machine-settings-shared folders-新建一个共享目录，路径为之前设置的。选择自动挂载 然后就可以在虚拟机中看到挂载的虚拟磁盘了，通过这个共享磁盘实现共享文件。]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[系统注册表错误修复]]></title>
    <url>%2F2019%2F04%2F27%2F%E7%B3%BB%E7%BB%9F%E6%B3%A8%E5%86%8C%E8%A1%A8%E9%94%99%E8%AF%AF%E4%BF%AE%E5%A4%8D%2F</url>
    <content type="text"><![CDATA[如果电脑因为一些错误的操作出现了注册表损坏的这种情况，首先可以试着修复它。 我们需要用到pe启动器（或者电脑上的其它操作系统），进入pe，打开文件管理器，复制C:\Windows\System32\config\RegBack下的所有文件到C:\Windows\System32\config目录下。然后重启电脑就有可能修复好了。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[目录基本操作]]></title>
    <url>%2F2019%2F04%2F27%2F%E7%9B%AE%E5%BD%95%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[ls cd clear alias 今天主要说如何在linux文件系统目录中移动 ls(list directory contents) 列出目录内容,作用就是列出当前目录下的文件常用参数:-a 列出所有文件-l 以长列的格式列出-h 以易于读的大小表示文件大小这些参数都是可以组合使用的 可能有的人会看到别人使用了ll这个命令,为什么你的使用不了呢?其实linux上是没有这个命令的.而是使用了alias在.bashrc里面写 alias ll=&apos;ls -lh&apos; 然后运行 source ~/.bashrc 再试试ll这个命令什么意思呢?就是给之前那一长串的命令写了一个别名,用来简化命令的再举个例子:clear这个命令是用来清屏的,由于经常使用,我们想能不能写简单点,这个命令打起来太麻烦了.当然可以了,在.bashrc中加上 alias cc=&apos;clear&apos; 然后运行 source ~/.bashrc 再试试 cc这个命令 2.cd(change working directory)改变工作目录,目的是在各目录中移动回到上一级目录: cd .. 回到家目录: cd 或者: cd ~ 在linux中目录中移动有两种方式:1.绝对路径:所有路径都是以 / (根目录为基准) 比如: cd /opt cd /etc/fonts cd /home 2.相对路径:所有路径都是以当前工作路径或者家目录~为基准 cd .. cd Picture cd Downloads/zipfile cd ~/Picture 再来一个好玩的命令screenfetch,可以在终端打印出系统的一些信息]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浏览器百度网址打不开如何解决]]></title>
    <url>%2F2019%2F04%2F27%2F%E6%B5%8F%E8%A7%88%E5%99%A8%E7%99%BE%E5%BA%A6%E7%BD%91%E5%9D%80%E6%89%93%E4%B8%8D%E5%BC%80%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[（分享张罐子的单曲《十二（Cover 留声玩具）》http://music.163.com/song/435307280?userid=1388867694 (@网易云音乐)） 问题：同桌电脑不能打开百度网址，其它的网址打开没问题 刚开始以为所有网址都打开不了，就以为是网络链接问题，于是需要ping网络首先在正常电脑（我的）上找到网关地址 ipconfig 然后在她电脑cmd输入 ping 192.168.0.252 发现可以ping通，然后继续ping百度地址 ping www.baidu.com 发现也可以ping通，这就有点奇怪了。所以怀疑是dns解析出了问题然后就是去配置dns了：配置了静态的ip地址和两个固定dns（这里不写了，有点多）可是。。。。。还是打不开百度网址，其它的网页没有问题最后呢，是她自己找到了解决办法 :)所以。。。。。你懂吧，有一个美丽会计算机的女同桌多么可怕，哈哈 下面是操作步骤： 这样就好了。鉴定结果是病毒修改了ie的设置。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2019%2F04%2F27%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[虽然记忆力不怎么好,但是我想全部记下来怎么办? 下面是我的简单总结: 字符 描述 \ 转义 ^ 行首 $ 行尾 * [0, +∞) + [1, +∞) ? 0或1 {n} 确定的n次 {n,} [n, +∞) {m,n} [m, n] 点 匹配除换行/回车之外的单个字符 x\ y 匹配x或者y(x和y为一个词) [ xyz ] 匹配x或y或z [ ^xyz ] 匹配除x或y或z之外的 [a-z] a到z中的任意一个字母 [A-Z] A到Z中的任意一个字母 [0-9] 0到9中的任意一个数字 \d 0到9中的任意一个数字 \D 非数字 下面是详细介绍:]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文本内容查看]]></title>
    <url>%2F2019%2F04%2F26%2F%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9%E6%9F%A5%E7%9C%8B%2F</url>
    <content type="text"><![CDATA[cat more less diff/colordiff wc 使用linux总会有这种感觉,用起来怎么那么舒服呢?没错,真的是这样的我们在windows上想看一个文本文件里面写了什么,一般都是用记事本打开来看吧.然而这个记事本实在是有点难用.so,我们来看看linux上怎么看文本内容吧 cat(concatenate file and print on the standard output) 连接文件并输出到屏幕上 cat 文件名 这样可以显示行号 cat -n 文件名 less/more 如果文件内容比较长,那么这两个命令就有作用了,支持滚屏.其中less支持回滚与vim的简单移动操作 more 文件名 less 文件名 这样可以显示行号 less -L 文件名 如果不想看文本内容只想知道有多少行呢? wc 可以数文件行数,字数,最长一行的字符数 wc 文件名 不仅如此, wc是支持使用pipe(管道)的.简单说只要能在屏幕输出信息的都可以作为wc的输入.比如说你可以这样:数一下/bin下有多少个命令? ls /bin | wc -l 统计一下有多少进程? ps -aux | wc -l 如何比较两个文件的差别?vim可以,但是更简单的是 diff diff -y 文件1 文件2 但是 diff没有颜色显示, colordiff 有颜色显示,安装一下就可以用了 sudo pacman -S colordiff colordiff -y 文件1 文件2]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用软件]]></title>
    <url>%2F2019%2F04%2F26%2F%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[软件名 简介 variety 动态壁纸 archlinux-wallpaper archlinux壁纸包 yaodao-dict 有道翻译 sublime-text-dev sublime-text3 xchm .chm格式（windows帮助文档）查看 treesheets 思维导图 fragments bit下载 iotop 磁盘写入检查 leafpad 记事本 netease-cloud-music 网易云音乐 virtualbox 虚拟机 mplayer 视频播放 wpsoffice 办公软件 marktext markdown 编辑 shotcut 视频剪辑 gimp 和ps一样的图片处理软件 deepin-wine-tim 聊天 （不过个人不喜欢） weechat irc聊天 nautilus gnome默认文件管理器 unrar 解压rar格式文件 rar 压缩文件格式为rar lsof 列出打开的文件（list openfile and cat ip port） tor torsocks tor dconf-editor 可以用来关闭gnome自动挂载U盘 gnome-software-packagekit-plugin 系统必须要安装的一个神器，安装之后应用商店就有很多很多软件可以下载了 blender 3d动画自作软件（很想学习的一个软件） ydcv 终端有道翻译 amor 桌面小猫 netease-musicbox 网易云终端 musicbox exfat-utils fix unable to read portable添加U盘特殊格式exfat驱动 ntfs-3g 添加ntfs驱动（读写windows文件：mount -t ntfs-3g /dev/sdxy） cava 终端下alsa声音可视化 wewechat 微信 geckodriver linux下selenium的firefox驱动 scrot 命令截图软件 launch-cmd 在命令行打开软件 gnome-shell 简介 screenshot tool 截屏 easyscreencast 录屏 netspeed 网速 freon 温度 coverflow alt-tab alt-tab切换窗口 notes 便签 night light slider 屏幕色温调节 alarm clock 闹钟 weatherin the clock 天气 caffeine 用来阻止屏幕自动休眠，在看视频的时候很好用 Drop down terminal 也是一个神器，安装后可以用～快速打开一个终端，很帅气 No Topleft Hot Corner 去掉gnome左上角的热区 Dash to Dock 修改gnome默认dock的位置，很好用]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用archlinux需要明白的]]></title>
    <url>%2F2019%2F04%2F25%2F%E4%BD%BF%E7%94%A8archlinux%E9%9C%80%E8%A6%81%E6%98%8E%E7%99%BD%E7%9A%84%2F</url>
    <content type="text"><![CDATA[首先需要明白的是archlinux和其它发行版的不同之处: 1.archlinux是”rolling release”,它不需要系统的版本升级 2.不敢说archlinux是最稳定的,但它却是我最钟爱的.archlinux仓库的软件都是最新的,而且软件仓库中的软件比其他发行版的软件要多的多 3.因为它是可定制的,想安装什么软件,什么桌面环境都是自己选择的.虽然没有gentoo那样高度定制化,但是与gentoo安装时编译需要花费的时间比起来,archlinux这种二进制文件安装更快 archlinux是滚动发行版,所以经常更新是必要的.为了确保更新不会出现任何问题,我们需要了解最近更新了什么,有那些需要注意的.怎么了解呢? 第一种方式是查看Arch News 第二种方式是订阅archlinux的更新邮件服务,有更新消息会通过邮件发送给你 了解mirror和repository,repository是存放在mirror上的 /etc/pacman.d/mirrorlist 中列出了所有的镜像/服务器,把中国的服务器位置放到前面,这样下载东西的时候网速就快很多 /etc/pacman.conf中有官方仓库,可以添加非官方仓库,仓库就是用来存放软件的,添加的越多,能搜到的软件就越多.]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[zsh安装配置]]></title>
    <url>%2F2019%2F04%2F25%2Fzsh%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[zsh配置好了是很好看的 安装 zsh pacman -S zsh pacman -S zsh-completions 切换shell为zsh 查看现在使用的shell chsl -l 设置默认shell为zsh chsh -s /bin/zsh 切换为zsh zsh 基础配置添加以下到.zshrc里 autoload -Uz compinit promptinit compinit promptinit 查看自带的主题 prompt -l 然后选择一种 prompt xxx #xxx为主题名 我们发现这些主题并不是特别好看，所以安装 0h-my-zsh yay -S oh-my-zsh-git 安装这个之后我们就可以选择一种主题了例如： ZSH_THEME=&quot;agnoster&quot; 我们发现并不像下面这么好看 那是因为没有安装 powerline 这种字体，所以终端就无法显示这些箭头了。 git clone https://github.com/powerline/fonts.git --depth=1 cd fonts ./install.sh cd .. rm -rf fonts 重新打开一个终端就可以正常显示了 然后我们还可以找更多喜欢的 主题我比较喜欢 powerlevel9k 这款主题 sudo pacman -S zsh-theme-powerlevel9k 设置为终端主题 echo &apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme&apos; &gt;&gt; ~/.zshrc 这样设置之后已经很好看了，不过有些自带的图标显示不了 下载 Awesome-Terminal Fonts pacman -Syu awesome-terminal-fonts 然后配置一下 在.zshrc找到设置 powerlevel9k的位置，将下面的配置放到它上面 POWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos; 重新打开一个新的终端，就可以看到漂亮的主题了有关主题更多的配置，就照着这里 设置 好了 9.安装zsh-syntax-highlighting sudo pacman -S zsh-syntax-highlighting 我的 zsh配置文件 1234567891011121314151617181920212223242526272829export TERM=&quot;xterm-256color&quot; #common settingautoload -Uz compinit promptinitcompinitpromptinitzstyle &apos;:completion::complete:*&apos; gain-privileges 1zstyle &apos;:completion:*&apos; menu select#theme settingPOWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-themePOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(load dir vcs ssh dir_writable)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history newline)#use to highlight syntax like fishsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh#highlight man man() &#123; LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; &#125;#user aliasalias l=&apos;ls -lh --color=auto&apos;]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows系统的安装]]></title>
    <url>%2F2019%2F04%2F25%2Fwindows%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[PS：其实很久之前就想写这个的，虽然安装了无数次，但是因为安装系统的时候不好截屏，所以就一直没做：）还记得大一的时候因为安装linux，然后把win10弄坏了（没有启动项），差点就拿去店里修了。但是因为太年轻=任性，所以最后还是自己安装好了系统。之后也给别人安装了许多次系统，但是也就那次真的是开心，像吃了蜂蜜。 好了废话不多说了，接下来就开始了。 在安装系统之前第一件要做的事就是备份好重要的资料，比如说作业：)，不然就有点意思了。 第二件要做的事是弄清楚你的电脑（主板）是啥型号，然后百度一下找到开机时怎么进BIOS和启动项选择的界面的。比如我的联想电脑F2进BIOS，F12进启动项选择。 这里就要说一些概念了，以便决定你的系统是进行怎么样的分区。你的整个磁盘的磁盘分区表采用的是gpt还是mbr？可能有人不懂gpt和mbr是啥，简单的说gpt是比较新的技术，mbr技术比较老；gpt分区表需要一个esp分区来存放开机时的启动文件，而mbr分区表则不需要。如果你想用gpt分区表，那么就要确保你的bios里面设置了支持uefi启动，这个知识点需要自己去get。 既然上面说了磁盘分区表是对于整个磁盘而言的，所以如果你要修改的话，整个磁盘相当于格式化了，所以你懂得，只有保证磁盘上没有重要文件才可以这样操作。当然了，我是推荐用gpt分区表的，因为对于装多个系统来说很好用鸭。 分区：用了这么久的电脑，我们都习惯了系统有多个分区了吧，比如系统盘C盘，软件D盘，其它E盘等，分区的好处是各个分区相对独立，也便于归类。所以说给磁盘进行分区这个技能要提前get到。 道理讲完了，下面开始正式的安装。 制作U盘启动器。此方法我之前写的有介绍过，这里略过了。 下载windows镜像文件。按照这个步骤下载下来格式为ISO的系统镜像，具体的操作不解释了。 这个iso镜像文件放那里呢，只要不是放在你要安装系统的分区就好了。你也可以复制到你制作的启动U盘里。 开机选择U盘启动，进入pe系统。在这里将完成我们的大部分安装步骤。 注意：以下步骤本来是要在pe下操作的，但是pe下不好截屏，所以我就用虚拟机代替了，但是步骤一样，可能图标长得有点不同。同时我是用一整个磁盘来安装系统的，如果你的磁盘上还有其他分区，那么就要注意区别了。 打开一个叫diskgenius的用来分区的软件。我们可以看到一个空闲为5G大小的磁盘，这个就是我要安装系统的磁盘。可以看到他的磁盘分区表格式为mbr，接下来我会采用gpt分区表格式来安装系统。如果你的磁盘也是mbr，同时想用gpt分区表，而且没有其他分区，或者其他分区没有重要文件，那么继续往下看，否则看第六点。 5.1 选中整个磁盘，如图中的HD1：VBOXHARDDISK（5GB），然后右键选择转换分区表类型为guid格式，然后选择左上角的保存更改。 5.2 选中整个磁盘，右键–&gt;选择建立新分区。 5.3 这里要勾上建立esp分区，大小100MB-500MB之间随便选。太大了也没必要，太小肯定不行。并且不要选择建立msr分区。然后确定，再将剩余的空间作为系统盘。 5.4 一路确定下来，然后点击左上角的保存更改。 5.5 一般来说esp分区就会自动分配有一个盘符，如果没有那么我们就手动给他添加上去。右键–&gt;指派新的驱动器号 5.6 找到我们下载的iso系统镜像，右键–&gt;装载 （或者叫其他什么的名字，目的是挂载后可以读取到里面的文件），记住挂载的盘符位置。 5.7 在桌面上打开一个叫WinNTSetup的软件。 5.8 .1在选择windows安装源这里要选择刚刚挂载的windows镜像目录里面的sources–&gt;install.wim5.8. 2 在选择引导器这里选择之前分配的esp分区的盘符5.8 .3 在选择安装驱动器这里选择系统安装的位置 5.9 然后点击开始安装，然后确定，等待大约十几分钟，复制完之后选择重启，重启之后按照步骤操作选择语言什么的………大概十几分钟就可以安装好系统了 如果你是mbr分区，而且不想转换为gpt分区表，那就好办了。第一步和5.8.1的步骤一样，选择引导驱动器和选择安装驱动器都选择要安装系统的分区。其它的步骤一样。 到这一步，系统已经安装好了。是不是觉得安装系统如此简单。。。。。。就像宫本的台词：无敌的我。 激活系统。另外如果还有不懂的话，可以参考我录得视频，安装系统 （看着像上个世纪的，其实就是去年录得）。激活系统]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[U盘启动盘的制作]]></title>
    <url>%2F2019%2F04%2F25%2FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E7%9A%84%E5%88%B6%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[在说到安装以及修复操作系统时，很多时候我们都会用到PE启动器，这里就写下如何制作它。 为什么要制作这个东西呢我们知道一旦电脑出现问题并且无法开机后，就没办法进系统里面去修复它了。所以我们需要借助别的工具来修复系统。U盘启动器/PE启动盘，就是将一个微型的操作系统安装到U盘里，从U盘启动这个微操作系统。然后对我们有问题的系统（不能正常启动）进行修复。 如何制作这个U盘启动器1.下载制作软件。这里推荐绿色纯净的WePE，当然了你也可以选择其它喜欢的比如熟悉的大白菜，老毛桃 ……2.安装进U盘。选择一个没有任何文件的U盘（因为安装的时候会格式化U盘），4G足够了，插入U盘，打开软件，选择其它安装方式的U盘安装方式，待写入U盘里选择插入的U盘，然后点击安装进U盘。 这样一个U盘启动盘就制作好了然后就可以安装或者修复系统了 启动盘制作好了，如何进入这个启动盘呢我们每个电脑的主板都不一样，这个就需要自己搜自己电脑是怎么进启动项界面的了。比如我的联想就是在开机的时候按 F12，然后选择需要启动那个选项的。选择U盘启动项，这样就进PE启动盘了。]]></content>
      <categories>
        <category>windows10</category>
      </categories>
      <tags>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu14配置静态ip及使用xshell传输文件]]></title>
    <url>%2F2019%2F04%2F25%2Fubuntu14%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81ip%E5%8F%8A%E4%BD%BF%E7%94%A8xshell%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[修改配置文件 sudo vim /etc/network/interfaces 添加： auto eth0 iface eth0 inet static address 192.168.0.111 #配置没有被使用的ip地址 netmask 255.255.255.0 gateway 192.168.0.252 #写入网关地址 dns-nameservers 1.1.1.1 #写dns解析地址 a. 其中dns（域名解析服务）是必须要写的，不然配置不会成功 b. 网关地址哪里看？通过命令查询： ip route c. 怎么知道那些ip地址没有被使用？ ping 想要使用的ip地址 如果没有ping通，那么就可以使用 或者使用更高级一点的工具：nmap 首先安装nmap这个软件 sudo apt-get install nmap 然后使用ping的方式扫描局域网内所有已经使用的ip nmap -sn 192.168.0.0/24 重启网络服务 /etc/init.d/networking restart 将ssh设置为开机启动 chkconfig --add ssh chkconfig ssh on 然后使用xshell连接ubuntu安装一个lrzsz的软件，用来在windows与ubuntu间传输文件 sudo apt-get install lrzsz 上传文件：rz(receive zmodem) rz 下载文件：sz(send zmodem) sz 文件名 PS:有没有觉得挺方便的？]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime-text3配置随笔]]></title>
    <url>%2F2019%2F04%2F25%2Fsublime-text3%E9%85%8D%E7%BD%AE%E9%9A%8F%E7%AC%94%2F</url>
    <content type="text"><![CDATA[sublime 的goto，macro，group搭配vim的使用，飘逸。 优点：轻量，插件多 缺点：调试不方便 1.首先安装package control，作用是安装管理其它插件 2.然后需要安装其它插件都是Ctrl+shift+p调出命令窗口，然后输入package control install，等一会就可以输入插件名并安装了。 3.preference-setting加入这两句，高亮光标所在行和所在的文件。 &quot;highlight_line&quot;: true, &quot;highlight_modified_tabs&quot;: true, 4.然后是一些插件的推荐 a folder icon 提供左边打开文件的图标 package resource view]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[parrotos-4-x使用指南]]></title>
    <url>%2F2019%2F04%2F25%2Fparrotos-4-x%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[parrotos4.18的版本取消了root用户（虽然有root用户，但是无法使用），这给使用带来了许多的麻烦。所以第一件要做的事就是让普通用户加入sudoer。 由于没有root权限，不能在系统里去修改。所以使用别的系统去修改12345678910![](https://upload-images.jianshu.io/upload_images/9937522-fbcde508a3bd0a0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)* 然后正常进入系统后```sudo su```就可以使用管理员权限了![](https://upload-images.jianshu.io/upload_images/9937522-45c5b4267ea3910e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)---2. **然后就是第二个问题了，因为有两块硬盘，所以安装时启动程序默认安装到了第一块硬盘，但是系统却在第二块硬盘上，所以需要重新安装一下grub**由于有了root权限，所以有权限去安装grub* 挂载efi分区```/dev/sdb1```到```/boot/efi```下![](https://upload-images.jianshu.io/upload_images/9937522-899278c16920cbbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)* 修改```/etc/fstab```，将efi分区调整为```/dev/sdb1 然后安装grub到efi分区 12grub-mkconfig -o /boot/grub/grub.cfggrub-install --target=x86_64-efi --efi-directroy=/dev/sdb1 --bootloader-id=grub 安装后efi分区包含一个grub和一个parrot目录，并分别有一个grubx64.efi文件 到这里已经把grub安装到了第二块磁盘上了，但是这个grub的启动项不完整，需要手动添加Android的启动项，以及一些关机重启的选项over]]></content>
      <categories>
        <category>linux</category>
        <category>渗透系统</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>parrotos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux的一些美化优化]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[所以pacman命令能生效的前提是开启了AUR源，以及安装了AUR的包管理器yay。在pacman搜索不到的情况下使用yay。 archlinux默认下载软件后是不会自动删除软件的安装包的,长时间不清理那么就会很占磁盘空间,必须要手动进行清除 sudo pacman -Scc 但是这样还是不是特别好,毕竟有时候会忘了,那么就可以将下载包的位置换一下.默认是下载到了/var/cache/pacman/pkg这个位置 sudo vim /etc/pacman.conf 修改cache的位置就ok了 让man有不同颜色显示，加入.bashrc或者.zshrc，取决于使用何种shell man() { LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; } diff没有颜色显示，那么安装colordiff 安装编程用字体 iosevka 将firefox等浏览器的缓存文件放入RAM，加快响应速度以及减少SSD的数据写入。 pacman -S profile-sync-daemon systemctl --user enable psd.service 开启overlay：在~/.config/psd/psd.conf中加入 USE_OVERLAYFS=&quot;yes&quot; 在 /etc/sudoers/ 中加入 user ALL=(ALL) NOPASSWD: /usr/bin/psd-overlay-helper 安装QQ或者TIM。先在 /etc/pacman.conf 中开启multilib仓库 pacman -S deepin-qq-im pacman -S deepin-wine-tim]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux搜狗输入法的安装]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[首先在官网下载安装包然后执行下面两条命令就好了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux基础-认识]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E5%9F%BA%E7%A1%80-%E8%AE%A4%E8%AF%86%2F</url>
    <content type="text"><![CDATA[学习主题曲 linux上一切皆文件什么意思呢？就是说你所有的配置操作，都可以通过修改文件来达到效果，不同于windows那样通过软件设置。修改ip地址、修改主机名称、修改用户、调节屏幕亮度、音频声音大小。。。如你所知，都可以通过修改文件配置内容达到目的 root拥有最高权限linux上很大的一个特色就是可以多用户登录，那么每个用户对应就有不同的权限。root拥有至高无上的权限，也就是说一般不用root用户登录，因为你的一个不小心就可能造成无法挽回的错误（比如说把系统删掉）。那么普通用户没有权限怎么操作呢？我们是可以的，既可以临时使用root权限 sudo 命令 ，也可以切换到root用户去 su home（家）是最终归宿无论你用何种身份登录终端，你一定会先到达一个称为家的地方。pwd查看一下，/home/user这个目录就是家，或者~也称为家。无论你进入了那个目录，cd会带你回到家的地方。家目录已经为我们分好了许多目录，我们可以将日常操作的文件放入对应的地方。比如说Picture里面就放壁纸图片什么的 熟悉linux命令怎么熟悉呢？你一定会想到记命令，没错，但是不全对。命令记忆是有方法的，比如说cd这个命令，改变所在位置对吧，英文为change directory,是不是很好记了，首拼就是cd。pwd显示当前所在位置,print working directory的首拼。sudo临时使用root权限，super user do的首拼。su切换root用户，super user的首拼。 善于使用帮助命令那么多的命令，已经很难记了，如果再加上参数怎么办？参数其实不需要怎么记，在你使用的时候查看一下帮助文档就好了，命令 --help就是显示简单的使用帮助，一般用这个就够了，如果你需要更详细的解释，就用man 命令吧 好了，基础就这么多了，了解了这些，相信学起来就如鱼得水了吧]]></content>
      <categories>
        <category>linux</category>
        <category>我们一起来学linux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>archlinux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux修改磁盘卷标]]></title>
    <url>%2F2019%2F04%2F25%2Flinux%E4%BF%AE%E6%94%B9%E7%A3%81%E7%9B%98%E5%8D%B7%E6%A0%87%2F</url>
    <content type="text"><![CDATA[在windows上修改磁盘的名称只要右键就可以修改了,但是linux中却害得我好找啊首先是修改ext2,ext3,ext4这种类型的 e2label /dev/sdb3 ARCHLINUX 修改ntfs的卷标 ntfslabel /dev/sda2 WIN10]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-补充]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[前面说的rule-specification不够详细,so,补充一下rule-specification是用来指定符合条件的规则,包含了对这个规则的处理注意了:写规则的时候是可以用tab键来补全的,所以这样就简单多了 有些参数是支持取反的 -4, –ipv4 指定使用ipv4 -6, –ipv6 指定使用ipv6 [!] -p, –protocol protocol 指定使用的协议,这个参数就支持取反,如果我想写除tcp之外的协议:! -p tcp例如我写这个的时候不知道有那些协议啊?tab一下就出来了 [!] -s, –source address[/mask][,…] 指定源主机地址,包含a network name, a hostname, a network IP address [!] -d, –destination address[/mask][,…]与上面的参数一样,指定目标主机地址 -m, –match match 匹配模块,可以调用模块的扩展功能.举个例子:使用 -p tcp参数的时候,就是指定匹配tcp协议.而使用-m tcp参数的时候,是调用tcp模块.不过我真不知道这有啥用,恕我孤陋寡闻了 -j, –jump target 动作,包含ACCEPT DROP ECN MARK MIRROR REDIRECT RETURN TCPMSS ULOG DNAT DSCP LOG MASQUERADE QUEUE REJECT SNAT TOS -g, –goto chain指定跳转用户自定义的链 [!] -i, –in-interface name 指定数据进来的网络接口 [!] -o, –out-interface name 指定数据出去的网络接口 [!] -f, –fragment 只能是ipv4起作用,类似于模糊匹配,通过数据包片段来匹配 -c, –set-counters packets bytes 允许root初始化链的数据]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-语法]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[今天心情不好,果然,放个歌的链接都有问题 相信看了前面的还是不懂怎么写,其实前面的只是以讲故事的方式了解了一下表和链,以及简单的添加和删除 这里总结一下: iptables -t 使用什么表 -增加/删除/修改 那条链 (数字) -p 协议 -s 目标地址 -j 丢弃/接收 当然了,也不是每条规则都需要写这么多参数的.只要能达到目标即可,比如说:我想阻止所有的tcp请求(默认是filter表可以不写,-I默认写入到规则列表最上面,后面数字也不必写,已经阻止所有tcp请求了,ip地址也不需要写) sudo iptables -I INPUT -p tcp -j DROP 上面这条规则写完后,你会惊喜的发现你已经打不开百度网页了.为什么呢?我只阻止了tcp请求啊,跟服务器给我发消息有什么关系呢?tcp协议是有三次握手的,网页传输正好使用了tcp协议,我们给服务器发送一个请求后,服务器会给我们回一个请求,可是我们阻止了所有的tcp请求,自然无法完成握手,也就无法打开网页了.打不开网页多可怕,所以把上面的规则删掉 sudo iptables -D INPUT 1 下面正式写语法: 新增规则 iptables [-t table] -A chain rule-specification iptables [-t table] -I chain rulenum rule-specification iptables [-t table] -N chain rule-specification表示指定规则,比如说指定ip,指定协议,指定动作这些rule-specification =[matches...] [target] match = -m matchname [per-match-options]举个例子:match为-p tcp 或者 -s 192.168.0.12 target = -j targetname [per-target-options]举个例子:target为-j DROP 或者 -j ACCEPT [-t table]表示可选,可以写,可以不写(如果是filter表就不需要写,其它表是必须写的) -A参数与-I参数区别:A表示append/add,新增或在已有规则后面添加.I表示insert,插入到指定位置,可以将规则写入到表中的任意位置,这个位置就是后面的rulenum决定的. -N表示添加用户自定义的链 targetname表示对规则的处理,有accept接收/drop丢弃/return暂存 删除规则 iptables [-t table] -D chain rulenum iptables [-t table] -F iptables [-t table] -X -D删除rulenum所指的规则 -F删除指定的整个表的规则 -X删除用户自定义的表 查看规则 iptables [-t table] -C chain rule-specification iptables [-t table] -L [chain [rulenum]] iptables [-t table] -S [chain [rulenum]] -Ccheck检查是否存在规则,存在不给提示,不存在给出提示-L与-S区别:L显示的信息全面,S显示简略信息常用的查看规则(显示排序数字): sudo iptables -nvL --line-numbers 修改规则 iptables [-t table] -R chain rulenum rule-specification iptables [-t table] -E old-chain-name new-chain-name iptables [-t table] -P chain target -Rreplace替代rulenum指定的规则 -Erename修改用户自定义链的名字 -Ppolicy修改iptables默认链的规则,target只有drop和accept这两种情况举个例子:我们的个人电脑一般是不会用来做路由的吧,路由转发这种事是服务器和路由器做的,所以forward这条链对我们的作用几乎为零,那我们就可以将链的规则修改为丢弃 sudo iptables -P FORWARD -j DROP 清除所有链/指定链/指定规则的数据包统计 iptables [-t table] -Z [chain [rulenum]] over over语法已经完了想想和mysql的增删改查好像没多大区别吧,其实语法写起来简单,难的是rule-specification的写法,就比如说可以ping别的主机且不允许被ping,就需要了解icmp-type的相关知识了.]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-规则]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E8%A7%84%E5%88%99%2F</url>
    <content type="text"><![CDATA[iptables有五张表(filter,nat,mangle,raw,security),五个规则链(prerouting,input,forward,output,postrouting).要全部弄懂好像有点麻烦,不过先挑常用的来学学还是一个不错的选择. 什么是表呢?用过myql数据库的应该很清楚,表是用来存放数据的.就像excel表格一样,将数据一条一条的存到数据库中.同理,这里的表也是这个作用,表里面存放的就是我们写好的规则.为什么又分了五个呢,一个不行吗?我觉得一个也不是不可以,但是那样不是就很乱了吗?分类管理还是挺好的.既然说到分类管理了,那么五条链也就比较好理解了,也是为了分类管理. 在表中存放着许多规则,我们把这些规则分个类,这些类就是链.而每张表的功能又不一样,所以每张表中的链也就不一样了 nat表:prerouting,input,output,postrouting filter表:input,forward,output mangle:prerouting,iniput,forward,output,postrouting raw表:prerouting,output security表:input,forward,output 上面这样写应该还是不好理解,到底是怎么起作用的?arch wiki上的这张图很好的展示了如何接收/发送数据.以数据的流向为依据,将这些表和链很好的连接在了一起,非常漂亮.所以又不得不夸夸arch wiki了,写的是真的好. 12345678910111213141516171819202122232425262728293031323334 XXXXXXXXXXXXXXXXXX XXX Network XXX XXXXXXXXXXXXXXXXXX + | v +-------------+ +------------------+ |table: filter| &lt;---+ | table: nat | |chain: INPUT | | | chain: PREROUTING| +-----+-------+ | +--------+---------+ | | | v | v [local process] | **************** +--------------+ | +---------+ Routing decision +------&gt; |table: filter | v **************** |chain: FORWARD|**************** +------+-------+Routing decision |**************** | | | v **************** |+-------------+ +------&gt; Routing decision &lt;---------------+|table: nat | | ****************|chain: OUTPUT| | ++-----+-------+ | | | | v v | +-------------------++--------------+ | | table: nat ||table: filter | +----+ | chain: POSTROUTING||chain: OUTPUT | +--------+----------++--------------+ | v XXXXXXXXXXXXXXXXXX XXX Network XXX XXXXXXXXXXXXXXXXXX 看这个表就知道我们主要操作的还是filter表了.下面就操作一下,秀操作的时候到了,有没有操作?(PS:老年人手速,也想有操作?) iptables的规则书写是有大小写区别的 首先我们不想别人ping我们的ip sudo iptables -A INPUT -p icmp -j DROP 其实完整的写法是下面这样的(需要指定是那张表),但是它默认就是filter表,而我们操作的也是filter表就省略了 sudo iptables -t filter -A INPUT -p icmp -j DROP 可以查看一下 sudo iptables -S 这样虽然别人不能ping我们了,但是我们发现自己也无法ping别人了,所以得改 这个iptables执行是按顺序一条一条从上向下执行的,所以我们想写在之前写的那条规则上面就要使用-I这个参数,insert将规则插入到最上面,如果后面再接一个数字的话,就是插入到指定第几条规则的上面 在这里我们可以看到icmp-type对应数字的意义,icmp-type 8代表echo request,就是别人ping我们时怎么回答 sudo iptables -I INPUT -p icmp --icmp-type 8 -j DROP 上面这句话就是别人ping我们时,我们不回答,直接丢弃.其实这里还是没有解决无法ping别人的问题,只是替代了上面那条规则 好,这里就写怎么解决ping别人.前面是别人ping我们时,发给我们的icmp数据包直接丢弃.而我们自己ping别人时是需要别人发给我们一个icmp回应包才算ping通的,所以就要接收这个包咯,前面不是说了不接受包吗?icmp-type 0就是接受我们发给别人后回传的数据包的.通过数据包类型的不同来区分到底是别人ping我们的数据包还是回传的数据包我们把这条规则加到最开始 sudo iptables -I INPUT 1 -p icmp --icmp-type 0 -j ACCEPT 还记得我们添加的第一条规则吗,没有作用了,我们把它删除 sudo iptables -D INPUT 3 然后查看一下现在的规则 sudo iptables -S 最后保存一下,以免下次开机这些规则就丢失了 su iptables-save &gt; /etc/iptables/iptables-rules]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iptables防火墙设置-基础]]></title>
    <url>%2F2019%2F04%2F25%2Fiptables%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE-%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[早就听闻iptables很难了,也一直没有学.但是呢,这么基础和重要的东西不掌握点总觉得缺点什么.是的,关闭端口/拒绝访问都不会,要我何用? archlinux安装系统的时候默认就已经安装好了iptables,只是没有开启而已,不信我们看一下就知道了 arch wiki上说开启这个服务首先需要有 /etc/iptables/iptables.rules这个文件,默认是没有的(但是我的系统上有是什么鬼?),没有就自己新建一个 sudo touch /etc/iptables/iptables.rules 或者复制一个 sudo cp /etc/iptables/empty.rules /etc/iptables/iptables.rules 然后就可以启动了 sudo systemctl start iptables 如果想要开机自动启动的话,就这样设置 sudo systemctl enable iptables 如果是使用的ipv6那么就这样设置(多个6而已) sudo systemctl start ip6tables sudo systemctl enable ip6tables 等等,我启动时竟然出错了? 终于找到原因了,那个iptables.rules文件中说了要清空内容,但是默认是没有清空的,删掉之后再启动就OK了(所以创建这个文件时还是用touch吧,不要copy的好) 可能现在写规则还是会出现一些错误提示,重启一下就ok 现在来写第一条规则,了解一下怎么保存规则的我想阻止别人ping 我的ip地址 iptables -A INPUT -p icmp -j DROP 查看写的这条规则: sudo iptables -nvL 现在写的这个可以临时生效,只要重启后就失效了,所以要保存这条规则,需将规则保存在/etc/iptables/iptables-rules中这条命令需要root权限,但是sudo来执行的话,好像有点问题.所以切换root用户操作 su iptables-save &gt; /etc/iptables/iptables-rules 搞定至此 ,在别的电脑上ping我的ip就ping不通了 开心]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gnome主题设置]]></title>
    <url>%2F2019%2F04%2F25%2Fgnome%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[怎么说呢,gnome主题确实做的不错,不过个人觉得mac的主题更好看,所以安装gnome后第一件事就是修改一下默认的主题 首先我们需要安装gnome-tweaks这个软件(好像安装gnome时已经安装了,忘了) ,用来做个性化设置 sudo pacman -S gnome-tweaks 主题分为三个部分:application(所有应用程序的主题),icons(所有图标的主题),shell(桌面最上面的状态栏的主题).所以在下载的时候需要注意了,有的主题包里面不一定包含了shell或者icons,可能安装之后发现最上面的状态栏并没有改变,其实是因为那个主题包不包含shell主题了 如果要改变shell,那么还需要安装一个插件,用来启用user themes(忘了要不要安装,好像默认已经安装上了).然后在设置中启用它 sudo pacman -S gnome-shell-extensions 然后就是去下载了opendesktop这个网站有很多主题,而链接里的这个主题包包含了application和shell主题.所以安装后application和shell的主题都可以被改变 如何安装,applications和shell主题可以放在~/.local/share/themes 这个目录下,icons可以放在~/.local/share/icons这个目录下或者可以直接放在家目录下,在家目录下新建.themes文件夹用来放application和shell主题,在家目录下新建.icons文件夹用来放icons主题. 把下载下来的压缩包解压之后放在对应文件夹下,然后打开tweaks设置就ok了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gnome设置默认file-manager]]></title>
    <url>%2F2019%2F04%2F25%2Fgnome%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4file-manager%2F</url>
    <content type="text"><![CDATA[安装ranger后，再打开filemanager时总是会默认用ranger打开，觉得十分不方便，但是在设置里找不到设置默认文件管理器的选项 所以需要手动设置：会用到一个叫 xdg-mime 的命令 mime:多用途Internet邮件扩展（MIME）类型 是一种标准化的方式来表示文档的性质和格式 格式：type/subtype gnome自带的文件管理器叫 nautilus 用下面命令来设置默认文件管理器 xdg-mime default org.gnome.Nautilus.desktop inode/directory 最后一行可以看到nautilus已经加进去了 也可以用下面的命令查看默认文件管理器 xdg-mime query default inode/directory]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux zsh安装配置]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux-zsh%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[zsh配置好了是很好看的 安装 zsh pacman -S zsh pacman -S zsh-completions 切换shell为zsh 查看现在使用的shell chsl -l 设置默认shell为zsh chsh -s /bin/zsh 切换为zsh zsh 基础配置添加以下到.zshrc里 autoload -Uz compinit promptinit compinit promptinit 查看自带的主题 prompt -l 然后选择一种 prompt xxx #xxx为主题名 我们发现这些主题并不是特别好看，所以安装 0h-my-zsh yay -S oh-my-zsh-git 安装这个之后我们就可以选择一种主题了例如： ZSH_THEME=&quot;agnoster&quot; 我们发现并不像下面这么好看 那是因为没有安装 powerline 这种字体，所以终端就无法显示这些箭头了。 git clone https://github.com/powerline/fonts.git --depth=1 cd fonts ./install.sh cd .. rm -rf fonts 重新打开一个终端就可以正常显示了 然后我们还可以找更多喜欢的 主题我比较喜欢 powerlevel9k 这款主题 sudo pacman -S zsh-theme-powerlevel9k 设置为终端主题 echo &apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme&apos; &gt;&gt; ~/.zshrc 这样设置之后已经很好看了，不过有些自带的图标显示不了 下载 Awesome-Terminal Fonts pacman -Syu awesome-terminal-fonts 然后配置一下 在.zshrc找到设置 powerlevel9k的位置，将下面的配置放到它上面 POWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos; 重新打开一个新的终端，就可以看到漂亮的主题了有关主题更多的配置，就照着这里 设置 好了 9.安装zsh-syntax-highlighting sudo pacman -S zsh-syntax-highlighting 我的 zsh配置文件 1234567891011121314151617181920212223242526272829export TERM=&quot;xterm-256color&quot; #common settingautoload -Uz compinit promptinitcompinitpromptinitzstyle &apos;:completion::complete:*&apos; gain-privileges 1zstyle &apos;:completion:*&apos; menu select#theme settingPOWERLEVEL9K_MODE=&apos;awesome-fontconfig&apos;source /usr/share/zsh-theme-powerlevel9k/powerlevel9k.zsh-themePOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(load dir vcs ssh dir_writable)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history newline)#use to highlight syntax like fishsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh#highlight man man() &#123; LESS_TERMCAP_md=$&apos;\e[01;31m&apos; \ LESS_TERMCAP_me=$&apos;\e[0m&apos; \ LESS_TERMCAP_se=$&apos;\e[0m&apos; \ LESS_TERMCAP_so=$&apos;\e[01;44;33m&apos; \ LESS_TERMCAP_ue=$&apos;\e[0m&apos; \ LESS_TERMCAP_us=$&apos;\e[01;32m&apos; \ command man &quot;$@&quot; &#125;#user aliasalias l=&apos;ls -lh --color=auto&apos;]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[firefox无法输入中文]]></title>
    <url>%2F2019%2F04%2F25%2Ffirefox%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%2F</url>
    <content type="text"><![CDATA[在parrotOS英文版上安装了fcitx输入框架和googlepinyin输入法，在终端可以输入中文，但是在firefox等浏览器里无法使用中文输入法解决方法：原来是local-gen里面没有设置中文环境。然后执行1sudo locale-gen 这样就可以在firefox里输入中文了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EncFS加密]]></title>
    <url>%2F2019%2F04%2F25%2FEncFS%E5%8A%A0%E5%AF%86%2F</url>
    <content type="text"><![CDATA[linux下面加密文件的方法还是比较多的，常见的vim，zip，tar等都可以加密。不过这里要说的是加密文件夹的一个软件：encfs 所有的路径都是绝对路径,假设文件都在家目录 假设要加密的是data这个文件夹，先创建一个存加密文件的.data文件夹。 mkdir ～/.data 加密data文件夹 encfs ~/.data ~/data 取消被加密的文件的挂载 fuser -u ~/data 重新挂载文件 encfs ~/.data ~/data]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux手动安装mysql-5.6.42]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85mysql-5-6-42%2F</url>
    <content type="text"><![CDATA[不像之前那样，一条命令就可以安装好，手动安装真的很麻烦。但是这么麻烦为什么还要安装呢？还不是因为mysql5.7以后版本有ssl加密，驱动包也不同，而我又不会，学习java又要用。哎，所以不得不手动安装。 ####参考教程多亏了网上的教程 教程1 教程2 下载的mysql版本是5.6.42,同样的方法，在5.5.42上没有成功。或许是之前步骤错误吧。 参考官网教程步骤都差不多，但是一定是把解压后的文件放到/usr/local/文件下。不然会有奇奇怪怪的问题。（ps：本来想放到自己的家目录的），我就是直接在/usr/local/下新建了一个mysql的文件夹，然后将解压的文件全部复制进去，没有做链接这个操作。 所有操作都基于root权限 ####具体安装步骤 很重要的一点是archlinux安装mysql后是启动不了的，因为缺少了一个aur的依赖包，所以先安装上。 pacman -S ncurses5-compat-libs 解压安装包。 tar -xvzf ~/Downloads/mysql-5.6.42-linux-glibc2.12-x86_64.tar.gz 添加mysql组。 groupadd mysql 添加mysql用户。 useradd -r -g mysql -s /bin/false mysql 进入安装目录，创建文件夹。 cd /usr/local mkdir mysql 把解压好的文件复制到安装目录。 cp -r ~/Downloads/mysql-5.6.42-linux-glibc2.12-x86_64/* /usr/local/mysql 修改文件的所属用户和组。 cd mysql &amp;&amp; chown -R mysql:mysql ./ 执行安装脚本。 ./scripts/mysql_install_db --user=mysql 再修改文件的所属用户和组 chown -R root:root ./ chown -R mysql:mysql data 启动mysql。 ./support-files/mysql.server start 修改密码。 ./bin/mysqladmin -u root -h localhost.localdomain password &apos;密码&apos; 启动mysql。 ./bin/mysql -uroot -p ####修改一些东西，方便下次启动 如果不做一些修改的话，那么每次都要进入/usr/share/mysql然后再执行启动命令，这样有点麻烦。 给启动服务命令加一个别名 vim .zshrc alias mysqld=&apos;sudo /usr/local/mysql/support-files/mysql.server&apos; 这样下次操作时，就只需要mysqld option mysqld start/stop/restart/status mysql不是系统命令，所以当你使用mysql命令登录时，会提示找不到此命令，所以做一个链接 ln -s /usr/local/mysql/bin/mysql /usr/bin/mysql 这样下次登录mysql就简单许多了 mysql -uroot -p ps:本来想将mysql.server加入systemd，然后利用systemctl来启动的，但是失败了，也不纠结了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装mysql和ssh]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85mysql%E5%92%8Cssh%2F</url>
    <content type="text"><![CDATA[mysql安装 1.使用pacman查看mysql版本 sudo pacman -Si mysql 2.下载安装mysql sudo pacman -S mysql 仔细看安装的说明，里面有介绍初始化安装的步骤 3.初始化安装 sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql 仔细看初始化安装的输出，里面有初始登录的密码 4.启动mysql，archlinux使用的是systemd sudo systemctl start mysqld.service 5.查看mysql服务是否启动 systemctl status mysqld.service 6.连接mysql数据库 mysql -uroot -p 输入上面的临时密码 7.可以看到提示说需要修改密码 alter user user() identified by &apos;新密码&apos; 密码长度太短会报错。。。。。。 8.好了，密码修改成功了，可以退出去然后再用新密码进来 exit mysql -uroot -p 输入新密码进入数据库，然后就可以操作了 9.下次登录就可以直接启动了 sudo systemctl start mysqld.service mysql -uroot -p 10.如果你想让mysql服务开机自启动 sudo systemctl enable mysqld.service ssh远程连接 安装ssh pacman -S openssh 系统开启ssh服务 systemctl start sshd.service ip -color addr show #查看ip地址 然后在其他终端就可以连接了 ssh 用户名@地址]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装marktext(创建快捷方式)]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85marktext-%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[Mark Text is a Markdown editor for Mac, Windows, and Linux. It is a concise text editor, dedicated to improving your editing efficiency. 最近想用markdown记笔记，所以选择了marktext.由于通过aur安装失败，所以直接在官网下载并安装 下载完，解压之后就可以直接使用 cd .local/marktext-0.13.65 ./marktext 这样使用是没有问题的，但是有点麻烦，因为通过搜索软件那样直接搜是搜不到的（环境变量没有设置），而且没有图标。所以呢，就自己创建一个快捷方式（当然也可以使用ln 来创建软连接，然后。。。。），不过这里我使用了另外的一个方式 首先去官网把logo图片下载下来，并移动到marktext的安装目录 在gnome桌面环境下，app的桌面快捷方式在~/.local/share/applications下 cd /home/narcissus/.local/share/applications touch marktext.desktop vim marktext.desktop 然后添加下面信息12345678[Desktop Entry]Version=0.13.65Type=ApplicationName=marktextIcon=/home/narcissus/.local/marktext-0.13.65/logo.pngExec=&quot;/home/narcissus/.local/marktext-0.13.65/marktext&quot; %fCategories=Development;Terminal=false 然后就可以搜索到了]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装之后的配置]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85%E4%B9%8B%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[安装软件 1.pacman的使用（以前介绍的不全，现在补上） pacman -Syu 升级系统pacman -Ss 搜索软件pacman -Si 查看软件详细信息pacman -S 安装软件pacman -Rs 删除软件pacman -Qs 查询已安装软件pacman -Qi 查询已安装软件详细信息这两个查询命令有啥作用呢？可以把已安装的软件导出到一个文件里面去，下次安装系统就知道要安装那么东西了。 a 如果想指定某些软件不更新，该怎么做？例如我不想更新mate-desktop这个软件，那么就修改 /etc/pacman.conf 这个文件，ignorepkg后面写上不需要更新的软件名就好了 b 是不是每次搜索软件的时候终端搜索出来的结果都很难看（都是一个颜色），去掉color的注释就好了 一些必备应用： 字体：ttf-dejavu ttf-inconsolata ； 资源查看：htop； 终端图片查看：feh (used for x window , set desktop background)； 编辑器： vim ； 终端文件管理器：ranger 终端视频播放器：mplayer 2.配置aur来启用更多的软件库 : 找到aur源，选择一种 比如添加163源 1vim /etc/pacman.conf 123## 网易 (ipv4, http, https)[archlinuxcn]Server = https://mirrors.163.com/archlinux-cn/$arch 然后需要安装archlinuxcn签名 pacman -S archlinuxcn-keyring 然后安装一个aur的包管理器比如安装：yay1pacman -S git 123git clone https://aur.archlinux.org/yay.gitcd yaymakepkg -si 然后就可以使用yay来安装软件了 3.firefox 123pacman -S firefoxpacman -S wqy-microhei #firefox显示中文pacman -S flashplugin #firefox播放视频 4.安装搜狗输入法 123pacman -S fcitxpacman -S fcitx-configtoolpacman -S fcitx-im 1yay -S fcitx-sogoupinyin 如果使用的是wayland，那么在1234```GTK_IM_MODULE=fcitxQT_IM_MODULE=fcitxXMODIFIERS=@im=fcitx 如果使用xorg，则添加到12* 5.安装网易云音乐 yay -S netease-cloud-music1* 6.安装urxvt，以及配置xterm pacman -S rxvt-unicode1配置：新建.Xresources touch .Xresources1234567891011121314151617181920212223242526272829303132333435363738394041424344454647```URxvt.font: xft:Inconsolata:style=bole:pixelsize=22URxvt.letterSpace: +1URxvt.scrollBar_right: TrueURxvt.cursorBlink:TrueURxvt.cursorColor:#DCB36AURxvt.cursorUnderline:FalseURxvt.pointerBlankDelay:1URxvt.saveLines:1000URxvt.background:#002B35URxvt.foreground:#839496URxvt.scrollBar:falseURxvt.inheritPixmap: trueURxvt.tintCddolor:white URxvt.shading:40 URxvt.colorBD:#78E3BFURxvt.colorUL:#D7D2BC! ColorsURxvt*color0: #000000URxvt*color8: #686868URxvt*color1: #B21818URxvt*color9: #FF5454URxvt*color2: #18B218URxvt*color10: #7EDD7EURxvt*color3: #B26818URxvt*color11: #FFFF54URxvt*color4: #14477bURxvt*color12: #2578cbURxvt*color5: #B218B2URxvt*color13: #FF54FFURxvt*color6: #18B2B2URxvt*color14: #6ADCDCURxvt*color7: #B2B2B2URxvt*color15: #FFFFFFURxvt*iso14755:falseURxvt*iso14755_52:falseURxvt.urlLauncher:firefoxURxvt.urgentOnBell:TrueURxvt.fade:50URxvt.fadecolor:grayURxvt.highlightColor:#BDBC6AURxvt.highlightTextColor:black 配置xterm1vim .Xresources 1234567!XTerm.vt100.faceName:Libration Mono:size=14:antialias=falseXTerm.vt100.faceName:Inconsolata Mono:size=14:antialias=falseXTerm.vt100.foreground: blackXTerm.vt100.background: #DEDEDEXTerm.vt100.color0: rgb:28/28/28XTerm.vt100.color15: rgb:e4/e4/e4 让配置生效1xrdb .Xresources 如果使用的是xorg，就需要将这句加入.xinitrc (cp /etc/X11/xinit/xinitrc ~/.xinitrc)如果使用wayland，加入.bash_profile]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Archlinux安装]]></title>
    <url>%2F2019%2F04%2F25%2FArchlinux%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Archlinux的安装还是不算简单，所以需要记录一下安装步骤。 1.默认tty字体太小，输命令前当然是将终端的字体调大一些 setfont /usr/share/kbd/consolefonts/iso01-12x22.psfu.gz 2.由于安装是在线下载的，所以需要有网络连接，最好是有线连接了，无线连接有点麻烦 rfkill unblock all wifi-menu #搜索网络 ping -c 3 archlinux.org #查看是否连接上 如果连接不上那就比较麻烦了，试着重启下dhcpcd服务 systemctl stop dhcpcd &amp;&amp; systemctl start dhcpcd 一些手动连接的方法，以后再补充 3.磁盘分区，分区方法比较多，我选择用cfdisk 需要分出一块100MB的esp分区来安装grub（esp分区采用fat文件类型），一块root分区来安装系统（linux系统采用ext4这种文件类型） lsblk #查看分区名 cfdisk /dev/sdxy #x代表a/b/c,y代表数字 4.格式化分区 mkfs.vat /dev/sdxy #x代表a/b/c,y代表数字，这里格式化esp分区为fat格式 mkfs..ext4 /dev/sdxy #x代表a/b/c,y代表数字，这里格式化root为ext4格式 5.磁盘分好了之后就可以安装系统了，先将分区挂载上来 mount /dev/sdxy /mnt #这里先挂载root分区到/mnt下 mkdir -p /mnt/boot/efi #然后建文件夹来挂载esp分区 mount /dev/sdxy /mnt/boot/efi #将esp分区挂载到新建的文件下 6.安装之前要选择国内的源，这样下载的速度才快，不然会等到花都谢了 vim /etc/pacman.d/mirrorlis 将这里面的china源移动到文件开头就像下面一样 7.安装基础包到挂载的root分区里，都是系统启动必须的 pacstrap /mnt base base-devel #(base-devel is optional) 如果你制作的启动盘是比较早的版本，那么这里可能会出现安装不了的问题，需要安装archlinux-keyring来解决这个问题。没有问题则跳过 pacman -Sy archlinux-keyring &amp;&amp; pacman -Su 8.接下来就是将磁盘挂载的信息写到fstab这个文件夹里 genfstab -U /mnt &gt;&gt; /mnt/etc/fstab 9.现在需要对系统进行设置，所以改变root目录到新系统里 arch-chroot /mnt 10.设置时区 ln -sf /usr/share/zoneinfo/*Region*/*City* /etc/localtime 11.设置语言环境Locale vim /etc/locale.gen 由于要使用中文的输入法或者中文系统语言的，所以 zh_CN.UTF-8 UTF-8 和en_US.UTF-8 UTF-8是要选择的 locale-gen #生成配置 12.设置系统名和用户名 设置系统名 touch /etc/hostnamevim /etc/hostname 用户设置 vim /etc/hosts 进行如下设置 127.0.0.1 localhost.localdomain localhost::1 localhost.localdomain localhost127.0.1.1 myhostname.localdomain myhostname 13.下载网络连接所需要的软件 无线网要安装这些才方便使用 pacman -S iw wpa_supplicant dialog netctl 当然了安装一个网络管理软件可以少许多不必要的配置 pacman -S NetworkManager 14.设置root用户的密码（输入密码时是没有显示的，这是一种安全保护措施） passwd 15.1安装grub启动管理器 os-prober是为了检测windows（双系统）而安装的，不安装也可以手动配置。安装重启后第一次启动是检测不到的，需要再配置一次grub pacman -S grub efibootmgr os-prober grub-mkconfig -o /boot/grub/grub.cfg grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub 15.2以前一直安装的是grub，觉得安装也挺简单，但是最近却出了一些问题，安装的时候会提示grub无法安装到efi分区，空间不足。由于找不到解决的办法，所以选择了另外一种启动器：refind pacman -S refind 安装的时候有点小复杂 refind-install #由于使用的是liveiso安装的，所以还需要手动调整 mkdir /boot/efi/EFI/BOOT #新建一个文件夹 cp /boot/efi/EFI/refind/refind_x64.efi /boot/efi/EFI/BOOT/bootx64.efi #将refind加入启动项 cp /usr/share/refind/refind_linux.conf-sample /boot/refind_linux.conf 然后修改一下refind_linux.conf.(我还修改了fstab和refind.conf，因为我用lsblk -f的时候找不到uuid，奇怪得很：）) vim /boot/refind_linux.conf 16.好了，基本系统已经安装完成。取消挂载的磁盘分区，然后重启 exit umount -R /mnt reboot ##重启之后就是安装其它需要的软件了 1.为了检测到windows，再运行一次这条命令 grub-mkconfig -o /boot/grub/grub.cfg 2.允许联网，启用网络模块 rfkill unblock all &amp;&amp; dhcpcd systemctl enable dhcpcd 3.简单的网络连接命令 wifi-menu 4.添加用户，并加入sudoer（可以执行sudo命令） useradd -m -G wheel -s /bin/bash dove passwd dove 用户加入sudoer visudo 5.安装显示服务，可以选择xorg或者wayland。现在wayland支持度已经不错了，比如gnome和kde就是默认使用wayland的。 可以安装xorg pacman -S xorg 或者安装wayland配合gnome用 pacman -S wayland 6.安装显卡驱动 inter显卡驱动 pacman -S xf86-video-intel (intel driver) nvida显卡驱动 pacman -S xf86-video-nouveau (nvidia driver) 或者 pacman -S xf86-video-vesa (common deriver) 7.安装声卡驱动 (include alsamixer and amixer(a shell command tool)) pacman -S alsa-utils 这里就有很多选择了，可以只安装窗口管理器（节约系统资源），也可以安装桌面环境（集成度高，开箱即用的这种）。可以体验一下无限种可能的感觉 1 窗口管理器 1.1安装平铺窗口管理器，这个安装配置好了之后很好用的。当然了，配置过程相当费时间(我喜欢的组合是 xmonad and xmobar plus dmenu) pacman -S xmonad pacman -S xmobar pacman -S dmenu 1.2.为了能够使用startx来进入窗口管理器需要安装基础的软件 pacman -S xorg-xinit # (get the command startx) pacman -S xterm #(when we type startx then this is important for that .xinitrc use xterm by default.and it can be changed by urxvt )# pacman -S rxvt-unioncode (i prefer this one for it can show chinese) 1.3.然后还要在文件里配置一下，才可以使用startx进入窗口管理器xmond cp /etc/X11/xinit/xinitrc ~/.xinitrc 然后添加 exec xmonad to .xinitrc 现在就可以进入xmond的世界了，不过没有配置的xmond是你不敢想象的 startx 如果想开机直接进入xmond，而不用每次都敲startx，那么修改一下~/.bash_profile vim .bash_profile 添加 if [ -z &quot;$DISPLAY&quot; ] &amp;&amp; [ -n &quot;$XDG_VTNR&quot; ] &amp;&amp; [ &quot;$XDG_VTNR&quot; -eq 1 ]; then exec startxfi 好了，一个完整系统已经安装好了。进入xmond后的一些小的配置 make super key instead of capslock#xmodmap -pke //show key map and find capslock is 66 super_l is 133 super_r is 134#touch .xmodmap //used to set settingsthen add this command like this: !delete fake super key keycode 133 = keycode 134 = !change Caps_Lock to Super_L keycode 66 = Super_L !clear lock clear lock !clear all mod_s with Super key clear mod4 ! add our new Super key add mod4 = Super_L then run command to make it work#xmodmap ./.xmodmapafter that we can add this command (xmodmap ~/.xmodmap &amp;) to ~/.xinitrc ,then it will work every time we log into x window 2.in order to use xbacklight to adjust backlight we should install xf86-video-intel#pacman -S xf86-video-inteland then run command like this to adjust screen light#xbacklight -set 40 2 接下来是安装另一种：桌面环境 这里可能安装软件的时候会失败，原因是签名不对，所以先安装签名pacman -S archlinux-keyring 2.1安装gnome桌面环境 pacman -S gnome 2.2安装额外的一些包，包含了许多有用的软件 pacman -S gnome-extra 2.3安装logoin管理器 pacman -S gdm systemctl enable gdm #开启gdm服务，开机自启 2.4安装xorg-server-xwayland来启动某些不支持wayland的应用 pacman -S xorg-server-xwayland 2.5安装gnome的个性化设置软件 pacman -S gnome-tweak （可选）2.6启动wayland服务，在.bash_profile中添加 if [[ -z $DISPLAY ]] &amp;&amp; [[ $(tty) = /dev/tty1 ]] &amp;&amp; [[ -z $XDG_SESSION_TYPE ]]; then XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session fi]]></content>
      <categories>
        <category>linux</category>
        <category>archlinux</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于github和hexo的个人博客搭建步骤]]></title>
    <url>%2F2019%2F04%2F25%2F%E5%9F%BA%E4%BA%8Egithub%E5%92%8Chexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[路漫漫其修远兮，吾将上下而求索 原理 本地编写markdown文件，选择一个喜欢的hexo主题，使用hexo框架生成静态网页，利用git将本地文件推送到github代码托管平台，然后通过网址进行访问（这里也可以自己注册域名，在github上进行绑定，然后可以通过自己的域名来访问网站） github是一个代码托管平台，用来存放网页文件，当做服务器使用 hexo是基于node.js的静态博客框架，用来生成html静态网页 git是一个分布式版本控制系统，用来将本地文件推送到github上 必备技能 markdown编写能力（十分钟就可以掌握，超简单的） github注册账号，创建仓库 git的基本使用 步骤安装node.js git hexo archlinux上安装比较简单 pacman -S nodejs git npm install -g hexo-cli #这里可能需要花费点时间，也可能会报错，不用管就ok npm install --save hexo-deployer-git #解决后面发布时找不到git的问题 windows安装 [git]([https://git-scm.com/downloa](https://link.jianshu.com?t=https%3A%2F%2Fgit-scm.com%2Fdownloads) [node.js]([https://nodejs.org/en/](https://link.jianshu.com?t=https%3A%2F%2Fnodejs.org%2Fen%2F) 上面两个安装好了之后打开cmd npm install -g hexo-cli 新建存放hexo的文件夹 archlinux 1mkdir hexodir windows 1随便找个地方新建一个文件夹就好了 # 初始化hexo需要进入到新建的文件夹下面操作 linux 123cd hexodirhexo initnpm install windows 进入hexo文件夹下面，打开cmd 12hexo initnpm init 使用hexo生成静态html文件进入到hexo文件下，windows打开cmd，linux打开终端 1hexo generate 或者简写为 1hexo g 本地启动服务1hexo server 或者简写为 1hexo s 使用浏览器访问1http://localhost:4000/ 如果能打开网页，说明本地已经配置好了 在github上面创建仓库 如果没有github，先去注册一个 git与github连接需要使用ssh，所以需要生成ssh 密匙。 1ssh-keygen linux在~/.ssh下生成id_rsa.pub文件，复制文件内容 复制id_rsa.pub文件内容，添加到key中 配置hexo，与github关联起来编辑hexodir文件夹下面的_config.yml文件，最后面添加 1234deloy: type: git rpeo: git@github.com:用户名/仓库名.git branch: master 将本地文件推送到github上面12hexo generatehexo deploy 或者简写为 12 hexo g hexo d 然后打开网址就能看到自己的网站了 配置自己喜欢的主题 在官网选择自己喜欢的主题 将主题下载到hexodir下的themes目录下，比如我下载的next主题 12cd hexodirgit clone https://github.com/iissnan/hexo-theme-next themes/next 修改hexodir目录下的_config.yml配置文件,修改theme 1 theme: next 然后重新生成静态网页，并将网页推送到github上 1 hexo g &amp;&amp; hexo d]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
